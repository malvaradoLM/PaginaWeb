//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LibraryFlotillas
{
    using System;
    using System.Collections.Generic;
    using RemObjects.SDK;
    using RemObjects.SDK.Types;
    using RemObjects.DataAbstract.Server;


    [System.Serializable()]
    [RemObjects.SDK.Remotable(ActivatorClass = typeof(TLoginInfoF_Activator))]
    [System.Reflection.ObfuscationAttribute(Exclude = true)]
    public partial class TLoginInfoF : RemObjects.SDK.Types.ComplexType
    {

        private bool @__Valida;

        private int @__EmpleadoID;

        private string @__NombreEmpleado;

        private TOpcionF[] @__Accesos;

        public virtual bool Valida
        {
            get
            {
                return @__Valida;
            }
            set
            {
                @__Valida = value;
                this.TriggerPropertyChanged("Valida");
            }
        }

        public virtual int EmpleadoID
        {
            get
            {
                return @__EmpleadoID;
            }
            set
            {
                @__EmpleadoID = value;
                this.TriggerPropertyChanged("EmpleadoID");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string NombreEmpleado
        {
            get
            {
                return @__NombreEmpleado;
            }
            set
            {
                @__NombreEmpleado = value;
                this.TriggerPropertyChanged("NombreEmpleado");
            }
        }

        public virtual TOpcionF[] Accesos
        {
            get
            {
                return @__Accesos;
            }
            set
            {
                @__Accesos = value;
                this.TriggerPropertyChanged("Accesos");
            }
        }

        public override void ReadComplex(RemObjects.SDK.Serializer serializer)
        {
            if (serializer.RecordStrictOrder)
            {
                Valida = serializer.ReadBoolean("Valida");
                EmpleadoID = serializer.ReadInt32("EmpleadoID");
                NombreEmpleado = serializer.ReadAnsiString("NombreEmpleado");
                Accesos = ((TOpcionF[])(serializer.Read("Accesos", typeof(TOpcionF[]), RemObjects.SDK.StreamingFormat.Default)));
            }
            else
            {
                Accesos = ((TOpcionF[])(serializer.Read("Accesos", typeof(TOpcionF[]), RemObjects.SDK.StreamingFormat.Default)));
                EmpleadoID = serializer.ReadInt32("EmpleadoID");
                NombreEmpleado = serializer.ReadAnsiString("NombreEmpleado");
                Valida = serializer.ReadBoolean("Valida");
            }
        }

        public override void WriteComplex(RemObjects.SDK.Serializer serializer)
        {
            if (serializer.RecordStrictOrder)
            {
                serializer.WriteBoolean("Valida", Valida);
                serializer.WriteInt32("EmpleadoID", EmpleadoID);
                serializer.WriteAnsiString("NombreEmpleado", NombreEmpleado);
                serializer.Write("Accesos", Accesos, typeof(TOpcionF[]), RemObjects.SDK.StreamingFormat.Default);
            }
            else
            {
                serializer.Write("Accesos", Accesos, typeof(TOpcionF[]), RemObjects.SDK.StreamingFormat.Default);
                serializer.WriteInt32("EmpleadoID", EmpleadoID);
                serializer.WriteAnsiString("NombreEmpleado", NombreEmpleado);
                serializer.WriteBoolean("Valida", Valida);
            }
        }
    }

    [RemObjects.SDK.Activator()]
    [System.Reflection.ObfuscationAttribute(Exclude = true, ApplyToMembers = false)]
    public class TLoginInfoF_Activator : object, RemObjects.SDK.ITypeActivator
    {

        public TLoginInfoF_Activator()
        {
        }

        public object CreateInstance()
        {
            return new TLoginInfoF();
        }
    }

    [System.Serializable()]
    [RemObjects.SDK.Remotable(ActivatorClass = typeof(TOpcionF_Activator))]
    [System.Reflection.ObfuscationAttribute(Exclude = true)]
    public partial class TOpcionF : RemObjects.SDK.Types.ComplexType
    {

        private int @__OpcionID;

        private string @__Nombre;

        public virtual int OpcionID
        {
            get
            {
                return @__OpcionID;
            }
            set
            {
                @__OpcionID = value;
                this.TriggerPropertyChanged("OpcionID");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string Nombre
        {
            get
            {
                return @__Nombre;
            }
            set
            {
                @__Nombre = value;
                this.TriggerPropertyChanged("Nombre");
            }
        }

        public override void ReadComplex(RemObjects.SDK.Serializer serializer)
        {
            if (serializer.RecordStrictOrder)
            {
                OpcionID = serializer.ReadInt32("OpcionID");
                Nombre = serializer.ReadAnsiString("Nombre");
            }
            else
            {
                Nombre = serializer.ReadAnsiString("Nombre");
                OpcionID = serializer.ReadInt32("OpcionID");
            }
        }

        public override void WriteComplex(RemObjects.SDK.Serializer serializer)
        {
            if (serializer.RecordStrictOrder)
            {
                serializer.WriteInt32("OpcionID", OpcionID);
                serializer.WriteAnsiString("Nombre", Nombre);
            }
            else
            {
                serializer.WriteAnsiString("Nombre", Nombre);
                serializer.WriteInt32("OpcionID", OpcionID);
            }
        }
    }

    [RemObjects.SDK.Activator()]
    [System.Reflection.ObfuscationAttribute(Exclude = true, ApplyToMembers = false)]
    public class TOpcionF_Activator : object, RemObjects.SDK.ITypeActivator
    {

        public TOpcionF_Activator()
        {
        }

        public object CreateInstance()
        {
            return new TOpcionF();
        }
    }

    [System.Serializable()]
    [RemObjects.SDK.Remotable(ActivatorClass = typeof(TDatosFactura_Activator))]
    [System.Reflection.ObfuscationAttribute(Exclude = true)]
    public partial class TDatosFactura : RemObjects.SDK.Types.ComplexType
    {

        private TFactura @__Factura;

        private TDetalleFactura[] @__DetalleFactura;

        private TDetalleCupon[] @__DetalleCupon;

        public virtual TFactura Factura
        {
            get
            {
                return @__Factura;
            }
            set
            {
                @__Factura = value;
                this.TriggerPropertyChanged("Factura");
            }
        }

        public virtual TDetalleFactura[] DetalleFactura
        {
            get
            {
                return @__DetalleFactura;
            }
            set
            {
                @__DetalleFactura = value;
                this.TriggerPropertyChanged("DetalleFactura");
            }
        }

        public virtual TDetalleCupon[] DetalleCupon
        {
            get
            {
                return @__DetalleCupon;
            }
            set
            {
                @__DetalleCupon = value;
                this.TriggerPropertyChanged("DetalleCupon");
            }
        }

        public override void ReadComplex(RemObjects.SDK.Serializer serializer)
        {
            if (serializer.RecordStrictOrder)
            {
                Factura = ((TFactura)(serializer.Read("Factura", typeof(TFactura), RemObjects.SDK.StreamingFormat.Default)));
                DetalleFactura = ((TDetalleFactura[])(serializer.Read("DetalleFactura", typeof(TDetalleFactura[]), RemObjects.SDK.StreamingFormat.Default)));
                DetalleCupon = ((TDetalleCupon[])(serializer.Read("DetalleCupon", typeof(TDetalleCupon[]), RemObjects.SDK.StreamingFormat.Default)));
            }
            else
            {
                DetalleCupon = ((TDetalleCupon[])(serializer.Read("DetalleCupon", typeof(TDetalleCupon[]), RemObjects.SDK.StreamingFormat.Default)));
                DetalleFactura = ((TDetalleFactura[])(serializer.Read("DetalleFactura", typeof(TDetalleFactura[]), RemObjects.SDK.StreamingFormat.Default)));
                Factura = ((TFactura)(serializer.Read("Factura", typeof(TFactura), RemObjects.SDK.StreamingFormat.Default)));
            }
        }

        public override void WriteComplex(RemObjects.SDK.Serializer serializer)
        {
            if (serializer.RecordStrictOrder)
            {
                serializer.Write("Factura", Factura, typeof(TFactura), RemObjects.SDK.StreamingFormat.Default);
                serializer.Write("DetalleFactura", DetalleFactura, typeof(TDetalleFactura[]), RemObjects.SDK.StreamingFormat.Default);
                serializer.Write("DetalleCupon", DetalleCupon, typeof(TDetalleCupon[]), RemObjects.SDK.StreamingFormat.Default);
            }
            else
            {
                serializer.Write("DetalleCupon", DetalleCupon, typeof(TDetalleCupon[]), RemObjects.SDK.StreamingFormat.Default);
                serializer.Write("DetalleFactura", DetalleFactura, typeof(TDetalleFactura[]), RemObjects.SDK.StreamingFormat.Default);
                serializer.Write("Factura", Factura, typeof(TFactura), RemObjects.SDK.StreamingFormat.Default);
            }
        }
    }

    [RemObjects.SDK.Activator()]
    [System.Reflection.ObfuscationAttribute(Exclude = true, ApplyToMembers = false)]
    public class TDatosFactura_Activator : object, RemObjects.SDK.ITypeActivator
    {

        public TDatosFactura_Activator()
        {
        }

        public object CreateInstance()
        {
            return new TDatosFactura();
        }
    }

    [System.Serializable()]
    [RemObjects.SDK.Remotable(ActivatorClass = typeof(TFactura_Activator))]
    [System.Reflection.ObfuscationAttribute(Exclude = true)]
    public partial class TFactura : RemObjects.SDK.Types.ComplexType
    {

        private int @__ClienteID;

        private int @__Ejercicio;

        private int @__FacturaID;

        private System.DateTime @__Fecha;

        private System.DateTime @__FechaImpresion;

        private System.DateTime @__FechaVencimiento;

        private int @__Folio;

        private double @__Impuesto;

        private int @__MovimientoID;

        private double @__Saldo;

        private string @__Serie;

        private double @__Subtotal;

        private string @__Tickets;

        private double @__Total;

        private int @__UsuarioID;

        private int @__Periodo;

        private double @__IVA;

        private int @__EstacionID;

        private bool @__NotaCredito;

        private double @__Descuento;

        public virtual int ClienteID
        {
            get
            {
                return @__ClienteID;
            }
            set
            {
                @__ClienteID = value;
                this.TriggerPropertyChanged("ClienteID");
            }
        }

        public virtual int Ejercicio
        {
            get
            {
                return @__Ejercicio;
            }
            set
            {
                @__Ejercicio = value;
                this.TriggerPropertyChanged("Ejercicio");
            }
        }

        public virtual int FacturaID
        {
            get
            {
                return @__FacturaID;
            }
            set
            {
                @__FacturaID = value;
                this.TriggerPropertyChanged("FacturaID");
            }
        }

        public virtual System.DateTime Fecha
        {
            get
            {
                return @__Fecha;
            }
            set
            {
                @__Fecha = value;
                this.TriggerPropertyChanged("Fecha");
            }
        }

        public virtual System.DateTime FechaImpresion
        {
            get
            {
                return @__FechaImpresion;
            }
            set
            {
                @__FechaImpresion = value;
                this.TriggerPropertyChanged("FechaImpresion");
            }
        }

        public virtual System.DateTime FechaVencimiento
        {
            get
            {
                return @__FechaVencimiento;
            }
            set
            {
                @__FechaVencimiento = value;
                this.TriggerPropertyChanged("FechaVencimiento");
            }
        }

        public virtual int Folio
        {
            get
            {
                return @__Folio;
            }
            set
            {
                @__Folio = value;
                this.TriggerPropertyChanged("Folio");
            }
        }

        public virtual double Impuesto
        {
            get
            {
                return @__Impuesto;
            }
            set
            {
                @__Impuesto = value;
                this.TriggerPropertyChanged("Impuesto");
            }
        }

        public virtual int MovimientoID
        {
            get
            {
                return @__MovimientoID;
            }
            set
            {
                @__MovimientoID = value;
                this.TriggerPropertyChanged("MovimientoID");
            }
        }

        public virtual double Saldo
        {
            get
            {
                return @__Saldo;
            }
            set
            {
                @__Saldo = value;
                this.TriggerPropertyChanged("Saldo");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string Serie
        {
            get
            {
                return @__Serie;
            }
            set
            {
                @__Serie = value;
                this.TriggerPropertyChanged("Serie");
            }
        }

        public virtual double Subtotal
        {
            get
            {
                return @__Subtotal;
            }
            set
            {
                @__Subtotal = value;
                this.TriggerPropertyChanged("Subtotal");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string Tickets
        {
            get
            {
                return @__Tickets;
            }
            set
            {
                @__Tickets = value;
                this.TriggerPropertyChanged("Tickets");
            }
        }

        public virtual double Total
        {
            get
            {
                return @__Total;
            }
            set
            {
                @__Total = value;
                this.TriggerPropertyChanged("Total");
            }
        }

        public virtual int UsuarioID
        {
            get
            {
                return @__UsuarioID;
            }
            set
            {
                @__UsuarioID = value;
                this.TriggerPropertyChanged("UsuarioID");
            }
        }

        public virtual int Periodo
        {
            get
            {
                return @__Periodo;
            }
            set
            {
                @__Periodo = value;
                this.TriggerPropertyChanged("Periodo");
            }
        }

        public virtual double IVA
        {
            get
            {
                return @__IVA;
            }
            set
            {
                @__IVA = value;
                this.TriggerPropertyChanged("IVA");
            }
        }

        public virtual int EstacionID
        {
            get
            {
                return @__EstacionID;
            }
            set
            {
                @__EstacionID = value;
                this.TriggerPropertyChanged("EstacionID");
            }
        }

        public virtual bool NotaCredito
        {
            get
            {
                return @__NotaCredito;
            }
            set
            {
                @__NotaCredito = value;
                this.TriggerPropertyChanged("NotaCredito");
            }
        }

        public virtual double Descuento
        {
            get
            {
                return @__Descuento;
            }
            set
            {
                @__Descuento = value;
                this.TriggerPropertyChanged("Descuento");
            }
        }

        public override void ReadComplex(RemObjects.SDK.Serializer serializer)
        {
            if (serializer.RecordStrictOrder)
            {
                ClienteID = serializer.ReadInt32("ClienteID");
                Ejercicio = serializer.ReadInt32("Ejercicio");
                FacturaID = serializer.ReadInt32("FacturaID");
                Fecha = serializer.ReadDateTime("Fecha");
                FechaImpresion = serializer.ReadDateTime("FechaImpresion");
                FechaVencimiento = serializer.ReadDateTime("FechaVencimiento");
                Folio = serializer.ReadInt32("Folio");
                Impuesto = serializer.ReadDouble("Impuesto");
                MovimientoID = serializer.ReadInt32("MovimientoID");
                Saldo = serializer.ReadDouble("Saldo");
                Serie = serializer.ReadAnsiString("Serie");
                Subtotal = serializer.ReadDouble("Subtotal");
                Tickets = serializer.ReadAnsiString("Tickets");
                Total = serializer.ReadDouble("Total");
                UsuarioID = serializer.ReadInt32("UsuarioID");
                Periodo = serializer.ReadInt32("Periodo");
                IVA = serializer.ReadDouble("IVA");
                EstacionID = serializer.ReadInt32("EstacionID");
                NotaCredito = serializer.ReadBoolean("NotaCredito");
                Descuento = serializer.ReadDouble("Descuento");
            }
            else
            {
                ClienteID = serializer.ReadInt32("ClienteID");
                Descuento = serializer.ReadDouble("Descuento");
                Ejercicio = serializer.ReadInt32("Ejercicio");
                EstacionID = serializer.ReadInt32("EstacionID");
                FacturaID = serializer.ReadInt32("FacturaID");
                Fecha = serializer.ReadDateTime("Fecha");
                FechaImpresion = serializer.ReadDateTime("FechaImpresion");
                FechaVencimiento = serializer.ReadDateTime("FechaVencimiento");
                Folio = serializer.ReadInt32("Folio");
                Impuesto = serializer.ReadDouble("Impuesto");
                IVA = serializer.ReadDouble("IVA");
                MovimientoID = serializer.ReadInt32("MovimientoID");
                NotaCredito = serializer.ReadBoolean("NotaCredito");
                Periodo = serializer.ReadInt32("Periodo");
                Saldo = serializer.ReadDouble("Saldo");
                Serie = serializer.ReadAnsiString("Serie");
                Subtotal = serializer.ReadDouble("Subtotal");
                Tickets = serializer.ReadAnsiString("Tickets");
                Total = serializer.ReadDouble("Total");
                UsuarioID = serializer.ReadInt32("UsuarioID");
            }
        }

        public override void WriteComplex(RemObjects.SDK.Serializer serializer)
        {
            if (serializer.RecordStrictOrder)
            {
                serializer.WriteInt32("ClienteID", ClienteID);
                serializer.WriteInt32("Ejercicio", Ejercicio);
                serializer.WriteInt32("FacturaID", FacturaID);
                serializer.WriteDateTime("Fecha", Fecha);
                serializer.WriteDateTime("FechaImpresion", FechaImpresion);
                serializer.WriteDateTime("FechaVencimiento", FechaVencimiento);
                serializer.WriteInt32("Folio", Folio);
                serializer.WriteDouble("Impuesto", Impuesto);
                serializer.WriteInt32("MovimientoID", MovimientoID);
                serializer.WriteDouble("Saldo", Saldo);
                serializer.WriteAnsiString("Serie", Serie);
                serializer.WriteDouble("Subtotal", Subtotal);
                serializer.WriteAnsiString("Tickets", Tickets);
                serializer.WriteDouble("Total", Total);
                serializer.WriteInt32("UsuarioID", UsuarioID);
                serializer.WriteInt32("Periodo", Periodo);
                serializer.WriteDouble("IVA", IVA);
                serializer.WriteInt32("EstacionID", EstacionID);
                serializer.WriteBoolean("NotaCredito", NotaCredito);
                serializer.WriteDouble("Descuento", Descuento);
            }
            else
            {
                serializer.WriteInt32("ClienteID", ClienteID);
                serializer.WriteDouble("Descuento", Descuento);
                serializer.WriteInt32("Ejercicio", Ejercicio);
                serializer.WriteInt32("EstacionID", EstacionID);
                serializer.WriteInt32("FacturaID", FacturaID);
                serializer.WriteDateTime("Fecha", Fecha);
                serializer.WriteDateTime("FechaImpresion", FechaImpresion);
                serializer.WriteDateTime("FechaVencimiento", FechaVencimiento);
                serializer.WriteInt32("Folio", Folio);
                serializer.WriteDouble("Impuesto", Impuesto);
                serializer.WriteDouble("IVA", IVA);
                serializer.WriteInt32("MovimientoID", MovimientoID);
                serializer.WriteBoolean("NotaCredito", NotaCredito);
                serializer.WriteInt32("Periodo", Periodo);
                serializer.WriteDouble("Saldo", Saldo);
                serializer.WriteAnsiString("Serie", Serie);
                serializer.WriteDouble("Subtotal", Subtotal);
                serializer.WriteAnsiString("Tickets", Tickets);
                serializer.WriteDouble("Total", Total);
                serializer.WriteInt32("UsuarioID", UsuarioID);
            }
        }
    }

    [RemObjects.SDK.Activator()]
    [System.Reflection.ObfuscationAttribute(Exclude = true, ApplyToMembers = false)]
    public class TFactura_Activator : object, RemObjects.SDK.ITypeActivator
    {

        public TFactura_Activator()
        {
        }

        public object CreateInstance()
        {
            return new TFactura();
        }
    }

    [System.Serializable()]
    [RemObjects.SDK.Remotable(ActivatorClass = typeof(TDetalleFactura_Activator))]
    [System.Reflection.ObfuscationAttribute(Exclude = true)]
    public partial class TDetalleFactura : RemObjects.SDK.Types.ComplexType
    {

        private int @__DetalleFacturaID;

        private int @__FacturaID;

        private double @__Cantidad;

        private double @__Precio;

        private double @__Importe;

        private int @__ProductoID;

        private int @__EstacionID;

        private double @__IVA;

        private double @__IEPS;

        public virtual int DetalleFacturaID
        {
            get
            {
                return @__DetalleFacturaID;
            }
            set
            {
                @__DetalleFacturaID = value;
                this.TriggerPropertyChanged("DetalleFacturaID");
            }
        }

        public virtual int FacturaID
        {
            get
            {
                return @__FacturaID;
            }
            set
            {
                @__FacturaID = value;
                this.TriggerPropertyChanged("FacturaID");
            }
        }

        public virtual double Cantidad
        {
            get
            {
                return @__Cantidad;
            }
            set
            {
                @__Cantidad = value;
                this.TriggerPropertyChanged("Cantidad");
            }
        }

        public virtual double Precio
        {
            get
            {
                return @__Precio;
            }
            set
            {
                @__Precio = value;
                this.TriggerPropertyChanged("Precio");
            }
        }

        public virtual double Importe
        {
            get
            {
                return @__Importe;
            }
            set
            {
                @__Importe = value;
                this.TriggerPropertyChanged("Importe");
            }
        }

        public virtual int ProductoID
        {
            get
            {
                return @__ProductoID;
            }
            set
            {
                @__ProductoID = value;
                this.TriggerPropertyChanged("ProductoID");
            }
        }

        public virtual int EstacionID
        {
            get
            {
                return @__EstacionID;
            }
            set
            {
                @__EstacionID = value;
                this.TriggerPropertyChanged("EstacionID");
            }
        }

        public virtual double IVA
        {
            get
            {
                return @__IVA;
            }
            set
            {
                @__IVA = value;
                this.TriggerPropertyChanged("IVA");
            }
        }

        public virtual double IEPS
        {
            get
            {
                return @__IEPS;
            }
            set
            {
                @__IEPS = value;
                this.TriggerPropertyChanged("IEPS");
            }
        }

        public override void ReadComplex(RemObjects.SDK.Serializer serializer)
        {
            if (serializer.RecordStrictOrder)
            {
                DetalleFacturaID = serializer.ReadInt32("DetalleFacturaID");
                FacturaID = serializer.ReadInt32("FacturaID");
                Cantidad = serializer.ReadDouble("Cantidad");
                Precio = serializer.ReadDouble("Precio");
                Importe = serializer.ReadDouble("Importe");
                ProductoID = serializer.ReadInt32("ProductoID");
                EstacionID = serializer.ReadInt32("EstacionID");
                IVA = serializer.ReadDouble("IVA");
                IEPS = serializer.ReadDouble("IEPS");
            }
            else
            {
                Cantidad = serializer.ReadDouble("Cantidad");
                DetalleFacturaID = serializer.ReadInt32("DetalleFacturaID");
                EstacionID = serializer.ReadInt32("EstacionID");
                FacturaID = serializer.ReadInt32("FacturaID");
                IEPS = serializer.ReadDouble("IEPS");
                Importe = serializer.ReadDouble("Importe");
                IVA = serializer.ReadDouble("IVA");
                Precio = serializer.ReadDouble("Precio");
                ProductoID = serializer.ReadInt32("ProductoID");
            }
        }

        public override void WriteComplex(RemObjects.SDK.Serializer serializer)
        {
            if (serializer.RecordStrictOrder)
            {
                serializer.WriteInt32("DetalleFacturaID", DetalleFacturaID);
                serializer.WriteInt32("FacturaID", FacturaID);
                serializer.WriteDouble("Cantidad", Cantidad);
                serializer.WriteDouble("Precio", Precio);
                serializer.WriteDouble("Importe", Importe);
                serializer.WriteInt32("ProductoID", ProductoID);
                serializer.WriteInt32("EstacionID", EstacionID);
                serializer.WriteDouble("IVA", IVA);
                serializer.WriteDouble("IEPS", IEPS);
            }
            else
            {
                serializer.WriteDouble("Cantidad", Cantidad);
                serializer.WriteInt32("DetalleFacturaID", DetalleFacturaID);
                serializer.WriteInt32("EstacionID", EstacionID);
                serializer.WriteInt32("FacturaID", FacturaID);
                serializer.WriteDouble("IEPS", IEPS);
                serializer.WriteDouble("Importe", Importe);
                serializer.WriteDouble("IVA", IVA);
                serializer.WriteDouble("Precio", Precio);
                serializer.WriteInt32("ProductoID", ProductoID);
            }
        }
    }

    [RemObjects.SDK.Activator()]
    [System.Reflection.ObfuscationAttribute(Exclude = true, ApplyToMembers = false)]
    public class TDetalleFactura_Activator : object, RemObjects.SDK.ITypeActivator
    {

        public TDetalleFactura_Activator()
        {
        }

        public object CreateInstance()
        {
            return new TDetalleFactura();
        }
    }

    [System.Serializable()]
    [RemObjects.SDK.Remotable(ActivatorClass = typeof(TDocumentosConSaldo_Activator))]
    [System.Reflection.ObfuscationAttribute(Exclude = true)]
    public partial class TDocumentosConSaldo : RemObjects.SDK.Types.ComplexType
    {

        private string @__Referencia;

        private double @__Importe;

        private double @__Saldo;

        private System.DateTime @__Fecha;

        private System.DateTime @__Vencimiento;

        private int @__DocumentoID;

        private double @__EnRecibo;

        private int @__MovimientoID;

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string Referencia
        {
            get
            {
                return @__Referencia;
            }
            set
            {
                @__Referencia = value;
                this.TriggerPropertyChanged("Referencia");
            }
        }

        public virtual double Importe
        {
            get
            {
                return @__Importe;
            }
            set
            {
                @__Importe = value;
                this.TriggerPropertyChanged("Importe");
            }
        }

        public virtual double Saldo
        {
            get
            {
                return @__Saldo;
            }
            set
            {
                @__Saldo = value;
                this.TriggerPropertyChanged("Saldo");
            }
        }

        public virtual System.DateTime Fecha
        {
            get
            {
                return @__Fecha;
            }
            set
            {
                @__Fecha = value;
                this.TriggerPropertyChanged("Fecha");
            }
        }

        public virtual System.DateTime Vencimiento
        {
            get
            {
                return @__Vencimiento;
            }
            set
            {
                @__Vencimiento = value;
                this.TriggerPropertyChanged("Vencimiento");
            }
        }

        public virtual int DocumentoID
        {
            get
            {
                return @__DocumentoID;
            }
            set
            {
                @__DocumentoID = value;
                this.TriggerPropertyChanged("DocumentoID");
            }
        }

        public virtual double EnRecibo
        {
            get
            {
                return @__EnRecibo;
            }
            set
            {
                @__EnRecibo = value;
                this.TriggerPropertyChanged("EnRecibo");
            }
        }

        public virtual int MovimientoID
        {
            get
            {
                return @__MovimientoID;
            }
            set
            {
                @__MovimientoID = value;
                this.TriggerPropertyChanged("MovimientoID");
            }
        }

        public override void ReadComplex(RemObjects.SDK.Serializer serializer)
        {
            if (serializer.RecordStrictOrder)
            {
                Referencia = serializer.ReadAnsiString("Referencia");
                Importe = serializer.ReadDouble("Importe");
                Saldo = serializer.ReadDouble("Saldo");
                Fecha = serializer.ReadDateTime("Fecha");
                Vencimiento = serializer.ReadDateTime("Vencimiento");
                DocumentoID = serializer.ReadInt32("DocumentoID");
                EnRecibo = serializer.ReadDouble("EnRecibo");
                MovimientoID = serializer.ReadInt32("MovimientoID");
            }
            else
            {
                DocumentoID = serializer.ReadInt32("DocumentoID");
                EnRecibo = serializer.ReadDouble("EnRecibo");
                Fecha = serializer.ReadDateTime("Fecha");
                Importe = serializer.ReadDouble("Importe");
                MovimientoID = serializer.ReadInt32("MovimientoID");
                Referencia = serializer.ReadAnsiString("Referencia");
                Saldo = serializer.ReadDouble("Saldo");
                Vencimiento = serializer.ReadDateTime("Vencimiento");
            }
        }

        public override void WriteComplex(RemObjects.SDK.Serializer serializer)
        {
            if (serializer.RecordStrictOrder)
            {
                serializer.WriteAnsiString("Referencia", Referencia);
                serializer.WriteDouble("Importe", Importe);
                serializer.WriteDouble("Saldo", Saldo);
                serializer.WriteDateTime("Fecha", Fecha);
                serializer.WriteDateTime("Vencimiento", Vencimiento);
                serializer.WriteInt32("DocumentoID", DocumentoID);
                serializer.WriteDouble("EnRecibo", EnRecibo);
                serializer.WriteInt32("MovimientoID", MovimientoID);
            }
            else
            {
                serializer.WriteInt32("DocumentoID", DocumentoID);
                serializer.WriteDouble("EnRecibo", EnRecibo);
                serializer.WriteDateTime("Fecha", Fecha);
                serializer.WriteDouble("Importe", Importe);
                serializer.WriteInt32("MovimientoID", MovimientoID);
                serializer.WriteAnsiString("Referencia", Referencia);
                serializer.WriteDouble("Saldo", Saldo);
                serializer.WriteDateTime("Vencimiento", Vencimiento);
            }
        }
    }

    [RemObjects.SDK.Activator()]
    [System.Reflection.ObfuscationAttribute(Exclude = true, ApplyToMembers = false)]
    public class TDocumentosConSaldo_Activator : object, RemObjects.SDK.ITypeActivator
    {

        public TDocumentosConSaldo_Activator()
        {
        }

        public object CreateInstance()
        {
            return new TDocumentosConSaldo();
        }
    }

    /*
    [System.Serializable()]
    [RemObjects.SDK.Remotable(ActivatorClass = typeof(TCliente_Activator))]
    [System.Reflection.ObfuscationAttribute(Exclude = true)]
    public partial class TCliente : RemObjects.SDK.Types.ComplexType
    {

        private string @__Nombre;

        private string @__RFC;

        private int @__PlazoPago;

        private string @__CuentaContable;

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string Nombre
        {
            get
            {
                return @__Nombre;
            }
            set
            {
                @__Nombre = value;
                this.TriggerPropertyChanged("Nombre");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string RFC
        {
            get
            {
                return @__RFC;
            }
            set
            {
                @__RFC = value;
                this.TriggerPropertyChanged("RFC");
            }
        }

        public virtual int PlazoPago
        {
            get
            {
                return @__PlazoPago;
            }
            set
            {
                @__PlazoPago = value;
                this.TriggerPropertyChanged("PlazoPago");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string CuentaContable
        {
            get
            {
                return @__CuentaContable;
            }
            set
            {
                @__CuentaContable = value;
                this.TriggerPropertyChanged("CuentaContable");
            }
        }

        public override void ReadComplex(RemObjects.SDK.Serializer serializer)
        {
            if (serializer.RecordStrictOrder)
            {
                Nombre = serializer.ReadAnsiString("Nombre");
                RFC = serializer.ReadAnsiString("RFC");
                PlazoPago = serializer.ReadInt32("PlazoPago");
                CuentaContable = serializer.ReadAnsiString("CuentaContable");
            }
            else
            {
                CuentaContable = serializer.ReadAnsiString("CuentaContable");
                Nombre = serializer.ReadAnsiString("Nombre");
                PlazoPago = serializer.ReadInt32("PlazoPago");
                RFC = serializer.ReadAnsiString("RFC");
            }
        }

        public override void WriteComplex(RemObjects.SDK.Serializer serializer)
        {
            if (serializer.RecordStrictOrder)
            {
                serializer.WriteAnsiString("Nombre", Nombre);
                serializer.WriteAnsiString("RFC", RFC);
                serializer.WriteInt32("PlazoPago", PlazoPago);
                serializer.WriteAnsiString("CuentaContable", CuentaContable);
            }
            else
            {
                serializer.WriteAnsiString("CuentaContable", CuentaContable);
                serializer.WriteAnsiString("Nombre", Nombre);
                serializer.WriteInt32("PlazoPago", PlazoPago);
                serializer.WriteAnsiString("RFC", RFC);
            }
        }
    }

    [RemObjects.SDK.Activator()]
    [System.Reflection.ObfuscationAttribute(Exclude = true, ApplyToMembers = false)]
    public class TCliente_Activator : object, RemObjects.SDK.ITypeActivator
    {

        public TCliente_Activator()
        {
        }

        public object CreateInstance()
        {
            return new TCliente();
        }
    }
    */

    [System.Serializable()]
    [RemObjects.SDK.Remotable(ActivatorClass = typeof(TParametrosF_Activator))]
    [System.Reflection.ObfuscationAttribute(Exclude = true)]
    public partial class TParametrosF : RemObjects.SDK.Types.ComplexType
    {

        private System.DateTime @__FechaIni;

        private System.DateTime @__FechaFin;

        private int @__TipoFecha;

        private int @__ClienteIni;

        private int @__ClienteFin;

        private string @__Grupo;

        private int @__EstacionIni;

        private int @__EstacionFin;

        private int @__FacturaIni;

        private int @__FacturaFin;

        private System.DateTime @__FechaCorte;

        private int @__Venc0;

        private int @__Venc1;

        private int @__Venc2;

        private int @__Venc3;

        private int @__Venc4;

        private int @__Seleccion;

        private int @__Orden;

        private int @__Status;

        private int @__ImporteLitros;

        private int @__TarjetaIni;

        private int @__TarjetaFin;

        private string @__TipoMov;

        private int @__FormaCompraID;

        private int @__DiaFacturarID;

        private int @__AgenteIni;

        private int @__AgenteFin;

        private string @__Movimientos;

        private int @__Ejercicio;

        private int @__PeriodoIni;

        private int @__PeriodoFin;

        private string @__Serie;

        private int @__Identificador;

        private int @__FacID;

        public virtual System.DateTime FechaIni
        {
            get
            {
                return @__FechaIni;
            }
            set
            {
                @__FechaIni = value;
                this.TriggerPropertyChanged("FechaIni");
            }
        }

        public virtual System.DateTime FechaFin
        {
            get
            {
                return @__FechaFin;
            }
            set
            {
                @__FechaFin = value;
                this.TriggerPropertyChanged("FechaFin");
            }
        }

        public virtual int TipoFecha
        {
            get
            {
                return @__TipoFecha;
            }
            set
            {
                @__TipoFecha = value;
                this.TriggerPropertyChanged("TipoFecha");
            }
        }

        public virtual int ClienteIni
        {
            get
            {
                return @__ClienteIni;
            }
            set
            {
                @__ClienteIni = value;
                this.TriggerPropertyChanged("ClienteIni");
            }
        }

        public virtual int ClienteFin
        {
            get
            {
                return @__ClienteFin;
            }
            set
            {
                @__ClienteFin = value;
                this.TriggerPropertyChanged("ClienteFin");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string Grupo
        {
            get
            {
                return @__Grupo;
            }
            set
            {
                @__Grupo = value;
                this.TriggerPropertyChanged("Grupo");
            }
        }

        public virtual int EstacionIni
        {
            get
            {
                return @__EstacionIni;
            }
            set
            {
                @__EstacionIni = value;
                this.TriggerPropertyChanged("EstacionIni");
            }
        }

        public virtual int EstacionFin
        {
            get
            {
                return @__EstacionFin;
            }
            set
            {
                @__EstacionFin = value;
                this.TriggerPropertyChanged("EstacionFin");
            }
        }

        public virtual int FacturaIni
        {
            get
            {
                return @__FacturaIni;
            }
            set
            {
                @__FacturaIni = value;
                this.TriggerPropertyChanged("FacturaIni");
            }
        }

        public virtual int FacturaFin
        {
            get
            {
                return @__FacturaFin;
            }
            set
            {
                @__FacturaFin = value;
                this.TriggerPropertyChanged("FacturaFin");
            }
        }

        public virtual System.DateTime FechaCorte
        {
            get
            {
                return @__FechaCorte;
            }
            set
            {
                @__FechaCorte = value;
                this.TriggerPropertyChanged("FechaCorte");
            }
        }

        public virtual int Venc0
        {
            get
            {
                return @__Venc0;
            }
            set
            {
                @__Venc0 = value;
                this.TriggerPropertyChanged("Venc0");
            }
        }

        public virtual int Venc1
        {
            get
            {
                return @__Venc1;
            }
            set
            {
                @__Venc1 = value;
                this.TriggerPropertyChanged("Venc1");
            }
        }

        public virtual int Venc2
        {
            get
            {
                return @__Venc2;
            }
            set
            {
                @__Venc2 = value;
                this.TriggerPropertyChanged("Venc2");
            }
        }

        public virtual int Venc3
        {
            get
            {
                return @__Venc3;
            }
            set
            {
                @__Venc3 = value;
                this.TriggerPropertyChanged("Venc3");
            }
        }

        public virtual int Venc4
        {
            get
            {
                return @__Venc4;
            }
            set
            {
                @__Venc4 = value;
                this.TriggerPropertyChanged("Venc4");
            }
        }

        public virtual int Seleccion
        {
            get
            {
                return @__Seleccion;
            }
            set
            {
                @__Seleccion = value;
                this.TriggerPropertyChanged("Seleccion");
            }
        }

        public virtual int Orden
        {
            get
            {
                return @__Orden;
            }
            set
            {
                @__Orden = value;
                this.TriggerPropertyChanged("Orden");
            }
        }

        public virtual int Status
        {
            get
            {
                return @__Status;
            }
            set
            {
                @__Status = value;
                this.TriggerPropertyChanged("Status");
            }
        }

        public virtual int ImporteLitros
        {
            get
            {
                return @__ImporteLitros;
            }
            set
            {
                @__ImporteLitros = value;
                this.TriggerPropertyChanged("ImporteLitros");
            }
        }

        public virtual int TarjetaIni
        {
            get
            {
                return @__TarjetaIni;
            }
            set
            {
                @__TarjetaIni = value;
                this.TriggerPropertyChanged("TarjetaIni");
            }
        }

        public virtual int TarjetaFin
        {
            get
            {
                return @__TarjetaFin;
            }
            set
            {
                @__TarjetaFin = value;
                this.TriggerPropertyChanged("TarjetaFin");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string TipoMov
        {
            get
            {
                return @__TipoMov;
            }
            set
            {
                @__TipoMov = value;
                this.TriggerPropertyChanged("TipoMov");
            }
        }

        public virtual int FormaCompraID
        {
            get
            {
                return @__FormaCompraID;
            }
            set
            {
                @__FormaCompraID = value;
                this.TriggerPropertyChanged("FormaCompraID");
            }
        }

        public virtual int DiaFacturarID
        {
            get
            {
                return @__DiaFacturarID;
            }
            set
            {
                @__DiaFacturarID = value;
                this.TriggerPropertyChanged("DiaFacturarID");
            }
        }

        public virtual int AgenteIni
        {
            get
            {
                return @__AgenteIni;
            }
            set
            {
                @__AgenteIni = value;
                this.TriggerPropertyChanged("AgenteIni");
            }
        }

        public virtual int AgenteFin
        {
            get
            {
                return @__AgenteFin;
            }
            set
            {
                @__AgenteFin = value;
                this.TriggerPropertyChanged("AgenteFin");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string Movimientos
        {
            get
            {
                return @__Movimientos;
            }
            set
            {
                @__Movimientos = value;
                this.TriggerPropertyChanged("Movimientos");
            }
        }

        public virtual int Ejercicio
        {
            get
            {
                return @__Ejercicio;
            }
            set
            {
                @__Ejercicio = value;
                this.TriggerPropertyChanged("Ejercicio");
            }
        }

        public virtual int PeriodoIni
        {
            get
            {
                return @__PeriodoIni;
            }
            set
            {
                @__PeriodoIni = value;
                this.TriggerPropertyChanged("PeriodoIni");
            }
        }

        public virtual int PeriodoFin
        {
            get
            {
                return @__PeriodoFin;
            }
            set
            {
                @__PeriodoFin = value;
                this.TriggerPropertyChanged("PeriodoFin");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string Serie
        {
            get
            {
                return @__Serie;
            }
            set
            {
                @__Serie = value;
                this.TriggerPropertyChanged("Serie");
            }
        }

        public virtual int Identificador
        {
            get
            {
                return @__Identificador;
            }
            set
            {
                @__Identificador = value;
                this.TriggerPropertyChanged("Identificador");
            }
        }

        public virtual int FacID
        {
            get
            {
                return @__FacID;
            }
            set
            {
                @__FacID = value;
                this.TriggerPropertyChanged("FacID");
            }
        }

        public override void ReadComplex(RemObjects.SDK.Serializer serializer)
        {
            if (serializer.RecordStrictOrder)
            {
                FechaIni = serializer.ReadDateTime("FechaIni");
                FechaFin = serializer.ReadDateTime("FechaFin");
                TipoFecha = serializer.ReadInt32("TipoFecha");
                ClienteIni = serializer.ReadInt32("ClienteIni");
                ClienteFin = serializer.ReadInt32("ClienteFin");
                Grupo = serializer.ReadAnsiString("Grupo");
                EstacionIni = serializer.ReadInt32("EstacionIni");
                EstacionFin = serializer.ReadInt32("EstacionFin");
                FacturaIni = serializer.ReadInt32("FacturaIni");
                FacturaFin = serializer.ReadInt32("FacturaFin");
                FechaCorte = serializer.ReadDateTime("FechaCorte");
                Venc0 = serializer.ReadInt32("Venc0");
                Venc1 = serializer.ReadInt32("Venc1");
                Venc2 = serializer.ReadInt32("Venc2");
                Venc3 = serializer.ReadInt32("Venc3");
                Venc4 = serializer.ReadInt32("Venc4");
                Seleccion = serializer.ReadInt32("Seleccion");
                Orden = serializer.ReadInt32("Orden");
                Status = serializer.ReadInt32("Status");
                ImporteLitros = serializer.ReadInt32("ImporteLitros");
                TarjetaIni = serializer.ReadInt32("TarjetaIni");
                TarjetaFin = serializer.ReadInt32("TarjetaFin");
                TipoMov = serializer.ReadAnsiString("TipoMov");
                FormaCompraID = serializer.ReadInt32("FormaCompraID");
                DiaFacturarID = serializer.ReadInt32("DiaFacturarID");
                AgenteIni = serializer.ReadInt32("AgenteIni");
                AgenteFin = serializer.ReadInt32("AgenteFin");
                Movimientos = serializer.ReadAnsiString("Movimientos");
                Ejercicio = serializer.ReadInt32("Ejercicio");
                PeriodoIni = serializer.ReadInt32("PeriodoIni");
                PeriodoFin = serializer.ReadInt32("PeriodoFin");
                Serie = serializer.ReadAnsiString("Serie");
                Identificador = serializer.ReadInt32("Identificador");
                FacID = serializer.ReadInt32("FacID");
            }
            else
            {
                AgenteFin = serializer.ReadInt32("AgenteFin");
                AgenteIni = serializer.ReadInt32("AgenteIni");
                ClienteFin = serializer.ReadInt32("ClienteFin");
                ClienteIni = serializer.ReadInt32("ClienteIni");
                DiaFacturarID = serializer.ReadInt32("DiaFacturarID");
                Ejercicio = serializer.ReadInt32("Ejercicio");
                EstacionFin = serializer.ReadInt32("EstacionFin");
                EstacionIni = serializer.ReadInt32("EstacionIni");
                FacID = serializer.ReadInt32("FacID");
                FacturaFin = serializer.ReadInt32("FacturaFin");
                FacturaIni = serializer.ReadInt32("FacturaIni");
                FechaCorte = serializer.ReadDateTime("FechaCorte");
                FechaFin = serializer.ReadDateTime("FechaFin");
                FechaIni = serializer.ReadDateTime("FechaIni");
                FormaCompraID = serializer.ReadInt32("FormaCompraID");
                Grupo = serializer.ReadAnsiString("Grupo");
                Identificador = serializer.ReadInt32("Identificador");
                ImporteLitros = serializer.ReadInt32("ImporteLitros");
                Movimientos = serializer.ReadAnsiString("Movimientos");
                Orden = serializer.ReadInt32("Orden");
                PeriodoFin = serializer.ReadInt32("PeriodoFin");
                PeriodoIni = serializer.ReadInt32("PeriodoIni");
                Seleccion = serializer.ReadInt32("Seleccion");
                Serie = serializer.ReadAnsiString("Serie");
                Status = serializer.ReadInt32("Status");
                TarjetaFin = serializer.ReadInt32("TarjetaFin");
                TarjetaIni = serializer.ReadInt32("TarjetaIni");
                TipoFecha = serializer.ReadInt32("TipoFecha");
                TipoMov = serializer.ReadAnsiString("TipoMov");
                Venc0 = serializer.ReadInt32("Venc0");
                Venc1 = serializer.ReadInt32("Venc1");
                Venc2 = serializer.ReadInt32("Venc2");
                Venc3 = serializer.ReadInt32("Venc3");
                Venc4 = serializer.ReadInt32("Venc4");
            }
        }

        public override void WriteComplex(RemObjects.SDK.Serializer serializer)
        {
            if (serializer.RecordStrictOrder)
            {
                serializer.WriteDateTime("FechaIni", FechaIni);
                serializer.WriteDateTime("FechaFin", FechaFin);
                serializer.WriteInt32("TipoFecha", TipoFecha);
                serializer.WriteInt32("ClienteIni", ClienteIni);
                serializer.WriteInt32("ClienteFin", ClienteFin);
                serializer.WriteAnsiString("Grupo", Grupo);
                serializer.WriteInt32("EstacionIni", EstacionIni);
                serializer.WriteInt32("EstacionFin", EstacionFin);
                serializer.WriteInt32("FacturaIni", FacturaIni);
                serializer.WriteInt32("FacturaFin", FacturaFin);
                serializer.WriteDateTime("FechaCorte", FechaCorte);
                serializer.WriteInt32("Venc0", Venc0);
                serializer.WriteInt32("Venc1", Venc1);
                serializer.WriteInt32("Venc2", Venc2);
                serializer.WriteInt32("Venc3", Venc3);
                serializer.WriteInt32("Venc4", Venc4);
                serializer.WriteInt32("Seleccion", Seleccion);
                serializer.WriteInt32("Orden", Orden);
                serializer.WriteInt32("Status", Status);
                serializer.WriteInt32("ImporteLitros", ImporteLitros);
                serializer.WriteInt32("TarjetaIni", TarjetaIni);
                serializer.WriteInt32("TarjetaFin", TarjetaFin);
                serializer.WriteAnsiString("TipoMov", TipoMov);
                serializer.WriteInt32("FormaCompraID", FormaCompraID);
                serializer.WriteInt32("DiaFacturarID", DiaFacturarID);
                serializer.WriteInt32("AgenteIni", AgenteIni);
                serializer.WriteInt32("AgenteFin", AgenteFin);
                serializer.WriteAnsiString("Movimientos", Movimientos);
                serializer.WriteInt32("Ejercicio", Ejercicio);
                serializer.WriteInt32("PeriodoIni", PeriodoIni);
                serializer.WriteInt32("PeriodoFin", PeriodoFin);
                serializer.WriteAnsiString("Serie", Serie);
                serializer.WriteInt32("Identificador", Identificador);
                serializer.WriteInt32("FacID", FacID);
            }
            else
            {
                serializer.WriteInt32("AgenteFin", AgenteFin);
                serializer.WriteInt32("AgenteIni", AgenteIni);
                serializer.WriteInt32("ClienteFin", ClienteFin);
                serializer.WriteInt32("ClienteIni", ClienteIni);
                serializer.WriteInt32("DiaFacturarID", DiaFacturarID);
                serializer.WriteInt32("Ejercicio", Ejercicio);
                serializer.WriteInt32("EstacionFin", EstacionFin);
                serializer.WriteInt32("EstacionIni", EstacionIni);
                serializer.WriteInt32("FacID", FacID);
                serializer.WriteInt32("FacturaFin", FacturaFin);
                serializer.WriteInt32("FacturaIni", FacturaIni);
                serializer.WriteDateTime("FechaCorte", FechaCorte);
                serializer.WriteDateTime("FechaFin", FechaFin);
                serializer.WriteDateTime("FechaIni", FechaIni);
                serializer.WriteInt32("FormaCompraID", FormaCompraID);
                serializer.WriteAnsiString("Grupo", Grupo);
                serializer.WriteInt32("Identificador", Identificador);
                serializer.WriteInt32("ImporteLitros", ImporteLitros);
                serializer.WriteAnsiString("Movimientos", Movimientos);
                serializer.WriteInt32("Orden", Orden);
                serializer.WriteInt32("PeriodoFin", PeriodoFin);
                serializer.WriteInt32("PeriodoIni", PeriodoIni);
                serializer.WriteInt32("Seleccion", Seleccion);
                serializer.WriteAnsiString("Serie", Serie);
                serializer.WriteInt32("Status", Status);
                serializer.WriteInt32("TarjetaFin", TarjetaFin);
                serializer.WriteInt32("TarjetaIni", TarjetaIni);
                serializer.WriteInt32("TipoFecha", TipoFecha);
                serializer.WriteAnsiString("TipoMov", TipoMov);
                serializer.WriteInt32("Venc0", Venc0);
                serializer.WriteInt32("Venc1", Venc1);
                serializer.WriteInt32("Venc2", Venc2);
                serializer.WriteInt32("Venc3", Venc3);
                serializer.WriteInt32("Venc4", Venc4);
            }
        }
    }

    [RemObjects.SDK.Activator()]
    [System.Reflection.ObfuscationAttribute(Exclude = true, ApplyToMembers = false)]
    public class TParametrosF_Activator : object, RemObjects.SDK.ITypeActivator
    {

        public TParametrosF_Activator()
        {
        }

        public object CreateInstance()
        {
            return new TParametrosF();
        }
    }

    [System.Serializable()]
    [RemObjects.SDK.Remotable(ActivatorClass = typeof(TDetalleCupon_Activator))]
    [System.Reflection.ObfuscationAttribute(Exclude = true)]
    public partial class TDetalleCupon : RemObjects.SDK.Types.ComplexType
    {

        private double @__Denominacion;

        private double @__Cantidad;

        private string @__Referencia;

        private int @__FacturaID;

        public virtual double Denominacion
        {
            get
            {
                return @__Denominacion;
            }
            set
            {
                @__Denominacion = value;
                this.TriggerPropertyChanged("Denominacion");
            }
        }

        public virtual double Cantidad
        {
            get
            {
                return @__Cantidad;
            }
            set
            {
                @__Cantidad = value;
                this.TriggerPropertyChanged("Cantidad");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string Referencia
        {
            get
            {
                return @__Referencia;
            }
            set
            {
                @__Referencia = value;
                this.TriggerPropertyChanged("Referencia");
            }
        }

        public virtual int FacturaID
        {
            get
            {
                return @__FacturaID;
            }
            set
            {
                @__FacturaID = value;
                this.TriggerPropertyChanged("FacturaID");
            }
        }

        public override void ReadComplex(RemObjects.SDK.Serializer serializer)
        {
            if (serializer.RecordStrictOrder)
            {
                Denominacion = serializer.ReadDouble("Denominacion");
                Cantidad = serializer.ReadDouble("Cantidad");
                Referencia = serializer.ReadAnsiString("Referencia");
                FacturaID = serializer.ReadInt32("FacturaID");
            }
            else
            {
                Cantidad = serializer.ReadDouble("Cantidad");
                Denominacion = serializer.ReadDouble("Denominacion");
                FacturaID = serializer.ReadInt32("FacturaID");
                Referencia = serializer.ReadAnsiString("Referencia");
            }
        }

        public override void WriteComplex(RemObjects.SDK.Serializer serializer)
        {
            if (serializer.RecordStrictOrder)
            {
                serializer.WriteDouble("Denominacion", Denominacion);
                serializer.WriteDouble("Cantidad", Cantidad);
                serializer.WriteAnsiString("Referencia", Referencia);
                serializer.WriteInt32("FacturaID", FacturaID);
            }
            else
            {
                serializer.WriteDouble("Cantidad", Cantidad);
                serializer.WriteDouble("Denominacion", Denominacion);
                serializer.WriteInt32("FacturaID", FacturaID);
                serializer.WriteAnsiString("Referencia", Referencia);
            }
        }
    }

    [RemObjects.SDK.Activator()]
    [System.Reflection.ObfuscationAttribute(Exclude = true, ApplyToMembers = false)]
    public class TDetalleCupon_Activator : object, RemObjects.SDK.ITypeActivator
    {

        public TDetalleCupon_Activator()
        {
        }

        public object CreateInstance()
        {
            return new TDetalleCupon();
        }
    }

    [System.Serializable()]
    [RemObjects.SDK.Remotable(ActivatorClass = typeof(TReporteF_Activator))]
    [System.Reflection.ObfuscationAttribute(Exclude = true)]
    public partial class TReporteF : RemObjects.SDK.Types.ComplexType
    {

        private string @__SQL1;

        private string @__SQL2;

        private string @__Template;

        private string @__CampoJoin;

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string SQL1
        {
            get
            {
                return @__SQL1;
            }
            set
            {
                @__SQL1 = value;
                this.TriggerPropertyChanged("SQL1");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string SQL2
        {
            get
            {
                return @__SQL2;
            }
            set
            {
                @__SQL2 = value;
                this.TriggerPropertyChanged("SQL2");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string Template
        {
            get
            {
                return @__Template;
            }
            set
            {
                @__Template = value;
                this.TriggerPropertyChanged("Template");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string CampoJoin
        {
            get
            {
                return @__CampoJoin;
            }
            set
            {
                @__CampoJoin = value;
                this.TriggerPropertyChanged("CampoJoin");
            }
        }

        public override void ReadComplex(RemObjects.SDK.Serializer serializer)
        {
            if (serializer.RecordStrictOrder)
            {
                SQL1 = serializer.ReadAnsiString("SQL1");
                SQL2 = serializer.ReadAnsiString("SQL2");
                Template = serializer.ReadAnsiString("Template");
                CampoJoin = serializer.ReadAnsiString("CampoJoin");
            }
            else
            {
                CampoJoin = serializer.ReadAnsiString("CampoJoin");
                SQL1 = serializer.ReadAnsiString("SQL1");
                SQL2 = serializer.ReadAnsiString("SQL2");
                Template = serializer.ReadAnsiString("Template");
            }
        }

        public override void WriteComplex(RemObjects.SDK.Serializer serializer)
        {
            if (serializer.RecordStrictOrder)
            {
                serializer.WriteAnsiString("SQL1", SQL1);
                serializer.WriteAnsiString("SQL2", SQL2);
                serializer.WriteAnsiString("Template", Template);
                serializer.WriteAnsiString("CampoJoin", CampoJoin);
            }
            else
            {
                serializer.WriteAnsiString("CampoJoin", CampoJoin);
                serializer.WriteAnsiString("SQL1", SQL1);
                serializer.WriteAnsiString("SQL2", SQL2);
                serializer.WriteAnsiString("Template", Template);
            }
        }
    }

    [RemObjects.SDK.Activator()]
    [System.Reflection.ObfuscationAttribute(Exclude = true, ApplyToMembers = false)]
    public class TReporteF_Activator : object, RemObjects.SDK.ITypeActivator
    {

        public TReporteF_Activator()
        {
        }

        public object CreateInstance()
        {
            return new TReporteF();
        }
    }

    [System.Serializable()]
    [RemObjects.SDK.Remotable(ActivatorClass = typeof(TCuponValido_Activator))]
    [System.Reflection.ObfuscationAttribute(Exclude = true)]
    public partial class TCuponValido : RemObjects.SDK.Types.ComplexType
    {

        private int @__CuponID;

        private double @__Importe;

        private string @__Status;

        private string @__Referencia;

        private string @__Nombre;

        private string @__RazonSocial;

        private string @__Domicilio;

        private string @__RFC;

        private string @__CuentaContable;

        private int @__TarjetaID;

        private string @__MsnError;

        private bool @__Valido;

        private int @__ClienteID;

        private int @__GasolineroID;

        private int @__VehiculoID;

        private int @__Grupo;

        public virtual int CuponID
        {
            get
            {
                return @__CuponID;
            }
            set
            {
                @__CuponID = value;
                this.TriggerPropertyChanged("CuponID");
            }
        }

        public virtual double Importe
        {
            get
            {
                return @__Importe;
            }
            set
            {
                @__Importe = value;
                this.TriggerPropertyChanged("Importe");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string Status
        {
            get
            {
                return @__Status;
            }
            set
            {
                @__Status = value;
                this.TriggerPropertyChanged("Status");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string Referencia
        {
            get
            {
                return @__Referencia;
            }
            set
            {
                @__Referencia = value;
                this.TriggerPropertyChanged("Referencia");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string Nombre
        {
            get
            {
                return @__Nombre;
            }
            set
            {
                @__Nombre = value;
                this.TriggerPropertyChanged("Nombre");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string RazonSocial
        {
            get
            {
                return @__RazonSocial;
            }
            set
            {
                @__RazonSocial = value;
                this.TriggerPropertyChanged("RazonSocial");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string Domicilio
        {
            get
            {
                return @__Domicilio;
            }
            set
            {
                @__Domicilio = value;
                this.TriggerPropertyChanged("Domicilio");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string RFC
        {
            get
            {
                return @__RFC;
            }
            set
            {
                @__RFC = value;
                this.TriggerPropertyChanged("RFC");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string CuentaContable
        {
            get
            {
                return @__CuentaContable;
            }
            set
            {
                @__CuentaContable = value;
                this.TriggerPropertyChanged("CuentaContable");
            }
        }

        public virtual int TarjetaID
        {
            get
            {
                return @__TarjetaID;
            }
            set
            {
                @__TarjetaID = value;
                this.TriggerPropertyChanged("TarjetaID");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string MsnError
        {
            get
            {
                return @__MsnError;
            }
            set
            {
                @__MsnError = value;
                this.TriggerPropertyChanged("MsnError");
            }
        }

        public virtual bool Valido
        {
            get
            {
                return @__Valido;
            }
            set
            {
                @__Valido = value;
                this.TriggerPropertyChanged("Valido");
            }
        }

        public virtual int ClienteID
        {
            get
            {
                return @__ClienteID;
            }
            set
            {
                @__ClienteID = value;
                this.TriggerPropertyChanged("ClienteID");
            }
        }

        public virtual int GasolineroID
        {
            get
            {
                return @__GasolineroID;
            }
            set
            {
                @__GasolineroID = value;
                this.TriggerPropertyChanged("GasolineroID");
            }
        }

        public virtual int VehiculoID
        {
            get
            {
                return @__VehiculoID;
            }
            set
            {
                @__VehiculoID = value;
                this.TriggerPropertyChanged("VehiculoID");
            }
        }

        public virtual int Grupo
        {
            get
            {
                return @__Grupo;
            }
            set
            {
                @__Grupo = value;
                this.TriggerPropertyChanged("Grupo");
            }
        }

        public override void ReadComplex(RemObjects.SDK.Serializer serializer)
        {
            if (serializer.RecordStrictOrder)
            {
                CuponID = serializer.ReadInt32("CuponID");
                Importe = serializer.ReadDouble("Importe");
                Status = serializer.ReadAnsiString("Status");
                Referencia = serializer.ReadAnsiString("Referencia");
                Nombre = serializer.ReadAnsiString("Nombre");
                RazonSocial = serializer.ReadAnsiString("RazonSocial");
                Domicilio = serializer.ReadAnsiString("Domicilio");
                RFC = serializer.ReadAnsiString("RFC");
                CuentaContable = serializer.ReadAnsiString("CuentaContable");
                TarjetaID = serializer.ReadInt32("TarjetaID");
                MsnError = serializer.ReadAnsiString("MsnError");
                Valido = serializer.ReadBoolean("Valido");
                ClienteID = serializer.ReadInt32("ClienteID");
                GasolineroID = serializer.ReadInt32("GasolineroID");
                VehiculoID = serializer.ReadInt32("VehiculoID");
                Grupo = serializer.ReadInt32("Grupo");
            }
            else
            {
                ClienteID = serializer.ReadInt32("ClienteID");
                CuentaContable = serializer.ReadAnsiString("CuentaContable");
                CuponID = serializer.ReadInt32("CuponID");
                Domicilio = serializer.ReadAnsiString("Domicilio");
                GasolineroID = serializer.ReadInt32("GasolineroID");
                Grupo = serializer.ReadInt32("Grupo");
                Importe = serializer.ReadDouble("Importe");
                MsnError = serializer.ReadAnsiString("MsnError");
                Nombre = serializer.ReadAnsiString("Nombre");
                RazonSocial = serializer.ReadAnsiString("RazonSocial");
                Referencia = serializer.ReadAnsiString("Referencia");
                RFC = serializer.ReadAnsiString("RFC");
                Status = serializer.ReadAnsiString("Status");
                TarjetaID = serializer.ReadInt32("TarjetaID");
                Valido = serializer.ReadBoolean("Valido");
                VehiculoID = serializer.ReadInt32("VehiculoID");
            }
        }

        public override void WriteComplex(RemObjects.SDK.Serializer serializer)
        {
            if (serializer.RecordStrictOrder)
            {
                serializer.WriteInt32("CuponID", CuponID);
                serializer.WriteDouble("Importe", Importe);
                serializer.WriteAnsiString("Status", Status);
                serializer.WriteAnsiString("Referencia", Referencia);
                serializer.WriteAnsiString("Nombre", Nombre);
                serializer.WriteAnsiString("RazonSocial", RazonSocial);
                serializer.WriteAnsiString("Domicilio", Domicilio);
                serializer.WriteAnsiString("RFC", RFC);
                serializer.WriteAnsiString("CuentaContable", CuentaContable);
                serializer.WriteInt32("TarjetaID", TarjetaID);
                serializer.WriteAnsiString("MsnError", MsnError);
                serializer.WriteBoolean("Valido", Valido);
                serializer.WriteInt32("ClienteID", ClienteID);
                serializer.WriteInt32("GasolineroID", GasolineroID);
                serializer.WriteInt32("VehiculoID", VehiculoID);
                serializer.WriteInt32("Grupo", Grupo);
            }
            else
            {
                serializer.WriteInt32("ClienteID", ClienteID);
                serializer.WriteAnsiString("CuentaContable", CuentaContable);
                serializer.WriteInt32("CuponID", CuponID);
                serializer.WriteAnsiString("Domicilio", Domicilio);
                serializer.WriteInt32("GasolineroID", GasolineroID);
                serializer.WriteInt32("Grupo", Grupo);
                serializer.WriteDouble("Importe", Importe);
                serializer.WriteAnsiString("MsnError", MsnError);
                serializer.WriteAnsiString("Nombre", Nombre);
                serializer.WriteAnsiString("RazonSocial", RazonSocial);
                serializer.WriteAnsiString("Referencia", Referencia);
                serializer.WriteAnsiString("RFC", RFC);
                serializer.WriteAnsiString("Status", Status);
                serializer.WriteInt32("TarjetaID", TarjetaID);
                serializer.WriteBoolean("Valido", Valido);
                serializer.WriteInt32("VehiculoID", VehiculoID);
            }
        }
    }

    [RemObjects.SDK.Activator()]
    [System.Reflection.ObfuscationAttribute(Exclude = true, ApplyToMembers = false)]
    public class TCuponValido_Activator : object, RemObjects.SDK.ITypeActivator
    {

        public TCuponValido_Activator()
        {
        }

        public object CreateInstance()
        {
            return new TCuponValido();
        }
    }

    [System.Serializable()]
    [RemObjects.SDK.Remotable(ActivatorClass = typeof(TConsumo_Activator))]
    [System.Reflection.ObfuscationAttribute(Exclude = true)]
    public partial class TConsumo : RemObjects.SDK.Types.ComplexType
    {

        private int @__SecuenciaVenta;

        private string @__Serie;

        private int @__EstacionID;

        private System.DateTime @__FechaMovimiento;

        private System.DateTime @__FechaCarga;

        private int @__Ejercicio;

        private int @__Periodo;

        private int @__Dia;

        private int @__Turno;

        private int @__Kilometraje;

        private string @__Referencia;

        private string @__Tarjeta;

        private int @__PosicionCarga;

        private double @__Cantidad;

        private double @__Precio;

        private double @__Importe;

        private double @__ImpuestoImporte;

        private double @__ImpuestoPorcentaje;

        private string @__CuentaContable;

        private string @__ManualAutomatico;

        private int @__Facturado;

        private int @__EnIngresos;

        private int @__Auditado;

        private int @__FacturaID;

        private int @__ProductoID;

        private int @__GasolineroID;

        private int @__ClienteID;

        private int @__VehiculoID;

        private double @__IEPS;

        public virtual int SecuenciaVenta
        {
            get
            {
                return @__SecuenciaVenta;
            }
            set
            {
                @__SecuenciaVenta = value;
                this.TriggerPropertyChanged("SecuenciaVenta");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string Serie
        {
            get
            {
                return @__Serie;
            }
            set
            {
                @__Serie = value;
                this.TriggerPropertyChanged("Serie");
            }
        }

        public virtual int EstacionID
        {
            get
            {
                return @__EstacionID;
            }
            set
            {
                @__EstacionID = value;
                this.TriggerPropertyChanged("EstacionID");
            }
        }

        public virtual System.DateTime FechaMovimiento
        {
            get
            {
                return @__FechaMovimiento;
            }
            set
            {
                @__FechaMovimiento = value;
                this.TriggerPropertyChanged("FechaMovimiento");
            }
        }

        public virtual System.DateTime FechaCarga
        {
            get
            {
                return @__FechaCarga;
            }
            set
            {
                @__FechaCarga = value;
                this.TriggerPropertyChanged("FechaCarga");
            }
        }

        public virtual int Ejercicio
        {
            get
            {
                return @__Ejercicio;
            }
            set
            {
                @__Ejercicio = value;
                this.TriggerPropertyChanged("Ejercicio");
            }
        }

        public virtual int Periodo
        {
            get
            {
                return @__Periodo;
            }
            set
            {
                @__Periodo = value;
                this.TriggerPropertyChanged("Periodo");
            }
        }

        public virtual int Dia
        {
            get
            {
                return @__Dia;
            }
            set
            {
                @__Dia = value;
                this.TriggerPropertyChanged("Dia");
            }
        }

        public virtual int Turno
        {
            get
            {
                return @__Turno;
            }
            set
            {
                @__Turno = value;
                this.TriggerPropertyChanged("Turno");
            }
        }

        public virtual int Kilometraje
        {
            get
            {
                return @__Kilometraje;
            }
            set
            {
                @__Kilometraje = value;
                this.TriggerPropertyChanged("Kilometraje");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string Referencia
        {
            get
            {
                return @__Referencia;
            }
            set
            {
                @__Referencia = value;
                this.TriggerPropertyChanged("Referencia");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string Tarjeta
        {
            get
            {
                return @__Tarjeta;
            }
            set
            {
                @__Tarjeta = value;
                this.TriggerPropertyChanged("Tarjeta");
            }
        }

        public virtual int PosicionCarga
        {
            get
            {
                return @__PosicionCarga;
            }
            set
            {
                @__PosicionCarga = value;
                this.TriggerPropertyChanged("PosicionCarga");
            }
        }

        public virtual double Cantidad
        {
            get
            {
                return @__Cantidad;
            }
            set
            {
                @__Cantidad = value;
                this.TriggerPropertyChanged("Cantidad");
            }
        }

        public virtual double Precio
        {
            get
            {
                return @__Precio;
            }
            set
            {
                @__Precio = value;
                this.TriggerPropertyChanged("Precio");
            }
        }

        public virtual double Importe
        {
            get
            {
                return @__Importe;
            }
            set
            {
                @__Importe = value;
                this.TriggerPropertyChanged("Importe");
            }
        }

        public virtual double ImpuestoImporte
        {
            get
            {
                return @__ImpuestoImporte;
            }
            set
            {
                @__ImpuestoImporte = value;
                this.TriggerPropertyChanged("ImpuestoImporte");
            }
        }

        public virtual double ImpuestoPorcentaje
        {
            get
            {
                return @__ImpuestoPorcentaje;
            }
            set
            {
                @__ImpuestoPorcentaje = value;
                this.TriggerPropertyChanged("ImpuestoPorcentaje");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string CuentaContable
        {
            get
            {
                return @__CuentaContable;
            }
            set
            {
                @__CuentaContable = value;
                this.TriggerPropertyChanged("CuentaContable");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string ManualAutomatico
        {
            get
            {
                return @__ManualAutomatico;
            }
            set
            {
                @__ManualAutomatico = value;
                this.TriggerPropertyChanged("ManualAutomatico");
            }
        }

        public virtual int Facturado
        {
            get
            {
                return @__Facturado;
            }
            set
            {
                @__Facturado = value;
                this.TriggerPropertyChanged("Facturado");
            }
        }

        public virtual int EnIngresos
        {
            get
            {
                return @__EnIngresos;
            }
            set
            {
                @__EnIngresos = value;
                this.TriggerPropertyChanged("EnIngresos");
            }
        }

        public virtual int Auditado
        {
            get
            {
                return @__Auditado;
            }
            set
            {
                @__Auditado = value;
                this.TriggerPropertyChanged("Auditado");
            }
        }

        public virtual int FacturaID
        {
            get
            {
                return @__FacturaID;
            }
            set
            {
                @__FacturaID = value;
                this.TriggerPropertyChanged("FacturaID");
            }
        }

        public virtual int ProductoID
        {
            get
            {
                return @__ProductoID;
            }
            set
            {
                @__ProductoID = value;
                this.TriggerPropertyChanged("ProductoID");
            }
        }

        public virtual int GasolineroID
        {
            get
            {
                return @__GasolineroID;
            }
            set
            {
                @__GasolineroID = value;
                this.TriggerPropertyChanged("GasolineroID");
            }
        }

        public virtual int ClienteID
        {
            get
            {
                return @__ClienteID;
            }
            set
            {
                @__ClienteID = value;
                this.TriggerPropertyChanged("ClienteID");
            }
        }

        public virtual int VehiculoID
        {
            get
            {
                return @__VehiculoID;
            }
            set
            {
                @__VehiculoID = value;
                this.TriggerPropertyChanged("VehiculoID");
            }
        }

        public virtual double IEPS
        {
            get
            {
                return @__IEPS;
            }
            set
            {
                @__IEPS = value;
                this.TriggerPropertyChanged("IEPS");
            }
        }

        public override void ReadComplex(RemObjects.SDK.Serializer serializer)
        {
            if (serializer.RecordStrictOrder)
            {
                SecuenciaVenta = serializer.ReadInt32("SecuenciaVenta");
                Serie = serializer.ReadAnsiString("Serie");
                EstacionID = serializer.ReadInt32("EstacionID");
                FechaMovimiento = serializer.ReadDateTime("FechaMovimiento");
                FechaCarga = serializer.ReadDateTime("FechaCarga");
                Ejercicio = serializer.ReadInt32("Ejercicio");
                Periodo = serializer.ReadInt32("Periodo");
                Dia = serializer.ReadInt32("Dia");
                Turno = serializer.ReadInt32("Turno");
                Kilometraje = serializer.ReadInt32("Kilometraje");
                Referencia = serializer.ReadAnsiString("Referencia");
                Tarjeta = serializer.ReadAnsiString("Tarjeta");
                PosicionCarga = serializer.ReadInt32("PosicionCarga");
                Cantidad = serializer.ReadDouble("Cantidad");
                Precio = serializer.ReadDouble("Precio");
                Importe = serializer.ReadDouble("Importe");
                ImpuestoImporte = serializer.ReadDouble("ImpuestoImporte");
                ImpuestoPorcentaje = serializer.ReadDouble("ImpuestoPorcentaje");
                CuentaContable = serializer.ReadAnsiString("CuentaContable");
                ManualAutomatico = serializer.ReadAnsiString("ManualAutomatico");
                Facturado = serializer.ReadInt32("Facturado");
                EnIngresos = serializer.ReadInt32("EnIngresos");
                Auditado = serializer.ReadInt32("Auditado");
                FacturaID = serializer.ReadInt32("FacturaID");
                ProductoID = serializer.ReadInt32("ProductoID");
                GasolineroID = serializer.ReadInt32("GasolineroID");
                ClienteID = serializer.ReadInt32("ClienteID");
                VehiculoID = serializer.ReadInt32("VehiculoID");
                IEPS = serializer.ReadDouble("IEPS");
            }
            else
            {
                Auditado = serializer.ReadInt32("Auditado");
                Cantidad = serializer.ReadDouble("Cantidad");
                ClienteID = serializer.ReadInt32("ClienteID");
                CuentaContable = serializer.ReadAnsiString("CuentaContable");
                Dia = serializer.ReadInt32("Dia");
                Ejercicio = serializer.ReadInt32("Ejercicio");
                EnIngresos = serializer.ReadInt32("EnIngresos");
                EstacionID = serializer.ReadInt32("EstacionID");
                Facturado = serializer.ReadInt32("Facturado");
                FacturaID = serializer.ReadInt32("FacturaID");
                FechaCarga = serializer.ReadDateTime("FechaCarga");
                FechaMovimiento = serializer.ReadDateTime("FechaMovimiento");
                GasolineroID = serializer.ReadInt32("GasolineroID");
                IEPS = serializer.ReadDouble("IEPS");
                Importe = serializer.ReadDouble("Importe");
                ImpuestoImporte = serializer.ReadDouble("ImpuestoImporte");
                ImpuestoPorcentaje = serializer.ReadDouble("ImpuestoPorcentaje");
                Kilometraje = serializer.ReadInt32("Kilometraje");
                ManualAutomatico = serializer.ReadAnsiString("ManualAutomatico");
                Periodo = serializer.ReadInt32("Periodo");
                PosicionCarga = serializer.ReadInt32("PosicionCarga");
                Precio = serializer.ReadDouble("Precio");
                ProductoID = serializer.ReadInt32("ProductoID");
                Referencia = serializer.ReadAnsiString("Referencia");
                SecuenciaVenta = serializer.ReadInt32("SecuenciaVenta");
                Serie = serializer.ReadAnsiString("Serie");
                Tarjeta = serializer.ReadAnsiString("Tarjeta");
                Turno = serializer.ReadInt32("Turno");
                VehiculoID = serializer.ReadInt32("VehiculoID");
            }
        }

        public override void WriteComplex(RemObjects.SDK.Serializer serializer)
        {
            if (serializer.RecordStrictOrder)
            {
                serializer.WriteInt32("SecuenciaVenta", SecuenciaVenta);
                serializer.WriteAnsiString("Serie", Serie);
                serializer.WriteInt32("EstacionID", EstacionID);
                serializer.WriteDateTime("FechaMovimiento", FechaMovimiento);
                serializer.WriteDateTime("FechaCarga", FechaCarga);
                serializer.WriteInt32("Ejercicio", Ejercicio);
                serializer.WriteInt32("Periodo", Periodo);
                serializer.WriteInt32("Dia", Dia);
                serializer.WriteInt32("Turno", Turno);
                serializer.WriteInt32("Kilometraje", Kilometraje);
                serializer.WriteAnsiString("Referencia", Referencia);
                serializer.WriteAnsiString("Tarjeta", Tarjeta);
                serializer.WriteInt32("PosicionCarga", PosicionCarga);
                serializer.WriteDouble("Cantidad", Cantidad);
                serializer.WriteDouble("Precio", Precio);
                serializer.WriteDouble("Importe", Importe);
                serializer.WriteDouble("ImpuestoImporte", ImpuestoImporte);
                serializer.WriteDouble("ImpuestoPorcentaje", ImpuestoPorcentaje);
                serializer.WriteAnsiString("CuentaContable", CuentaContable);
                serializer.WriteAnsiString("ManualAutomatico", ManualAutomatico);
                serializer.WriteInt32("Facturado", Facturado);
                serializer.WriteInt32("EnIngresos", EnIngresos);
                serializer.WriteInt32("Auditado", Auditado);
                serializer.WriteInt32("FacturaID", FacturaID);
                serializer.WriteInt32("ProductoID", ProductoID);
                serializer.WriteInt32("GasolineroID", GasolineroID);
                serializer.WriteInt32("ClienteID", ClienteID);
                serializer.WriteInt32("VehiculoID", VehiculoID);
                serializer.WriteDouble("IEPS", IEPS);
            }
            else
            {
                serializer.WriteInt32("Auditado", Auditado);
                serializer.WriteDouble("Cantidad", Cantidad);
                serializer.WriteInt32("ClienteID", ClienteID);
                serializer.WriteAnsiString("CuentaContable", CuentaContable);
                serializer.WriteInt32("Dia", Dia);
                serializer.WriteInt32("Ejercicio", Ejercicio);
                serializer.WriteInt32("EnIngresos", EnIngresos);
                serializer.WriteInt32("EstacionID", EstacionID);
                serializer.WriteInt32("Facturado", Facturado);
                serializer.WriteInt32("FacturaID", FacturaID);
                serializer.WriteDateTime("FechaCarga", FechaCarga);
                serializer.WriteDateTime("FechaMovimiento", FechaMovimiento);
                serializer.WriteInt32("GasolineroID", GasolineroID);
                serializer.WriteDouble("IEPS", IEPS);
                serializer.WriteDouble("Importe", Importe);
                serializer.WriteDouble("ImpuestoImporte", ImpuestoImporte);
                serializer.WriteDouble("ImpuestoPorcentaje", ImpuestoPorcentaje);
                serializer.WriteInt32("Kilometraje", Kilometraje);
                serializer.WriteAnsiString("ManualAutomatico", ManualAutomatico);
                serializer.WriteInt32("Periodo", Periodo);
                serializer.WriteInt32("PosicionCarga", PosicionCarga);
                serializer.WriteDouble("Precio", Precio);
                serializer.WriteInt32("ProductoID", ProductoID);
                serializer.WriteAnsiString("Referencia", Referencia);
                serializer.WriteInt32("SecuenciaVenta", SecuenciaVenta);
                serializer.WriteAnsiString("Serie", Serie);
                serializer.WriteAnsiString("Tarjeta", Tarjeta);
                serializer.WriteInt32("Turno", Turno);
                serializer.WriteInt32("VehiculoID", VehiculoID);
            }
        }
    }

    [RemObjects.SDK.Activator()]
    [System.Reflection.ObfuscationAttribute(Exclude = true, ApplyToMembers = false)]
    public class TConsumo_Activator : object, RemObjects.SDK.ITypeActivator
    {

        public TConsumo_Activator()
        {
        }

        public object CreateInstance()
        {
            return new TConsumo();
        }
    }

    [System.Serializable()]
    [RemObjects.SDK.Remotable(ActivatorClass = typeof(TAutorizacion_Activator))]
    [System.Reflection.ObfuscationAttribute(Exclude = true)]
    public partial class TAutorizacion : RemObjects.SDK.Types.ComplexType
    {

        private int @__AutorizacionID;

        private System.DateTime @__Fecha;

        private double @__Importe;

        private double @__Cantidad;

        private string @__ImporteCantidad;

        private int @__PosicionCarga;

        private string @__Referencia;

        private int @__EstacionID;

        private int @__VehiculoID;

        private int @__ClienteID;

        private int @__GasolineroID;

        private int @__Odometro;

        public virtual int AutorizacionID
        {
            get
            {
                return @__AutorizacionID;
            }
            set
            {
                @__AutorizacionID = value;
                this.TriggerPropertyChanged("AutorizacionID");
            }
        }

        public virtual System.DateTime Fecha
        {
            get
            {
                return @__Fecha;
            }
            set
            {
                @__Fecha = value;
                this.TriggerPropertyChanged("Fecha");
            }
        }

        public virtual double Importe
        {
            get
            {
                return @__Importe;
            }
            set
            {
                @__Importe = value;
                this.TriggerPropertyChanged("Importe");
            }
        }

        public virtual double Cantidad
        {
            get
            {
                return @__Cantidad;
            }
            set
            {
                @__Cantidad = value;
                this.TriggerPropertyChanged("Cantidad");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string ImporteCantidad
        {
            get
            {
                return @__ImporteCantidad;
            }
            set
            {
                @__ImporteCantidad = value;
                this.TriggerPropertyChanged("ImporteCantidad");
            }
        }

        public virtual int PosicionCarga
        {
            get
            {
                return @__PosicionCarga;
            }
            set
            {
                @__PosicionCarga = value;
                this.TriggerPropertyChanged("PosicionCarga");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string Referencia
        {
            get
            {
                return @__Referencia;
            }
            set
            {
                @__Referencia = value;
                this.TriggerPropertyChanged("Referencia");
            }
        }

        public virtual int EstacionID
        {
            get
            {
                return @__EstacionID;
            }
            set
            {
                @__EstacionID = value;
                this.TriggerPropertyChanged("EstacionID");
            }
        }

        public virtual int VehiculoID
        {
            get
            {
                return @__VehiculoID;
            }
            set
            {
                @__VehiculoID = value;
                this.TriggerPropertyChanged("VehiculoID");
            }
        }

        public virtual int ClienteID
        {
            get
            {
                return @__ClienteID;
            }
            set
            {
                @__ClienteID = value;
                this.TriggerPropertyChanged("ClienteID");
            }
        }

        public virtual int GasolineroID
        {
            get
            {
                return @__GasolineroID;
            }
            set
            {
                @__GasolineroID = value;
                this.TriggerPropertyChanged("GasolineroID");
            }
        }

        public virtual int Odometro
        {
            get
            {
                return @__Odometro;
            }
            set
            {
                @__Odometro = value;
                this.TriggerPropertyChanged("Odometro");
            }
        }

        public override void ReadComplex(RemObjects.SDK.Serializer serializer)
        {
            if (serializer.RecordStrictOrder)
            {
                AutorizacionID = serializer.ReadInt32("AutorizacionID");
                Fecha = serializer.ReadDateTime("Fecha");
                Importe = serializer.ReadDouble("Importe");
                Cantidad = serializer.ReadDouble("Cantidad");
                ImporteCantidad = serializer.ReadAnsiString("ImporteCantidad");
                PosicionCarga = serializer.ReadInt32("PosicionCarga");
                Referencia = serializer.ReadAnsiString("Referencia");
                EstacionID = serializer.ReadInt32("EstacionID");
                VehiculoID = serializer.ReadInt32("VehiculoID");
                ClienteID = serializer.ReadInt32("ClienteID");
                GasolineroID = serializer.ReadInt32("GasolineroID");
                Odometro = serializer.ReadInt32("Odometro");
            }
            else
            {
                AutorizacionID = serializer.ReadInt32("AutorizacionID");
                Cantidad = serializer.ReadDouble("Cantidad");
                ClienteID = serializer.ReadInt32("ClienteID");
                EstacionID = serializer.ReadInt32("EstacionID");
                Fecha = serializer.ReadDateTime("Fecha");
                GasolineroID = serializer.ReadInt32("GasolineroID");
                Importe = serializer.ReadDouble("Importe");
                ImporteCantidad = serializer.ReadAnsiString("ImporteCantidad");
                Odometro = serializer.ReadInt32("Odometro");
                PosicionCarga = serializer.ReadInt32("PosicionCarga");
                Referencia = serializer.ReadAnsiString("Referencia");
                VehiculoID = serializer.ReadInt32("VehiculoID");
            }
        }

        public override void WriteComplex(RemObjects.SDK.Serializer serializer)
        {
            if (serializer.RecordStrictOrder)
            {
                serializer.WriteInt32("AutorizacionID", AutorizacionID);
                serializer.WriteDateTime("Fecha", Fecha);
                serializer.WriteDouble("Importe", Importe);
                serializer.WriteDouble("Cantidad", Cantidad);
                serializer.WriteAnsiString("ImporteCantidad", ImporteCantidad);
                serializer.WriteInt32("PosicionCarga", PosicionCarga);
                serializer.WriteAnsiString("Referencia", Referencia);
                serializer.WriteInt32("EstacionID", EstacionID);
                serializer.WriteInt32("VehiculoID", VehiculoID);
                serializer.WriteInt32("ClienteID", ClienteID);
                serializer.WriteInt32("GasolineroID", GasolineroID);
                serializer.WriteInt32("Odometro", Odometro);
            }
            else
            {
                serializer.WriteInt32("AutorizacionID", AutorizacionID);
                serializer.WriteDouble("Cantidad", Cantidad);
                serializer.WriteInt32("ClienteID", ClienteID);
                serializer.WriteInt32("EstacionID", EstacionID);
                serializer.WriteDateTime("Fecha", Fecha);
                serializer.WriteInt32("GasolineroID", GasolineroID);
                serializer.WriteDouble("Importe", Importe);
                serializer.WriteAnsiString("ImporteCantidad", ImporteCantidad);
                serializer.WriteInt32("Odometro", Odometro);
                serializer.WriteInt32("PosicionCarga", PosicionCarga);
                serializer.WriteAnsiString("Referencia", Referencia);
                serializer.WriteInt32("VehiculoID", VehiculoID);
            }
        }
    }

    [RemObjects.SDK.Activator()]
    [System.Reflection.ObfuscationAttribute(Exclude = true, ApplyToMembers = false)]
    public class TAutorizacion_Activator : object, RemObjects.SDK.ITypeActivator
    {

        public TAutorizacion_Activator()
        {
        }

        public object CreateInstance()
        {
            return new TAutorizacion();
        }
    }

    [System.Serializable()]
    [RemObjects.SDK.Remotable(ActivatorClass = typeof(TAutoriza_Activator))]
    [System.Reflection.ObfuscationAttribute(Exclude = true)]
    public partial class TAutoriza : RemObjects.SDK.Types.ComplexType
    {

        private int @__EstacionID;

        private string @__Referencia;

        private int @__DigitoSeguridad;

        private int @__PosicionCarga;

        private string @__Terminal;

        private string @__NIP;

        private int @__Odometro;

        private double @__Magna;

        private double @__Premium;

        private double @__Diesel;

        private string @__SeleccionDeProducto;

        private int @__AutorizacionID;

        private int @__GasolineroID;

        private int @__ClienteID;

        private int @__VehiculoID;

        private double @__Cantidad;

        private string @__ImporteCantidad;

        private System.DateTime @__Fecha;

        private double @__Importe;

        private int @__Tipo;

        private double @__PresetMN;

        private double @__PresetLT;

        public virtual int EstacionID
        {
            get
            {
                return @__EstacionID;
            }
            set
            {
                @__EstacionID = value;
                this.TriggerPropertyChanged("EstacionID");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string Referencia
        {
            get
            {
                return @__Referencia;
            }
            set
            {
                @__Referencia = value;
                this.TriggerPropertyChanged("Referencia");
            }
        }

        public virtual int DigitoSeguridad
        {
            get
            {
                return @__DigitoSeguridad;
            }
            set
            {
                @__DigitoSeguridad = value;
                this.TriggerPropertyChanged("DigitoSeguridad");
            }
        }

        public virtual int PosicionCarga
        {
            get
            {
                return @__PosicionCarga;
            }
            set
            {
                @__PosicionCarga = value;
                this.TriggerPropertyChanged("PosicionCarga");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string Terminal
        {
            get
            {
                return @__Terminal;
            }
            set
            {
                @__Terminal = value;
                this.TriggerPropertyChanged("Terminal");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string NIP
        {
            get
            {
                return @__NIP;
            }
            set
            {
                @__NIP = value;
                this.TriggerPropertyChanged("NIP");
            }
        }

        public virtual int Odometro
        {
            get
            {
                return @__Odometro;
            }
            set
            {
                @__Odometro = value;
                this.TriggerPropertyChanged("Odometro");
            }
        }

        public virtual double Magna
        {
            get
            {
                return @__Magna;
            }
            set
            {
                @__Magna = value;
                this.TriggerPropertyChanged("Magna");
            }
        }

        public virtual double Premium
        {
            get
            {
                return @__Premium;
            }
            set
            {
                @__Premium = value;
                this.TriggerPropertyChanged("Premium");
            }
        }

        public virtual double Diesel
        {
            get
            {
                return @__Diesel;
            }
            set
            {
                @__Diesel = value;
                this.TriggerPropertyChanged("Diesel");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string SeleccionDeProducto
        {
            get
            {
                return @__SeleccionDeProducto;
            }
            set
            {
                @__SeleccionDeProducto = value;
                this.TriggerPropertyChanged("SeleccionDeProducto");
            }
        }

        public virtual int AutorizacionID
        {
            get
            {
                return @__AutorizacionID;
            }
            set
            {
                @__AutorizacionID = value;
                this.TriggerPropertyChanged("AutorizacionID");
            }
        }

        public virtual int GasolineroID
        {
            get
            {
                return @__GasolineroID;
            }
            set
            {
                @__GasolineroID = value;
                this.TriggerPropertyChanged("GasolineroID");
            }
        }

        public virtual int ClienteID
        {
            get
            {
                return @__ClienteID;
            }
            set
            {
                @__ClienteID = value;
                this.TriggerPropertyChanged("ClienteID");
            }
        }

        public virtual int VehiculoID
        {
            get
            {
                return @__VehiculoID;
            }
            set
            {
                @__VehiculoID = value;
                this.TriggerPropertyChanged("VehiculoID");
            }
        }

        public virtual double Cantidad
        {
            get
            {
                return @__Cantidad;
            }
            set
            {
                @__Cantidad = value;
                this.TriggerPropertyChanged("Cantidad");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string ImporteCantidad
        {
            get
            {
                return @__ImporteCantidad;
            }
            set
            {
                @__ImporteCantidad = value;
                this.TriggerPropertyChanged("ImporteCantidad");
            }
        }

        public virtual System.DateTime Fecha
        {
            get
            {
                return @__Fecha;
            }
            set
            {
                @__Fecha = value;
                this.TriggerPropertyChanged("Fecha");
            }
        }

        public virtual double Importe
        {
            get
            {
                return @__Importe;
            }
            set
            {
                @__Importe = value;
                this.TriggerPropertyChanged("Importe");
            }
        }

        public virtual int Tipo
        {
            get
            {
                return @__Tipo;
            }
            set
            {
                @__Tipo = value;
                this.TriggerPropertyChanged("Tipo");
            }
        }

        public virtual double PresetMN
        {
            get
            {
                return @__PresetMN;
            }
            set
            {
                @__PresetMN = value;
                this.TriggerPropertyChanged("PresetMN");
            }
        }

        public virtual double PresetLT
        {
            get
            {
                return @__PresetLT;
            }
            set
            {
                @__PresetLT = value;
                this.TriggerPropertyChanged("PresetLT");
            }
        }

        public override void ReadComplex(RemObjects.SDK.Serializer serializer)
        {
            if (serializer.RecordStrictOrder)
            {
                EstacionID = serializer.ReadInt32("EstacionID");
                Referencia = serializer.ReadAnsiString("Referencia");
                DigitoSeguridad = serializer.ReadInt32("DigitoSeguridad");
                PosicionCarga = serializer.ReadInt32("PosicionCarga");
                Terminal = serializer.ReadAnsiString("Terminal");
                NIP = serializer.ReadAnsiString("NIP");
                Odometro = serializer.ReadInt32("Odometro");
                Magna = serializer.ReadDouble("Magna");
                Premium = serializer.ReadDouble("Premium");
                Diesel = serializer.ReadDouble("Diesel");
                SeleccionDeProducto = serializer.ReadAnsiString("SeleccionDeProducto");
                AutorizacionID = serializer.ReadInt32("AutorizacionID");
                GasolineroID = serializer.ReadInt32("GasolineroID");
                ClienteID = serializer.ReadInt32("ClienteID");
                VehiculoID = serializer.ReadInt32("VehiculoID");
                Cantidad = serializer.ReadDouble("Cantidad");
                ImporteCantidad = serializer.ReadAnsiString("ImporteCantidad");
                Fecha = serializer.ReadDateTime("Fecha");
                Importe = serializer.ReadDouble("Importe");
                Tipo = serializer.ReadInt32("Tipo");
                PresetMN = serializer.ReadDouble("PresetMN");
                PresetLT = serializer.ReadDouble("PresetLT");
            }
            else
            {
                AutorizacionID = serializer.ReadInt32("AutorizacionID");
                Cantidad = serializer.ReadDouble("Cantidad");
                ClienteID = serializer.ReadInt32("ClienteID");
                Diesel = serializer.ReadDouble("Diesel");
                DigitoSeguridad = serializer.ReadInt32("DigitoSeguridad");
                EstacionID = serializer.ReadInt32("EstacionID");
                Fecha = serializer.ReadDateTime("Fecha");
                GasolineroID = serializer.ReadInt32("GasolineroID");
                Importe = serializer.ReadDouble("Importe");
                ImporteCantidad = serializer.ReadAnsiString("ImporteCantidad");
                Magna = serializer.ReadDouble("Magna");
                NIP = serializer.ReadAnsiString("NIP");
                Odometro = serializer.ReadInt32("Odometro");
                PosicionCarga = serializer.ReadInt32("PosicionCarga");
                Premium = serializer.ReadDouble("Premium");
                PresetLT = serializer.ReadDouble("PresetLT");
                PresetMN = serializer.ReadDouble("PresetMN");
                Referencia = serializer.ReadAnsiString("Referencia");
                SeleccionDeProducto = serializer.ReadAnsiString("SeleccionDeProducto");
                Terminal = serializer.ReadAnsiString("Terminal");
                Tipo = serializer.ReadInt32("Tipo");
                VehiculoID = serializer.ReadInt32("VehiculoID");
            }
        }

        public override void WriteComplex(RemObjects.SDK.Serializer serializer)
        {
            if (serializer.RecordStrictOrder)
            {
                serializer.WriteInt32("EstacionID", EstacionID);
                serializer.WriteAnsiString("Referencia", Referencia);
                serializer.WriteInt32("DigitoSeguridad", DigitoSeguridad);
                serializer.WriteInt32("PosicionCarga", PosicionCarga);
                serializer.WriteAnsiString("Terminal", Terminal);
                serializer.WriteAnsiString("NIP", NIP);
                serializer.WriteInt32("Odometro", Odometro);
                serializer.WriteDouble("Magna", Magna);
                serializer.WriteDouble("Premium", Premium);
                serializer.WriteDouble("Diesel", Diesel);
                serializer.WriteAnsiString("SeleccionDeProducto", SeleccionDeProducto);
                serializer.WriteInt32("AutorizacionID", AutorizacionID);
                serializer.WriteInt32("GasolineroID", GasolineroID);
                serializer.WriteInt32("ClienteID", ClienteID);
                serializer.WriteInt32("VehiculoID", VehiculoID);
                serializer.WriteDouble("Cantidad", Cantidad);
                serializer.WriteAnsiString("ImporteCantidad", ImporteCantidad);
                serializer.WriteDateTime("Fecha", Fecha);
                serializer.WriteDouble("Importe", Importe);
                serializer.WriteInt32("Tipo", Tipo);
                serializer.WriteDouble("PresetMN", PresetMN);
                serializer.WriteDouble("PresetLT", PresetLT);
            }
            else
            {
                serializer.WriteInt32("AutorizacionID", AutorizacionID);
                serializer.WriteDouble("Cantidad", Cantidad);
                serializer.WriteInt32("ClienteID", ClienteID);
                serializer.WriteDouble("Diesel", Diesel);
                serializer.WriteInt32("DigitoSeguridad", DigitoSeguridad);
                serializer.WriteInt32("EstacionID", EstacionID);
                serializer.WriteDateTime("Fecha", Fecha);
                serializer.WriteInt32("GasolineroID", GasolineroID);
                serializer.WriteDouble("Importe", Importe);
                serializer.WriteAnsiString("ImporteCantidad", ImporteCantidad);
                serializer.WriteDouble("Magna", Magna);
                serializer.WriteAnsiString("NIP", NIP);
                serializer.WriteInt32("Odometro", Odometro);
                serializer.WriteInt32("PosicionCarga", PosicionCarga);
                serializer.WriteDouble("Premium", Premium);
                serializer.WriteDouble("PresetLT", PresetLT);
                serializer.WriteDouble("PresetMN", PresetMN);
                serializer.WriteAnsiString("Referencia", Referencia);
                serializer.WriteAnsiString("SeleccionDeProducto", SeleccionDeProducto);
                serializer.WriteAnsiString("Terminal", Terminal);
                serializer.WriteInt32("Tipo", Tipo);
                serializer.WriteInt32("VehiculoID", VehiculoID);
            }
        }
    }

    [RemObjects.SDK.Activator()]
    [System.Reflection.ObfuscationAttribute(Exclude = true, ApplyToMembers = false)]
    public class TAutoriza_Activator : object, RemObjects.SDK.ITypeActivator
    {

        public TAutoriza_Activator()
        {
        }

        public object CreateInstance()
        {
            return new TAutoriza();
        }
    }

    [System.Serializable()]
    [RemObjects.SDK.Remotable(ActivatorClass = typeof(TTarjeta_Activator))]
    [System.Reflection.ObfuscationAttribute(Exclude = true)]
    public partial class TTarjeta : RemObjects.SDK.Types.ComplexType
    {

        private int @__GasolineroID;

        private int @__ClienteID;

        private int @__VehiculoID;

        private double @__Cantidad;

        private string @__LitrosImporte;

        private string @__MsnError;

        private int @__Status;

        private bool @__Valido;

        private string @__Nombre;

        private string @__RazonSocial;

        private string @__RFC;

        private string @__Identificacion;

        private double @__Saldo;

        private string @__Mensaje;

        private string @__CentroCostos;

        private double @__Clasificacion;

        private string @__Productos;

        public virtual int GasolineroID
        {
            get
            {
                return @__GasolineroID;
            }
            set
            {
                @__GasolineroID = value;
                this.TriggerPropertyChanged("GasolineroID");
            }
        }

        public virtual int ClienteID
        {
            get
            {
                return @__ClienteID;
            }
            set
            {
                @__ClienteID = value;
                this.TriggerPropertyChanged("ClienteID");
            }
        }

        public virtual int VehiculoID
        {
            get
            {
                return @__VehiculoID;
            }
            set
            {
                @__VehiculoID = value;
                this.TriggerPropertyChanged("VehiculoID");
            }
        }

        public virtual double Cantidad
        {
            get
            {
                return @__Cantidad;
            }
            set
            {
                @__Cantidad = value;
                this.TriggerPropertyChanged("Cantidad");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string LitrosImporte
        {
            get
            {
                return @__LitrosImporte;
            }
            set
            {
                @__LitrosImporte = value;
                this.TriggerPropertyChanged("LitrosImporte");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string MsnError
        {
            get
            {
                return @__MsnError;
            }
            set
            {
                @__MsnError = value;
                this.TriggerPropertyChanged("MsnError");
            }
        }

        public virtual int Status
        {
            get
            {
                return @__Status;
            }
            set
            {
                @__Status = value;
                this.TriggerPropertyChanged("Status");
            }
        }

        public virtual bool Valido
        {
            get
            {
                return @__Valido;
            }
            set
            {
                @__Valido = value;
                this.TriggerPropertyChanged("Valido");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string Nombre
        {
            get
            {
                return @__Nombre;
            }
            set
            {
                @__Nombre = value;
                this.TriggerPropertyChanged("Nombre");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string RazonSocial
        {
            get
            {
                return @__RazonSocial;
            }
            set
            {
                @__RazonSocial = value;
                this.TriggerPropertyChanged("RazonSocial");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string RFC
        {
            get
            {
                return @__RFC;
            }
            set
            {
                @__RFC = value;
                this.TriggerPropertyChanged("RFC");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string Identificacion
        {
            get
            {
                return @__Identificacion;
            }
            set
            {
                @__Identificacion = value;
                this.TriggerPropertyChanged("Identificacion");
            }
        }

        public virtual double Saldo
        {
            get
            {
                return @__Saldo;
            }
            set
            {
                @__Saldo = value;
                this.TriggerPropertyChanged("Saldo");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string Mensaje
        {
            get
            {
                return @__Mensaje;
            }
            set
            {
                @__Mensaje = value;
                this.TriggerPropertyChanged("Mensaje");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string CentroCostos
        {
            get
            {
                return @__CentroCostos;
            }
            set
            {
                @__CentroCostos = value;
                this.TriggerPropertyChanged("CentroCostos");
            }
        }

        public virtual double Clasificacion
        {
            get
            {
                return @__Clasificacion;
            }
            set
            {
                @__Clasificacion = value;
                this.TriggerPropertyChanged("Clasificacion");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string Productos
        {
            get
            {
                return @__Productos;
            }
            set
            {
                @__Productos = value;
                this.TriggerPropertyChanged("Productos");
            }
        }

        public override void ReadComplex(RemObjects.SDK.Serializer serializer)
        {
            if (serializer.RecordStrictOrder)
            {
                GasolineroID = serializer.ReadInt32("GasolineroID");
                ClienteID = serializer.ReadInt32("ClienteID");
                VehiculoID = serializer.ReadInt32("VehiculoID");
                Cantidad = serializer.ReadDouble("Cantidad");
                LitrosImporte = serializer.ReadAnsiString("LitrosImporte");
                MsnError = serializer.ReadAnsiString("MsnError");
                Status = serializer.ReadInt32("Status");
                Valido = serializer.ReadBoolean("Valido");
                Nombre = serializer.ReadAnsiString("Nombre");
                RazonSocial = serializer.ReadAnsiString("RazonSocial");
                RFC = serializer.ReadAnsiString("RFC");
                Identificacion = serializer.ReadAnsiString("Identificacion");
                Saldo = serializer.ReadDouble("Saldo");
                Mensaje = serializer.ReadAnsiString("Mensaje");
                CentroCostos = serializer.ReadAnsiString("CentroCostos");
                Clasificacion = serializer.ReadDouble("Clasificacion");
                Productos = serializer.ReadAnsiString("Productos");
            }
            else
            {
                Cantidad = serializer.ReadDouble("Cantidad");
                CentroCostos = serializer.ReadAnsiString("CentroCostos");
                Clasificacion = serializer.ReadDouble("Clasificacion");
                ClienteID = serializer.ReadInt32("ClienteID");
                GasolineroID = serializer.ReadInt32("GasolineroID");
                Identificacion = serializer.ReadAnsiString("Identificacion");
                LitrosImporte = serializer.ReadAnsiString("LitrosImporte");
                Mensaje = serializer.ReadAnsiString("Mensaje");
                MsnError = serializer.ReadAnsiString("MsnError");
                Nombre = serializer.ReadAnsiString("Nombre");
                Productos = serializer.ReadAnsiString("Productos");
                RazonSocial = serializer.ReadAnsiString("RazonSocial");
                RFC = serializer.ReadAnsiString("RFC");
                Saldo = serializer.ReadDouble("Saldo");
                Status = serializer.ReadInt32("Status");
                Valido = serializer.ReadBoolean("Valido");
                VehiculoID = serializer.ReadInt32("VehiculoID");
            }
        }

        public override void WriteComplex(RemObjects.SDK.Serializer serializer)
        {
            if (serializer.RecordStrictOrder)
            {
                serializer.WriteInt32("GasolineroID", GasolineroID);
                serializer.WriteInt32("ClienteID", ClienteID);
                serializer.WriteInt32("VehiculoID", VehiculoID);
                serializer.WriteDouble("Cantidad", Cantidad);
                serializer.WriteAnsiString("LitrosImporte", LitrosImporte);
                serializer.WriteAnsiString("MsnError", MsnError);
                serializer.WriteInt32("Status", Status);
                serializer.WriteBoolean("Valido", Valido);
                serializer.WriteAnsiString("Nombre", Nombre);
                serializer.WriteAnsiString("RazonSocial", RazonSocial);
                serializer.WriteAnsiString("RFC", RFC);
                serializer.WriteAnsiString("Identificacion", Identificacion);
                serializer.WriteDouble("Saldo", Saldo);
                serializer.WriteAnsiString("Mensaje", Mensaje);
                serializer.WriteAnsiString("CentroCostos", CentroCostos);
                serializer.WriteDouble("Clasificacion", Clasificacion);
                serializer.WriteAnsiString("Productos", Productos);
            }
            else
            {
                serializer.WriteDouble("Cantidad", Cantidad);
                serializer.WriteAnsiString("CentroCostos", CentroCostos);
                serializer.WriteDouble("Clasificacion", Clasificacion);
                serializer.WriteInt32("ClienteID", ClienteID);
                serializer.WriteInt32("GasolineroID", GasolineroID);
                serializer.WriteAnsiString("Identificacion", Identificacion);
                serializer.WriteAnsiString("LitrosImporte", LitrosImporte);
                serializer.WriteAnsiString("Mensaje", Mensaje);
                serializer.WriteAnsiString("MsnError", MsnError);
                serializer.WriteAnsiString("Nombre", Nombre);
                serializer.WriteAnsiString("Productos", Productos);
                serializer.WriteAnsiString("RazonSocial", RazonSocial);
                serializer.WriteAnsiString("RFC", RFC);
                serializer.WriteDouble("Saldo", Saldo);
                serializer.WriteInt32("Status", Status);
                serializer.WriteBoolean("Valido", Valido);
                serializer.WriteInt32("VehiculoID", VehiculoID);
            }
        }
    }

    [RemObjects.SDK.Activator()]
    [System.Reflection.ObfuscationAttribute(Exclude = true, ApplyToMembers = false)]
    public class TTarjeta_Activator : object, RemObjects.SDK.ITypeActivator
    {

        public TTarjeta_Activator()
        {
        }

        public object CreateInstance()
        {
            return new TTarjeta();
        }
    }

    [System.Serializable()]
    [RemObjects.SDK.Remotable(ActivatorClass = typeof(TMovimiento_Activator))]
    [System.Reflection.ObfuscationAttribute(Exclude = true)]
    public partial class TMovimiento : RemObjects.SDK.Types.ComplexType
    {

        private int @__MovimientoID;

        private System.DateTime @__FechaMovimiento;

        private System.DateTime @__FechaVencimiento;

        private string @__Referencia;

        private int @__Ejercicio;

        private int @__Periodo;

        private string @__CargoAbono;

        private double @__Cargo;

        private double @__Abono;

        private System.DateTime @__FechaRegistro;

        private string @__Origen;

        private bool @__AfectaSaldos;

        private string @__TipoMovimiento;

        private int @__UsuarioID;

        private int @__ClienteID;

        public virtual int MovimientoID
        {
            get
            {
                return @__MovimientoID;
            }
            set
            {
                @__MovimientoID = value;
                this.TriggerPropertyChanged("MovimientoID");
            }
        }

        public virtual System.DateTime FechaMovimiento
        {
            get
            {
                return @__FechaMovimiento;
            }
            set
            {
                @__FechaMovimiento = value;
                this.TriggerPropertyChanged("FechaMovimiento");
            }
        }

        public virtual System.DateTime FechaVencimiento
        {
            get
            {
                return @__FechaVencimiento;
            }
            set
            {
                @__FechaVencimiento = value;
                this.TriggerPropertyChanged("FechaVencimiento");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string Referencia
        {
            get
            {
                return @__Referencia;
            }
            set
            {
                @__Referencia = value;
                this.TriggerPropertyChanged("Referencia");
            }
        }

        public virtual int Ejercicio
        {
            get
            {
                return @__Ejercicio;
            }
            set
            {
                @__Ejercicio = value;
                this.TriggerPropertyChanged("Ejercicio");
            }
        }

        public virtual int Periodo
        {
            get
            {
                return @__Periodo;
            }
            set
            {
                @__Periodo = value;
                this.TriggerPropertyChanged("Periodo");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string CargoAbono
        {
            get
            {
                return @__CargoAbono;
            }
            set
            {
                @__CargoAbono = value;
                this.TriggerPropertyChanged("CargoAbono");
            }
        }

        public virtual double Cargo
        {
            get
            {
                return @__Cargo;
            }
            set
            {
                @__Cargo = value;
                this.TriggerPropertyChanged("Cargo");
            }
        }

        public virtual double Abono
        {
            get
            {
                return @__Abono;
            }
            set
            {
                @__Abono = value;
                this.TriggerPropertyChanged("Abono");
            }
        }

        public virtual System.DateTime FechaRegistro
        {
            get
            {
                return @__FechaRegistro;
            }
            set
            {
                @__FechaRegistro = value;
                this.TriggerPropertyChanged("FechaRegistro");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string Origen
        {
            get
            {
                return @__Origen;
            }
            set
            {
                @__Origen = value;
                this.TriggerPropertyChanged("Origen");
            }
        }

        public virtual bool AfectaSaldos
        {
            get
            {
                return @__AfectaSaldos;
            }
            set
            {
                @__AfectaSaldos = value;
                this.TriggerPropertyChanged("AfectaSaldos");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string TipoMovimiento
        {
            get
            {
                return @__TipoMovimiento;
            }
            set
            {
                @__TipoMovimiento = value;
                this.TriggerPropertyChanged("TipoMovimiento");
            }
        }

        public virtual int UsuarioID
        {
            get
            {
                return @__UsuarioID;
            }
            set
            {
                @__UsuarioID = value;
                this.TriggerPropertyChanged("UsuarioID");
            }
        }

        public virtual int ClienteID
        {
            get
            {
                return @__ClienteID;
            }
            set
            {
                @__ClienteID = value;
                this.TriggerPropertyChanged("ClienteID");
            }
        }

        public override void ReadComplex(RemObjects.SDK.Serializer serializer)
        {
            if (serializer.RecordStrictOrder)
            {
                MovimientoID = serializer.ReadInt32("MovimientoID");
                FechaMovimiento = serializer.ReadDateTime("FechaMovimiento");
                FechaVencimiento = serializer.ReadDateTime("FechaVencimiento");
                Referencia = serializer.ReadAnsiString("Referencia");
                Ejercicio = serializer.ReadInt32("Ejercicio");
                Periodo = serializer.ReadInt32("Periodo");
                CargoAbono = serializer.ReadAnsiString("CargoAbono");
                Cargo = serializer.ReadDouble("Cargo");
                Abono = serializer.ReadDouble("Abono");
                FechaRegistro = serializer.ReadDateTime("FechaRegistro");
                Origen = serializer.ReadAnsiString("Origen");
                AfectaSaldos = serializer.ReadBoolean("AfectaSaldos");
                TipoMovimiento = serializer.ReadAnsiString("TipoMovimiento");
                UsuarioID = serializer.ReadInt32("UsuarioID");
                ClienteID = serializer.ReadInt32("ClienteID");
            }
            else
            {
                Abono = serializer.ReadDouble("Abono");
                AfectaSaldos = serializer.ReadBoolean("AfectaSaldos");
                Cargo = serializer.ReadDouble("Cargo");
                CargoAbono = serializer.ReadAnsiString("CargoAbono");
                ClienteID = serializer.ReadInt32("ClienteID");
                Ejercicio = serializer.ReadInt32("Ejercicio");
                FechaMovimiento = serializer.ReadDateTime("FechaMovimiento");
                FechaRegistro = serializer.ReadDateTime("FechaRegistro");
                FechaVencimiento = serializer.ReadDateTime("FechaVencimiento");
                MovimientoID = serializer.ReadInt32("MovimientoID");
                Origen = serializer.ReadAnsiString("Origen");
                Periodo = serializer.ReadInt32("Periodo");
                Referencia = serializer.ReadAnsiString("Referencia");
                TipoMovimiento = serializer.ReadAnsiString("TipoMovimiento");
                UsuarioID = serializer.ReadInt32("UsuarioID");
            }
        }

        public override void WriteComplex(RemObjects.SDK.Serializer serializer)
        {
            if (serializer.RecordStrictOrder)
            {
                serializer.WriteInt32("MovimientoID", MovimientoID);
                serializer.WriteDateTime("FechaMovimiento", FechaMovimiento);
                serializer.WriteDateTime("FechaVencimiento", FechaVencimiento);
                serializer.WriteAnsiString("Referencia", Referencia);
                serializer.WriteInt32("Ejercicio", Ejercicio);
                serializer.WriteInt32("Periodo", Periodo);
                serializer.WriteAnsiString("CargoAbono", CargoAbono);
                serializer.WriteDouble("Cargo", Cargo);
                serializer.WriteDouble("Abono", Abono);
                serializer.WriteDateTime("FechaRegistro", FechaRegistro);
                serializer.WriteAnsiString("Origen", Origen);
                serializer.WriteBoolean("AfectaSaldos", AfectaSaldos);
                serializer.WriteAnsiString("TipoMovimiento", TipoMovimiento);
                serializer.WriteInt32("UsuarioID", UsuarioID);
                serializer.WriteInt32("ClienteID", ClienteID);
            }
            else
            {
                serializer.WriteDouble("Abono", Abono);
                serializer.WriteBoolean("AfectaSaldos", AfectaSaldos);
                serializer.WriteDouble("Cargo", Cargo);
                serializer.WriteAnsiString("CargoAbono", CargoAbono);
                serializer.WriteInt32("ClienteID", ClienteID);
                serializer.WriteInt32("Ejercicio", Ejercicio);
                serializer.WriteDateTime("FechaMovimiento", FechaMovimiento);
                serializer.WriteDateTime("FechaRegistro", FechaRegistro);
                serializer.WriteDateTime("FechaVencimiento", FechaVencimiento);
                serializer.WriteInt32("MovimientoID", MovimientoID);
                serializer.WriteAnsiString("Origen", Origen);
                serializer.WriteInt32("Periodo", Periodo);
                serializer.WriteAnsiString("Referencia", Referencia);
                serializer.WriteAnsiString("TipoMovimiento", TipoMovimiento);
                serializer.WriteInt32("UsuarioID", UsuarioID);
            }
        }
    }

    [RemObjects.SDK.Activator()]
    [System.Reflection.ObfuscationAttribute(Exclude = true, ApplyToMembers = false)]
    public class TMovimiento_Activator : object, RemObjects.SDK.ITypeActivator
    {

        public TMovimiento_Activator()
        {
        }

        public object CreateInstance()
        {
            return new TMovimiento();
        }
    }

    [System.Serializable()]
    [RemObjects.SDK.Remotable(ActivatorClass = typeof(TSaldoDocumento_Activator))]
    [System.Reflection.ObfuscationAttribute(Exclude = true)]
    public partial class TSaldoDocumento : RemObjects.SDK.Types.ComplexType
    {

        private int @__SaldoDocumentoID;

        private System.DateTime @__Fecha;

        private System.DateTime @__FechaVencimiento;

        private double @__Cargo;

        private double @__Abono;

        private string @__Referencia;

        private int @__ClienteID;

        private int @__MovimientoID;

        private int @__ReciboID;

        private int @__BancoID;

        public virtual int SaldoDocumentoID
        {
            get
            {
                return @__SaldoDocumentoID;
            }
            set
            {
                @__SaldoDocumentoID = value;
                this.TriggerPropertyChanged("SaldoDocumentoID");
            }
        }

        public virtual System.DateTime Fecha
        {
            get
            {
                return @__Fecha;
            }
            set
            {
                @__Fecha = value;
                this.TriggerPropertyChanged("Fecha");
            }
        }

        public virtual System.DateTime FechaVencimiento
        {
            get
            {
                return @__FechaVencimiento;
            }
            set
            {
                @__FechaVencimiento = value;
                this.TriggerPropertyChanged("FechaVencimiento");
            }
        }

        public virtual double Cargo
        {
            get
            {
                return @__Cargo;
            }
            set
            {
                @__Cargo = value;
                this.TriggerPropertyChanged("Cargo");
            }
        }

        public virtual double Abono
        {
            get
            {
                return @__Abono;
            }
            set
            {
                @__Abono = value;
                this.TriggerPropertyChanged("Abono");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string Referencia
        {
            get
            {
                return @__Referencia;
            }
            set
            {
                @__Referencia = value;
                this.TriggerPropertyChanged("Referencia");
            }
        }

        public virtual int ClienteID
        {
            get
            {
                return @__ClienteID;
            }
            set
            {
                @__ClienteID = value;
                this.TriggerPropertyChanged("ClienteID");
            }
        }

        public virtual int MovimientoID
        {
            get
            {
                return @__MovimientoID;
            }
            set
            {
                @__MovimientoID = value;
                this.TriggerPropertyChanged("MovimientoID");
            }
        }

        public virtual int ReciboID
        {
            get
            {
                return @__ReciboID;
            }
            set
            {
                @__ReciboID = value;
                this.TriggerPropertyChanged("ReciboID");
            }
        }

        public virtual int BancoID
        {
            get
            {
                return @__BancoID;
            }
            set
            {
                @__BancoID = value;
                this.TriggerPropertyChanged("BancoID");
            }
        }

        public override void ReadComplex(RemObjects.SDK.Serializer serializer)
        {
            if (serializer.RecordStrictOrder)
            {
                SaldoDocumentoID = serializer.ReadInt32("SaldoDocumentoID");
                Fecha = serializer.ReadDateTime("Fecha");
                FechaVencimiento = serializer.ReadDateTime("FechaVencimiento");
                Cargo = serializer.ReadDouble("Cargo");
                Abono = serializer.ReadDouble("Abono");
                Referencia = serializer.ReadAnsiString("Referencia");
                ClienteID = serializer.ReadInt32("ClienteID");
                MovimientoID = serializer.ReadInt32("MovimientoID");
                ReciboID = serializer.ReadInt32("ReciboID");
                BancoID = serializer.ReadInt32("BancoID");
            }
            else
            {
                Abono = serializer.ReadDouble("Abono");
                BancoID = serializer.ReadInt32("BancoID");
                Cargo = serializer.ReadDouble("Cargo");
                ClienteID = serializer.ReadInt32("ClienteID");
                Fecha = serializer.ReadDateTime("Fecha");
                FechaVencimiento = serializer.ReadDateTime("FechaVencimiento");
                MovimientoID = serializer.ReadInt32("MovimientoID");
                ReciboID = serializer.ReadInt32("ReciboID");
                Referencia = serializer.ReadAnsiString("Referencia");
                SaldoDocumentoID = serializer.ReadInt32("SaldoDocumentoID");
            }
        }

        public override void WriteComplex(RemObjects.SDK.Serializer serializer)
        {
            if (serializer.RecordStrictOrder)
            {
                serializer.WriteInt32("SaldoDocumentoID", SaldoDocumentoID);
                serializer.WriteDateTime("Fecha", Fecha);
                serializer.WriteDateTime("FechaVencimiento", FechaVencimiento);
                serializer.WriteDouble("Cargo", Cargo);
                serializer.WriteDouble("Abono", Abono);
                serializer.WriteAnsiString("Referencia", Referencia);
                serializer.WriteInt32("ClienteID", ClienteID);
                serializer.WriteInt32("MovimientoID", MovimientoID);
                serializer.WriteInt32("ReciboID", ReciboID);
                serializer.WriteInt32("BancoID", BancoID);
            }
            else
            {
                serializer.WriteDouble("Abono", Abono);
                serializer.WriteInt32("BancoID", BancoID);
                serializer.WriteDouble("Cargo", Cargo);
                serializer.WriteInt32("ClienteID", ClienteID);
                serializer.WriteDateTime("Fecha", Fecha);
                serializer.WriteDateTime("FechaVencimiento", FechaVencimiento);
                serializer.WriteInt32("MovimientoID", MovimientoID);
                serializer.WriteInt32("ReciboID", ReciboID);
                serializer.WriteAnsiString("Referencia", Referencia);
                serializer.WriteInt32("SaldoDocumentoID", SaldoDocumentoID);
            }
        }
    }

    [RemObjects.SDK.Activator()]
    [System.Reflection.ObfuscationAttribute(Exclude = true, ApplyToMembers = false)]
    public class TSaldoDocumento_Activator : object, RemObjects.SDK.ITypeActivator
    {

        public TSaldoDocumento_Activator()
        {
        }

        public object CreateInstance()
        {
            return new TSaldoDocumento();
        }
    }

    [System.Serializable()]
    [RemObjects.SDK.Remotable(ActivatorClass = typeof(TDatosVehiculo_Activator))]
    [System.Reflection.ObfuscationAttribute(Exclude = true)]
    public partial class TDatosVehiculo : RemObjects.SDK.Types.ComplexType
    {

        private int @__ClienteID;

        private int @__VehiculoID;

        private string @__ClienteNombre;

        private string @__Referencia;

        public virtual int ClienteID
        {
            get
            {
                return @__ClienteID;
            }
            set
            {
                @__ClienteID = value;
                this.TriggerPropertyChanged("ClienteID");
            }
        }

        public virtual int VehiculoID
        {
            get
            {
                return @__VehiculoID;
            }
            set
            {
                @__VehiculoID = value;
                this.TriggerPropertyChanged("VehiculoID");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string ClienteNombre
        {
            get
            {
                return @__ClienteNombre;
            }
            set
            {
                @__ClienteNombre = value;
                this.TriggerPropertyChanged("ClienteNombre");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string Referencia
        {
            get
            {
                return @__Referencia;
            }
            set
            {
                @__Referencia = value;
                this.TriggerPropertyChanged("Referencia");
            }
        }

        public override void ReadComplex(RemObjects.SDK.Serializer serializer)
        {
            if (serializer.RecordStrictOrder)
            {
                ClienteID = serializer.ReadInt32("ClienteID");
                VehiculoID = serializer.ReadInt32("VehiculoID");
                ClienteNombre = serializer.ReadAnsiString("ClienteNombre");
                Referencia = serializer.ReadAnsiString("Referencia");
            }
            else
            {
                ClienteID = serializer.ReadInt32("ClienteID");
                ClienteNombre = serializer.ReadAnsiString("ClienteNombre");
                Referencia = serializer.ReadAnsiString("Referencia");
                VehiculoID = serializer.ReadInt32("VehiculoID");
            }
        }

        public override void WriteComplex(RemObjects.SDK.Serializer serializer)
        {
            if (serializer.RecordStrictOrder)
            {
                serializer.WriteInt32("ClienteID", ClienteID);
                serializer.WriteInt32("VehiculoID", VehiculoID);
                serializer.WriteAnsiString("ClienteNombre", ClienteNombre);
                serializer.WriteAnsiString("Referencia", Referencia);
            }
            else
            {
                serializer.WriteInt32("ClienteID", ClienteID);
                serializer.WriteAnsiString("ClienteNombre", ClienteNombre);
                serializer.WriteAnsiString("Referencia", Referencia);
                serializer.WriteInt32("VehiculoID", VehiculoID);
            }
        }
    }

    [RemObjects.SDK.Activator()]
    [System.Reflection.ObfuscationAttribute(Exclude = true, ApplyToMembers = false)]
    public class TDatosVehiculo_Activator : object, RemObjects.SDK.ITypeActivator
    {

        public TDatosVehiculo_Activator()
        {
        }

        public object CreateInstance()
        {
            return new TDatosVehiculo();
        }
    }

    [System.Serializable()]
    [RemObjects.SDK.Remotable(ActivatorClass = typeof(TTarjetaLLave_Activator))]
    [System.Reflection.ObfuscationAttribute(Exclude = true)]
    public partial class TTarjetaLLave : RemObjects.SDK.Types.ComplexType
    {

        private int @__UsuarioID;

        private string @__Nombre;

        private string @__Tarjeta;

        private int @__EstacionID;

        private bool @__Activo;

        public virtual int UsuarioID
        {
            get
            {
                return @__UsuarioID;
            }
            set
            {
                @__UsuarioID = value;
                this.TriggerPropertyChanged("UsuarioID");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string Nombre
        {
            get
            {
                return @__Nombre;
            }
            set
            {
                @__Nombre = value;
                this.TriggerPropertyChanged("Nombre");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string Tarjeta
        {
            get
            {
                return @__Tarjeta;
            }
            set
            {
                @__Tarjeta = value;
                this.TriggerPropertyChanged("Tarjeta");
            }
        }

        public virtual int EstacionID
        {
            get
            {
                return @__EstacionID;
            }
            set
            {
                @__EstacionID = value;
                this.TriggerPropertyChanged("EstacionID");
            }
        }

        public virtual bool Activo
        {
            get
            {
                return @__Activo;
            }
            set
            {
                @__Activo = value;
                this.TriggerPropertyChanged("Activo");
            }
        }

        public override void ReadComplex(RemObjects.SDK.Serializer serializer)
        {
            if (serializer.RecordStrictOrder)
            {
                UsuarioID = serializer.ReadInt32("UsuarioID");
                Nombre = serializer.ReadAnsiString("Nombre");
                Tarjeta = serializer.ReadAnsiString("Tarjeta");
                EstacionID = serializer.ReadInt32("EstacionID");
                Activo = serializer.ReadBoolean("Activo");
            }
            else
            {
                Activo = serializer.ReadBoolean("Activo");
                EstacionID = serializer.ReadInt32("EstacionID");
                Nombre = serializer.ReadAnsiString("Nombre");
                Tarjeta = serializer.ReadAnsiString("Tarjeta");
                UsuarioID = serializer.ReadInt32("UsuarioID");
            }
        }

        public override void WriteComplex(RemObjects.SDK.Serializer serializer)
        {
            if (serializer.RecordStrictOrder)
            {
                serializer.WriteInt32("UsuarioID", UsuarioID);
                serializer.WriteAnsiString("Nombre", Nombre);
                serializer.WriteAnsiString("Tarjeta", Tarjeta);
                serializer.WriteInt32("EstacionID", EstacionID);
                serializer.WriteBoolean("Activo", Activo);
            }
            else
            {
                serializer.WriteBoolean("Activo", Activo);
                serializer.WriteInt32("EstacionID", EstacionID);
                serializer.WriteAnsiString("Nombre", Nombre);
                serializer.WriteAnsiString("Tarjeta", Tarjeta);
                serializer.WriteInt32("UsuarioID", UsuarioID);
            }
        }
    }

    [RemObjects.SDK.Activator()]
    [System.Reflection.ObfuscationAttribute(Exclude = true, ApplyToMembers = false)]
    public class TTarjetaLLave_Activator : object, RemObjects.SDK.ITypeActivator
    {

        public TTarjetaLLave_Activator()
        {
        }

        public object CreateInstance()
        {
            return new TTarjetaLLave();
        }
    }

    [System.Serializable()]
    [RemObjects.SDK.Remotable(ActivatorClass = typeof(TBancaria_Activator))]
    [System.Reflection.ObfuscationAttribute(Exclude = true)]
    public partial class TBancaria : RemObjects.SDK.Types.ComplexType
    {

        private string @__Mensaje;

        private string @__Tarjeta;

        private string @__NombreCliente;

        private bool @__Aprobada;

        private int @__ID;

        private string @__Autorizacion;

        private double @__Comision;

        private string @__Afiliacion;

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string Mensaje
        {
            get
            {
                return @__Mensaje;
            }
            set
            {
                @__Mensaje = value;
                this.TriggerPropertyChanged("Mensaje");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string Tarjeta
        {
            get
            {
                return @__Tarjeta;
            }
            set
            {
                @__Tarjeta = value;
                this.TriggerPropertyChanged("Tarjeta");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string NombreCliente
        {
            get
            {
                return @__NombreCliente;
            }
            set
            {
                @__NombreCliente = value;
                this.TriggerPropertyChanged("NombreCliente");
            }
        }

        public virtual bool Aprobada
        {
            get
            {
                return @__Aprobada;
            }
            set
            {
                @__Aprobada = value;
                this.TriggerPropertyChanged("Aprobada");
            }
        }

        public virtual int ID
        {
            get
            {
                return @__ID;
            }
            set
            {
                @__ID = value;
                this.TriggerPropertyChanged("ID");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string Autorizacion
        {
            get
            {
                return @__Autorizacion;
            }
            set
            {
                @__Autorizacion = value;
                this.TriggerPropertyChanged("Autorizacion");
            }
        }

        public virtual double Comision
        {
            get
            {
                return @__Comision;
            }
            set
            {
                @__Comision = value;
                this.TriggerPropertyChanged("Comision");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string Afiliacion
        {
            get
            {
                return @__Afiliacion;
            }
            set
            {
                @__Afiliacion = value;
                this.TriggerPropertyChanged("Afiliacion");
            }
        }

        public override void ReadComplex(RemObjects.SDK.Serializer serializer)
        {
            if (serializer.RecordStrictOrder)
            {
                Mensaje = serializer.ReadAnsiString("Mensaje");
                Tarjeta = serializer.ReadAnsiString("Tarjeta");
                NombreCliente = serializer.ReadAnsiString("NombreCliente");
                Aprobada = serializer.ReadBoolean("Aprobada");
                ID = serializer.ReadInt32("ID");
                Autorizacion = serializer.ReadAnsiString("Autorizacion");
                Comision = serializer.ReadDouble("Comision");
                Afiliacion = serializer.ReadAnsiString("Afiliacion");
            }
            else
            {
                Afiliacion = serializer.ReadAnsiString("Afiliacion");
                Aprobada = serializer.ReadBoolean("Aprobada");
                Autorizacion = serializer.ReadAnsiString("Autorizacion");
                Comision = serializer.ReadDouble("Comision");
                ID = serializer.ReadInt32("ID");
                Mensaje = serializer.ReadAnsiString("Mensaje");
                NombreCliente = serializer.ReadAnsiString("NombreCliente");
                Tarjeta = serializer.ReadAnsiString("Tarjeta");
            }
        }

        public override void WriteComplex(RemObjects.SDK.Serializer serializer)
        {
            if (serializer.RecordStrictOrder)
            {
                serializer.WriteAnsiString("Mensaje", Mensaje);
                serializer.WriteAnsiString("Tarjeta", Tarjeta);
                serializer.WriteAnsiString("NombreCliente", NombreCliente);
                serializer.WriteBoolean("Aprobada", Aprobada);
                serializer.WriteInt32("ID", ID);
                serializer.WriteAnsiString("Autorizacion", Autorizacion);
                serializer.WriteDouble("Comision", Comision);
                serializer.WriteAnsiString("Afiliacion", Afiliacion);
            }
            else
            {
                serializer.WriteAnsiString("Afiliacion", Afiliacion);
                serializer.WriteBoolean("Aprobada", Aprobada);
                serializer.WriteAnsiString("Autorizacion", Autorizacion);
                serializer.WriteDouble("Comision", Comision);
                serializer.WriteInt32("ID", ID);
                serializer.WriteAnsiString("Mensaje", Mensaje);
                serializer.WriteAnsiString("NombreCliente", NombreCliente);
                serializer.WriteAnsiString("Tarjeta", Tarjeta);
            }
        }
    }

    [RemObjects.SDK.Activator()]
    [System.Reflection.ObfuscationAttribute(Exclude = true, ApplyToMembers = false)]
    public class TBancaria_Activator : object, RemObjects.SDK.ITypeActivator
    {

        public TBancaria_Activator()
        {
        }

        public object CreateInstance()
        {
            return new TBancaria();
        }
    }

    [System.Serializable()]
    [RemObjects.SDK.Remotable(ActivatorClass = typeof(TGeneraCupon_Activator))]
    [System.Reflection.ObfuscationAttribute(Exclude = true)]
    public partial class TGeneraCupon : RemObjects.SDK.Types.ComplexType
    {

        private int @__Cantidad;

        private double @__Denominacion;

        private string @__Referencia;

        public virtual int Cantidad
        {
            get
            {
                return @__Cantidad;
            }
            set
            {
                @__Cantidad = value;
                this.TriggerPropertyChanged("Cantidad");
            }
        }

        public virtual double Denominacion
        {
            get
            {
                return @__Denominacion;
            }
            set
            {
                @__Denominacion = value;
                this.TriggerPropertyChanged("Denominacion");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string Referencia
        {
            get
            {
                return @__Referencia;
            }
            set
            {
                @__Referencia = value;
                this.TriggerPropertyChanged("Referencia");
            }
        }

        public override void ReadComplex(RemObjects.SDK.Serializer serializer)
        {
            if (serializer.RecordStrictOrder)
            {
                Cantidad = serializer.ReadInt32("Cantidad");
                Denominacion = serializer.ReadDouble("Denominacion");
                Referencia = serializer.ReadAnsiString("Referencia");
            }
            else
            {
                Cantidad = serializer.ReadInt32("Cantidad");
                Denominacion = serializer.ReadDouble("Denominacion");
                Referencia = serializer.ReadAnsiString("Referencia");
            }
        }

        public override void WriteComplex(RemObjects.SDK.Serializer serializer)
        {
            if (serializer.RecordStrictOrder)
            {
                serializer.WriteInt32("Cantidad", Cantidad);
                serializer.WriteDouble("Denominacion", Denominacion);
                serializer.WriteAnsiString("Referencia", Referencia);
            }
            else
            {
                serializer.WriteInt32("Cantidad", Cantidad);
                serializer.WriteDouble("Denominacion", Denominacion);
                serializer.WriteAnsiString("Referencia", Referencia);
            }
        }
    }

    [RemObjects.SDK.Activator()]
    [System.Reflection.ObfuscationAttribute(Exclude = true, ApplyToMembers = false)]
    public class TGeneraCupon_Activator : object, RemObjects.SDK.ITypeActivator
    {

        public TGeneraCupon_Activator()
        {
        }

        public object CreateInstance()
        {
            return new TGeneraCupon();
        }
    }

    [System.Serializable()]
    [RemObjects.SDK.Remotable(ActivatorClass = typeof(TDatosTicketConsumo_Activator))]
    [System.Reflection.ObfuscationAttribute(Exclude = true)]
    public partial class TDatosTicketConsumo : RemObjects.SDK.Types.ComplexType
    {

        private int @__Secuencia;

        private int @__BombaID;

        private System.DateTime @__Fecha;

        private string @__NombreProducto;

        private string @__Cliente;

        private string @__Identificacion;

        private string @__Referencia;

        private int @__Odometro;

        private double @__Volumen;

        private double @__Precio;

        private double @__Importe;

        private double @__IVA;

        public virtual int Secuencia
        {
            get
            {
                return @__Secuencia;
            }
            set
            {
                @__Secuencia = value;
                this.TriggerPropertyChanged("Secuencia");
            }
        }

        public virtual int BombaID
        {
            get
            {
                return @__BombaID;
            }
            set
            {
                @__BombaID = value;
                this.TriggerPropertyChanged("BombaID");
            }
        }

        public virtual System.DateTime Fecha
        {
            get
            {
                return @__Fecha;
            }
            set
            {
                @__Fecha = value;
                this.TriggerPropertyChanged("Fecha");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string NombreProducto
        {
            get
            {
                return @__NombreProducto;
            }
            set
            {
                @__NombreProducto = value;
                this.TriggerPropertyChanged("NombreProducto");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string Cliente
        {
            get
            {
                return @__Cliente;
            }
            set
            {
                @__Cliente = value;
                this.TriggerPropertyChanged("Cliente");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string Identificacion
        {
            get
            {
                return @__Identificacion;
            }
            set
            {
                @__Identificacion = value;
                this.TriggerPropertyChanged("Identificacion");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string Referencia
        {
            get
            {
                return @__Referencia;
            }
            set
            {
                @__Referencia = value;
                this.TriggerPropertyChanged("Referencia");
            }
        }

        public virtual int Odometro
        {
            get
            {
                return @__Odometro;
            }
            set
            {
                @__Odometro = value;
                this.TriggerPropertyChanged("Odometro");
            }
        }

        public virtual double Volumen
        {
            get
            {
                return @__Volumen;
            }
            set
            {
                @__Volumen = value;
                this.TriggerPropertyChanged("Volumen");
            }
        }

        public virtual double Precio
        {
            get
            {
                return @__Precio;
            }
            set
            {
                @__Precio = value;
                this.TriggerPropertyChanged("Precio");
            }
        }

        public virtual double Importe
        {
            get
            {
                return @__Importe;
            }
            set
            {
                @__Importe = value;
                this.TriggerPropertyChanged("Importe");
            }
        }

        public virtual double IVA
        {
            get
            {
                return @__IVA;
            }
            set
            {
                @__IVA = value;
                this.TriggerPropertyChanged("IVA");
            }
        }

        public override void ReadComplex(RemObjects.SDK.Serializer serializer)
        {
            if (serializer.RecordStrictOrder)
            {
                Secuencia = serializer.ReadInt32("Secuencia");
                BombaID = serializer.ReadInt32("BombaID");
                Fecha = serializer.ReadDateTime("Fecha");
                NombreProducto = serializer.ReadAnsiString("NombreProducto");
                Cliente = serializer.ReadAnsiString("Cliente");
                Identificacion = serializer.ReadAnsiString("Identificacion");
                Referencia = serializer.ReadAnsiString("Referencia");
                Odometro = serializer.ReadInt32("Odometro");
                Volumen = serializer.ReadDouble("Volumen");
                Precio = serializer.ReadDouble("Precio");
                Importe = serializer.ReadDouble("Importe");
                IVA = serializer.ReadDouble("IVA");
            }
            else
            {
                BombaID = serializer.ReadInt32("BombaID");
                Cliente = serializer.ReadAnsiString("Cliente");
                Fecha = serializer.ReadDateTime("Fecha");
                Identificacion = serializer.ReadAnsiString("Identificacion");
                Importe = serializer.ReadDouble("Importe");
                IVA = serializer.ReadDouble("IVA");
                NombreProducto = serializer.ReadAnsiString("NombreProducto");
                Odometro = serializer.ReadInt32("Odometro");
                Precio = serializer.ReadDouble("Precio");
                Referencia = serializer.ReadAnsiString("Referencia");
                Secuencia = serializer.ReadInt32("Secuencia");
                Volumen = serializer.ReadDouble("Volumen");
            }
        }

        public override void WriteComplex(RemObjects.SDK.Serializer serializer)
        {
            if (serializer.RecordStrictOrder)
            {
                serializer.WriteInt32("Secuencia", Secuencia);
                serializer.WriteInt32("BombaID", BombaID);
                serializer.WriteDateTime("Fecha", Fecha);
                serializer.WriteAnsiString("NombreProducto", NombreProducto);
                serializer.WriteAnsiString("Cliente", Cliente);
                serializer.WriteAnsiString("Identificacion", Identificacion);
                serializer.WriteAnsiString("Referencia", Referencia);
                serializer.WriteInt32("Odometro", Odometro);
                serializer.WriteDouble("Volumen", Volumen);
                serializer.WriteDouble("Precio", Precio);
                serializer.WriteDouble("Importe", Importe);
                serializer.WriteDouble("IVA", IVA);
            }
            else
            {
                serializer.WriteInt32("BombaID", BombaID);
                serializer.WriteAnsiString("Cliente", Cliente);
                serializer.WriteDateTime("Fecha", Fecha);
                serializer.WriteAnsiString("Identificacion", Identificacion);
                serializer.WriteDouble("Importe", Importe);
                serializer.WriteDouble("IVA", IVA);
                serializer.WriteAnsiString("NombreProducto", NombreProducto);
                serializer.WriteInt32("Odometro", Odometro);
                serializer.WriteDouble("Precio", Precio);
                serializer.WriteAnsiString("Referencia", Referencia);
                serializer.WriteInt32("Secuencia", Secuencia);
                serializer.WriteDouble("Volumen", Volumen);
            }
        }
    }

    [RemObjects.SDK.Activator()]
    [System.Reflection.ObfuscationAttribute(Exclude = true, ApplyToMembers = false)]
    public class TDatosTicketConsumo_Activator : object, RemObjects.SDK.ITypeActivator
    {

        public TDatosTicketConsumo_Activator()
        {
        }

        public object CreateInstance()
        {
            return new TDatosTicketConsumo();
        }
    }

    [System.Serializable()]
    [RemObjects.SDK.Remotable(ActivatorClass = typeof(TProductoF_Activator))]
    [System.Reflection.ObfuscationAttribute(Exclude = true)]
    public partial class TProductoF : RemObjects.SDK.Types.ComplexType
    {

        private int @__ID;

        private string @__Nombre;

        private double @__Precio;

        private double @__Cantidad;

        public virtual int ID
        {
            get
            {
                return @__ID;
            }
            set
            {
                @__ID = value;
                this.TriggerPropertyChanged("ID");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string Nombre
        {
            get
            {
                return @__Nombre;
            }
            set
            {
                @__Nombre = value;
                this.TriggerPropertyChanged("Nombre");
            }
        }

        public virtual double Precio
        {
            get
            {
                return @__Precio;
            }
            set
            {
                @__Precio = value;
                this.TriggerPropertyChanged("Precio");
            }
        }

        public virtual double Cantidad
        {
            get
            {
                return @__Cantidad;
            }
            set
            {
                @__Cantidad = value;
                this.TriggerPropertyChanged("Cantidad");
            }
        }

        public override void ReadComplex(RemObjects.SDK.Serializer serializer)
        {
            if (serializer.RecordStrictOrder)
            {
                ID = serializer.ReadInt32("ID");
                Nombre = serializer.ReadAnsiString("Nombre");
                Precio = serializer.ReadDouble("Precio");
                Cantidad = serializer.ReadDouble("Cantidad");
            }
            else
            {
                Cantidad = serializer.ReadDouble("Cantidad");
                ID = serializer.ReadInt32("ID");
                Nombre = serializer.ReadAnsiString("Nombre");
                Precio = serializer.ReadDouble("Precio");
            }
        }

        public override void WriteComplex(RemObjects.SDK.Serializer serializer)
        {
            if (serializer.RecordStrictOrder)
            {
                serializer.WriteInt32("ID", ID);
                serializer.WriteAnsiString("Nombre", Nombre);
                serializer.WriteDouble("Precio", Precio);
                serializer.WriteDouble("Cantidad", Cantidad);
            }
            else
            {
                serializer.WriteDouble("Cantidad", Cantidad);
                serializer.WriteInt32("ID", ID);
                serializer.WriteAnsiString("Nombre", Nombre);
                serializer.WriteDouble("Precio", Precio);
            }
        }
    }

    [RemObjects.SDK.Activator()]
    [System.Reflection.ObfuscationAttribute(Exclude = true, ApplyToMembers = false)]
    public class TProductoF_Activator : object, RemObjects.SDK.ITypeActivator
    {

        public TProductoF_Activator()
        {
        }

        public object CreateInstance()
        {
            return new TProductoF();
        }
    }

    [System.Serializable()]
    [RemObjects.SDK.Remotable(ActivatorClass = typeof(TDatosClienteOtros_Activator))]
    [System.Reflection.ObfuscationAttribute(Exclude = true)]
    public partial class TDatosClienteOtros : RemObjects.SDK.Types.ComplexType
    {

        private int @__ClienteID;

        private int @__VehiculoID;

        private string @__Nombre;

        private string @__Identificacion;

        private double @__IVA;

        private int @__GasolineroID;

        public virtual int ClienteID
        {
            get
            {
                return @__ClienteID;
            }
            set
            {
                @__ClienteID = value;
                this.TriggerPropertyChanged("ClienteID");
            }
        }

        public virtual int VehiculoID
        {
            get
            {
                return @__VehiculoID;
            }
            set
            {
                @__VehiculoID = value;
                this.TriggerPropertyChanged("VehiculoID");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string Nombre
        {
            get
            {
                return @__Nombre;
            }
            set
            {
                @__Nombre = value;
                this.TriggerPropertyChanged("Nombre");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string Identificacion
        {
            get
            {
                return @__Identificacion;
            }
            set
            {
                @__Identificacion = value;
                this.TriggerPropertyChanged("Identificacion");
            }
        }

        public virtual double IVA
        {
            get
            {
                return @__IVA;
            }
            set
            {
                @__IVA = value;
                this.TriggerPropertyChanged("IVA");
            }
        }

        public virtual int GasolineroID
        {
            get
            {
                return @__GasolineroID;
            }
            set
            {
                @__GasolineroID = value;
                this.TriggerPropertyChanged("GasolineroID");
            }
        }

        public override void ReadComplex(RemObjects.SDK.Serializer serializer)
        {
            if (serializer.RecordStrictOrder)
            {
                ClienteID = serializer.ReadInt32("ClienteID");
                VehiculoID = serializer.ReadInt32("VehiculoID");
                Nombre = serializer.ReadAnsiString("Nombre");
                Identificacion = serializer.ReadAnsiString("Identificacion");
                IVA = serializer.ReadDouble("IVA");
                GasolineroID = serializer.ReadInt32("GasolineroID");
            }
            else
            {
                ClienteID = serializer.ReadInt32("ClienteID");
                GasolineroID = serializer.ReadInt32("GasolineroID");
                Identificacion = serializer.ReadAnsiString("Identificacion");
                IVA = serializer.ReadDouble("IVA");
                Nombre = serializer.ReadAnsiString("Nombre");
                VehiculoID = serializer.ReadInt32("VehiculoID");
            }
        }

        public override void WriteComplex(RemObjects.SDK.Serializer serializer)
        {
            if (serializer.RecordStrictOrder)
            {
                serializer.WriteInt32("ClienteID", ClienteID);
                serializer.WriteInt32("VehiculoID", VehiculoID);
                serializer.WriteAnsiString("Nombre", Nombre);
                serializer.WriteAnsiString("Identificacion", Identificacion);
                serializer.WriteDouble("IVA", IVA);
                serializer.WriteInt32("GasolineroID", GasolineroID);
            }
            else
            {
                serializer.WriteInt32("ClienteID", ClienteID);
                serializer.WriteInt32("GasolineroID", GasolineroID);
                serializer.WriteAnsiString("Identificacion", Identificacion);
                serializer.WriteDouble("IVA", IVA);
                serializer.WriteAnsiString("Nombre", Nombre);
                serializer.WriteInt32("VehiculoID", VehiculoID);
            }
        }
    }

    [RemObjects.SDK.Activator()]
    [System.Reflection.ObfuscationAttribute(Exclude = true, ApplyToMembers = false)]
    public class TDatosClienteOtros_Activator : object, RemObjects.SDK.ITypeActivator
    {

        public TDatosClienteOtros_Activator()
        {
        }

        public object CreateInstance()
        {
            return new TDatosClienteOtros();
        }
    }

    [System.Serializable()]
    [RemObjects.SDK.Remotable(ActivatorClass = typeof(TTiempoAire_Activator))]
    [System.Reflection.ObfuscationAttribute(Exclude = true)]
    public partial class TTiempoAire : RemObjects.SDK.Types.ComplexType
    {

        private int @__Proveedor;

        private string @__Telefono;

        private double @__Importe;

        private bool @__Accepted;

        private string @__idTrans;

        private string @__TransID;

        private string @__Notes;

        private string @__Instructions;

        public virtual int Proveedor
        {
            get
            {
                return @__Proveedor;
            }
            set
            {
                @__Proveedor = value;
                this.TriggerPropertyChanged("Proveedor");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string Telefono
        {
            get
            {
                return @__Telefono;
            }
            set
            {
                @__Telefono = value;
                this.TriggerPropertyChanged("Telefono");
            }
        }

        public virtual double Importe
        {
            get
            {
                return @__Importe;
            }
            set
            {
                @__Importe = value;
                this.TriggerPropertyChanged("Importe");
            }
        }

        public virtual bool Accepted
        {
            get
            {
                return @__Accepted;
            }
            set
            {
                @__Accepted = value;
                this.TriggerPropertyChanged("Accepted");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string idTrans
        {
            get
            {
                return @__idTrans;
            }
            set
            {
                @__idTrans = value;
                this.TriggerPropertyChanged("idTrans");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string TransID
        {
            get
            {
                return @__TransID;
            }
            set
            {
                @__TransID = value;
                this.TriggerPropertyChanged("TransID");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string Notes
        {
            get
            {
                return @__Notes;
            }
            set
            {
                @__Notes = value;
                this.TriggerPropertyChanged("Notes");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string Instructions
        {
            get
            {
                return @__Instructions;
            }
            set
            {
                @__Instructions = value;
                this.TriggerPropertyChanged("Instructions");
            }
        }

        public override void ReadComplex(RemObjects.SDK.Serializer serializer)
        {
            if (serializer.RecordStrictOrder)
            {
                Proveedor = serializer.ReadInt32("Proveedor");
                Telefono = serializer.ReadAnsiString("Telefono");
                Importe = serializer.ReadDouble("Importe");
                Accepted = serializer.ReadBoolean("Accepted");
                idTrans = serializer.ReadAnsiString("idTrans");
                TransID = serializer.ReadAnsiString("TransID");
                Notes = serializer.ReadAnsiString("Notes");
                Instructions = serializer.ReadAnsiString("Instructions");
            }
            else
            {
                Accepted = serializer.ReadBoolean("Accepted");
                idTrans = serializer.ReadAnsiString("idTrans");
                Importe = serializer.ReadDouble("Importe");
                Instructions = serializer.ReadAnsiString("Instructions");
                Notes = serializer.ReadAnsiString("Notes");
                Proveedor = serializer.ReadInt32("Proveedor");
                Telefono = serializer.ReadAnsiString("Telefono");
                TransID = serializer.ReadAnsiString("TransID");
            }
        }

        public override void WriteComplex(RemObjects.SDK.Serializer serializer)
        {
            if (serializer.RecordStrictOrder)
            {
                serializer.WriteInt32("Proveedor", Proveedor);
                serializer.WriteAnsiString("Telefono", Telefono);
                serializer.WriteDouble("Importe", Importe);
                serializer.WriteBoolean("Accepted", Accepted);
                serializer.WriteAnsiString("idTrans", idTrans);
                serializer.WriteAnsiString("TransID", TransID);
                serializer.WriteAnsiString("Notes", Notes);
                serializer.WriteAnsiString("Instructions", Instructions);
            }
            else
            {
                serializer.WriteBoolean("Accepted", Accepted);
                serializer.WriteAnsiString("idTrans", idTrans);
                serializer.WriteDouble("Importe", Importe);
                serializer.WriteAnsiString("Instructions", Instructions);
                serializer.WriteAnsiString("Notes", Notes);
                serializer.WriteInt32("Proveedor", Proveedor);
                serializer.WriteAnsiString("Telefono", Telefono);
                serializer.WriteAnsiString("TransID", TransID);
            }
        }
    }

    [RemObjects.SDK.Activator()]
    [System.Reflection.ObfuscationAttribute(Exclude = true, ApplyToMembers = false)]
    public class TTiempoAire_Activator : object, RemObjects.SDK.ITypeActivator
    {

        public TTiempoAire_Activator()
        {
        }

        public object CreateInstance()
        {
            return new TTiempoAire();
        }
    }

    [System.Serializable()]
    [RemObjects.SDK.Remotable(ActivatorClass = typeof(TDatosVerifica_Activator))]
    [System.Reflection.ObfuscationAttribute(Exclude = true)]
    public partial class TDatosVerifica : RemObjects.SDK.Types.ComplexType
    {

        private bool @__AfectarHistorico;

        private int @__KMS;

        public virtual bool AfectarHistorico
        {
            get
            {
                return @__AfectarHistorico;
            }
            set
            {
                @__AfectarHistorico = value;
                this.TriggerPropertyChanged("AfectarHistorico");
            }
        }

        public virtual int KMS
        {
            get
            {
                return @__KMS;
            }
            set
            {
                @__KMS = value;
                this.TriggerPropertyChanged("KMS");
            }
        }

        public override void ReadComplex(RemObjects.SDK.Serializer serializer)
        {
            if (serializer.RecordStrictOrder)
            {
                AfectarHistorico = serializer.ReadBoolean("AfectarHistorico");
                KMS = serializer.ReadInt32("KMS");
            }
            else
            {
                AfectarHistorico = serializer.ReadBoolean("AfectarHistorico");
                KMS = serializer.ReadInt32("KMS");
            }
        }

        public override void WriteComplex(RemObjects.SDK.Serializer serializer)
        {
            if (serializer.RecordStrictOrder)
            {
                serializer.WriteBoolean("AfectarHistorico", AfectarHistorico);
                serializer.WriteInt32("KMS", KMS);
            }
            else
            {
                serializer.WriteBoolean("AfectarHistorico", AfectarHistorico);
                serializer.WriteInt32("KMS", KMS);
            }
        }
    }

    [RemObjects.SDK.Activator()]
    [System.Reflection.ObfuscationAttribute(Exclude = true, ApplyToMembers = false)]
    public class TDatosVerifica_Activator : object, RemObjects.SDK.ITypeActivator
    {

        public TDatosVerifica_Activator()
        {
        }

        public object CreateInstance()
        {
            return new TDatosVerifica();
        }
    }

    [System.Serializable()]
    [RemObjects.SDK.Remotable(ActivatorClass = typeof(TDatosVerifoneF_Activator))]
    [System.Reflection.ObfuscationAttribute(Exclude = true)]
    public partial class TDatosVerifoneF : RemObjects.SDK.Types.ComplexType
    {

        private int @__ClienteID;

        private int @__VehiculoID;

        private string @__Nombre;

        private string @__RazonSocial;

        private string @__Domicilio;

        private string @__Colonia;

        private string @__Ciudad;

        private string @__RFC;

        private int @__NIP;

        private string @__Identificacion;

        private string @__Usuario;

        private double @__AcumuladoMNMes;

        private int @__KMS;

        private string @__Referencia;

        private bool @__Autorizada;

        private string @__VolumenImporte;

        private double @__AutorizacionMN;

        private double @__AutorizacionLT;

        private int @__StatusID;

        private string @__Mensaje;

        public virtual int ClienteID
        {
            get
            {
                return @__ClienteID;
            }
            set
            {
                @__ClienteID = value;
                this.TriggerPropertyChanged("ClienteID");
            }
        }

        public virtual int VehiculoID
        {
            get
            {
                return @__VehiculoID;
            }
            set
            {
                @__VehiculoID = value;
                this.TriggerPropertyChanged("VehiculoID");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string Nombre
        {
            get
            {
                return @__Nombre;
            }
            set
            {
                @__Nombre = value;
                this.TriggerPropertyChanged("Nombre");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string RazonSocial
        {
            get
            {
                return @__RazonSocial;
            }
            set
            {
                @__RazonSocial = value;
                this.TriggerPropertyChanged("RazonSocial");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string Domicilio
        {
            get
            {
                return @__Domicilio;
            }
            set
            {
                @__Domicilio = value;
                this.TriggerPropertyChanged("Domicilio");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string Colonia
        {
            get
            {
                return @__Colonia;
            }
            set
            {
                @__Colonia = value;
                this.TriggerPropertyChanged("Colonia");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string Ciudad
        {
            get
            {
                return @__Ciudad;
            }
            set
            {
                @__Ciudad = value;
                this.TriggerPropertyChanged("Ciudad");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string RFC
        {
            get
            {
                return @__RFC;
            }
            set
            {
                @__RFC = value;
                this.TriggerPropertyChanged("RFC");
            }
        }

        public virtual int NIP
        {
            get
            {
                return @__NIP;
            }
            set
            {
                @__NIP = value;
                this.TriggerPropertyChanged("NIP");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string Identificacion
        {
            get
            {
                return @__Identificacion;
            }
            set
            {
                @__Identificacion = value;
                this.TriggerPropertyChanged("Identificacion");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string Usuario
        {
            get
            {
                return @__Usuario;
            }
            set
            {
                @__Usuario = value;
                this.TriggerPropertyChanged("Usuario");
            }
        }

        public virtual double AcumuladoMNMes
        {
            get
            {
                return @__AcumuladoMNMes;
            }
            set
            {
                @__AcumuladoMNMes = value;
                this.TriggerPropertyChanged("AcumuladoMNMes");
            }
        }

        public virtual int KMS
        {
            get
            {
                return @__KMS;
            }
            set
            {
                @__KMS = value;
                this.TriggerPropertyChanged("KMS");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string Referencia
        {
            get
            {
                return @__Referencia;
            }
            set
            {
                @__Referencia = value;
                this.TriggerPropertyChanged("Referencia");
            }
        }

        public virtual bool Autorizada
        {
            get
            {
                return @__Autorizada;
            }
            set
            {
                @__Autorizada = value;
                this.TriggerPropertyChanged("Autorizada");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string VolumenImporte
        {
            get
            {
                return @__VolumenImporte;
            }
            set
            {
                @__VolumenImporte = value;
                this.TriggerPropertyChanged("VolumenImporte");
            }
        }

        public virtual double AutorizacionMN
        {
            get
            {
                return @__AutorizacionMN;
            }
            set
            {
                @__AutorizacionMN = value;
                this.TriggerPropertyChanged("AutorizacionMN");
            }
        }

        public virtual double AutorizacionLT
        {
            get
            {
                return @__AutorizacionLT;
            }
            set
            {
                @__AutorizacionLT = value;
                this.TriggerPropertyChanged("AutorizacionLT");
            }
        }

        public virtual int StatusID
        {
            get
            {
                return @__StatusID;
            }
            set
            {
                @__StatusID = value;
                this.TriggerPropertyChanged("StatusID");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string Mensaje
        {
            get
            {
                return @__Mensaje;
            }
            set
            {
                @__Mensaje = value;
                this.TriggerPropertyChanged("Mensaje");
            }
        }

        public override void ReadComplex(RemObjects.SDK.Serializer serializer)
        {
            if (serializer.RecordStrictOrder)
            {
                ClienteID = serializer.ReadInt32("ClienteID");
                VehiculoID = serializer.ReadInt32("VehiculoID");
                Nombre = serializer.ReadAnsiString("Nombre");
                RazonSocial = serializer.ReadAnsiString("RazonSocial");
                Domicilio = serializer.ReadAnsiString("Domicilio");
                Colonia = serializer.ReadAnsiString("Colonia");
                Ciudad = serializer.ReadAnsiString("Ciudad");
                RFC = serializer.ReadAnsiString("RFC");
                NIP = serializer.ReadInt32("NIP");
                Identificacion = serializer.ReadAnsiString("Identificacion");
                Usuario = serializer.ReadAnsiString("Usuario");
                AcumuladoMNMes = serializer.ReadDouble("AcumuladoMNMes");
                KMS = serializer.ReadInt32("KMS");
                Referencia = serializer.ReadAnsiString("Referencia");
                Autorizada = serializer.ReadBoolean("Autorizada");
                VolumenImporte = serializer.ReadAnsiString("VolumenImporte");
                AutorizacionMN = serializer.ReadDouble("AutorizacionMN");
                AutorizacionLT = serializer.ReadDouble("AutorizacionLT");
                StatusID = serializer.ReadInt32("StatusID");
                Mensaje = serializer.ReadAnsiString("Mensaje");
            }
            else
            {
                AcumuladoMNMes = serializer.ReadDouble("AcumuladoMNMes");
                AutorizacionLT = serializer.ReadDouble("AutorizacionLT");
                AutorizacionMN = serializer.ReadDouble("AutorizacionMN");
                Autorizada = serializer.ReadBoolean("Autorizada");
                Ciudad = serializer.ReadAnsiString("Ciudad");
                ClienteID = serializer.ReadInt32("ClienteID");
                Colonia = serializer.ReadAnsiString("Colonia");
                Domicilio = serializer.ReadAnsiString("Domicilio");
                Identificacion = serializer.ReadAnsiString("Identificacion");
                KMS = serializer.ReadInt32("KMS");
                Mensaje = serializer.ReadAnsiString("Mensaje");
                NIP = serializer.ReadInt32("NIP");
                Nombre = serializer.ReadAnsiString("Nombre");
                RazonSocial = serializer.ReadAnsiString("RazonSocial");
                Referencia = serializer.ReadAnsiString("Referencia");
                RFC = serializer.ReadAnsiString("RFC");
                StatusID = serializer.ReadInt32("StatusID");
                Usuario = serializer.ReadAnsiString("Usuario");
                VehiculoID = serializer.ReadInt32("VehiculoID");
                VolumenImporte = serializer.ReadAnsiString("VolumenImporte");
            }
        }

        public override void WriteComplex(RemObjects.SDK.Serializer serializer)
        {
            if (serializer.RecordStrictOrder)
            {
                serializer.WriteInt32("ClienteID", ClienteID);
                serializer.WriteInt32("VehiculoID", VehiculoID);
                serializer.WriteAnsiString("Nombre", Nombre);
                serializer.WriteAnsiString("RazonSocial", RazonSocial);
                serializer.WriteAnsiString("Domicilio", Domicilio);
                serializer.WriteAnsiString("Colonia", Colonia);
                serializer.WriteAnsiString("Ciudad", Ciudad);
                serializer.WriteAnsiString("RFC", RFC);
                serializer.WriteInt32("NIP", NIP);
                serializer.WriteAnsiString("Identificacion", Identificacion);
                serializer.WriteAnsiString("Usuario", Usuario);
                serializer.WriteDouble("AcumuladoMNMes", AcumuladoMNMes);
                serializer.WriteInt32("KMS", KMS);
                serializer.WriteAnsiString("Referencia", Referencia);
                serializer.WriteBoolean("Autorizada", Autorizada);
                serializer.WriteAnsiString("VolumenImporte", VolumenImporte);
                serializer.WriteDouble("AutorizacionMN", AutorizacionMN);
                serializer.WriteDouble("AutorizacionLT", AutorizacionLT);
                serializer.WriteInt32("StatusID", StatusID);
                serializer.WriteAnsiString("Mensaje", Mensaje);
            }
            else
            {
                serializer.WriteDouble("AcumuladoMNMes", AcumuladoMNMes);
                serializer.WriteDouble("AutorizacionLT", AutorizacionLT);
                serializer.WriteDouble("AutorizacionMN", AutorizacionMN);
                serializer.WriteBoolean("Autorizada", Autorizada);
                serializer.WriteAnsiString("Ciudad", Ciudad);
                serializer.WriteInt32("ClienteID", ClienteID);
                serializer.WriteAnsiString("Colonia", Colonia);
                serializer.WriteAnsiString("Domicilio", Domicilio);
                serializer.WriteAnsiString("Identificacion", Identificacion);
                serializer.WriteInt32("KMS", KMS);
                serializer.WriteAnsiString("Mensaje", Mensaje);
                serializer.WriteInt32("NIP", NIP);
                serializer.WriteAnsiString("Nombre", Nombre);
                serializer.WriteAnsiString("RazonSocial", RazonSocial);
                serializer.WriteAnsiString("Referencia", Referencia);
                serializer.WriteAnsiString("RFC", RFC);
                serializer.WriteInt32("StatusID", StatusID);
                serializer.WriteAnsiString("Usuario", Usuario);
                serializer.WriteInt32("VehiculoID", VehiculoID);
                serializer.WriteAnsiString("VolumenImporte", VolumenImporte);
            }
        }
    }

    [RemObjects.SDK.Activator()]
    [System.Reflection.ObfuscationAttribute(Exclude = true, ApplyToMembers = false)]
    public class TDatosVerifoneF_Activator : object, RemObjects.SDK.ITypeActivator
    {

        public TDatosVerifoneF_Activator()
        {
        }

        public object CreateInstance()
        {
            return new TDatosVerifoneF();
        }
    }

    [System.Serializable()]
    [RemObjects.SDK.Remotable(ActivatorClass = typeof(TConfirmaEnvioF_Activator))]
    [System.Reflection.ObfuscationAttribute(Exclude = true)]
    public partial class TConfirmaEnvioF : RemObjects.SDK.Types.ComplexType
    {

        private int @__Tipo;

        private TConsumo @__Consumo;

        private string @__Host;

        private System.DateTime @__Fecha;

        public virtual int Tipo
        {
            get
            {
                return @__Tipo;
            }
            set
            {
                @__Tipo = value;
                this.TriggerPropertyChanged("Tipo");
            }
        }

        public virtual TConsumo Consumo
        {
            get
            {
                return @__Consumo;
            }
            set
            {
                @__Consumo = value;
                this.TriggerPropertyChanged("Consumo");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string Host
        {
            get
            {
                return @__Host;
            }
            set
            {
                @__Host = value;
                this.TriggerPropertyChanged("Host");
            }
        }

        public virtual System.DateTime Fecha
        {
            get
            {
                return @__Fecha;
            }
            set
            {
                @__Fecha = value;
                this.TriggerPropertyChanged("Fecha");
            }
        }

        public override void ReadComplex(RemObjects.SDK.Serializer serializer)
        {
            if (serializer.RecordStrictOrder)
            {
                Tipo = serializer.ReadInt32("Tipo");
                Consumo = ((TConsumo)(serializer.Read("Consumo", typeof(TConsumo), RemObjects.SDK.StreamingFormat.Default)));
                Host = serializer.ReadAnsiString("Host");
                Fecha = serializer.ReadDateTime("Fecha");
            }
            else
            {
                Consumo = ((TConsumo)(serializer.Read("Consumo", typeof(TConsumo), RemObjects.SDK.StreamingFormat.Default)));
                Fecha = serializer.ReadDateTime("Fecha");
                Host = serializer.ReadAnsiString("Host");
                Tipo = serializer.ReadInt32("Tipo");
            }
        }

        public override void WriteComplex(RemObjects.SDK.Serializer serializer)
        {
            if (serializer.RecordStrictOrder)
            {
                serializer.WriteInt32("Tipo", Tipo);
                serializer.Write("Consumo", Consumo, typeof(TConsumo), RemObjects.SDK.StreamingFormat.Default);
                serializer.WriteAnsiString("Host", Host);
                serializer.WriteDateTime("Fecha", Fecha);
            }
            else
            {
                serializer.Write("Consumo", Consumo, typeof(TConsumo), RemObjects.SDK.StreamingFormat.Default);
                serializer.WriteDateTime("Fecha", Fecha);
                serializer.WriteAnsiString("Host", Host);
                serializer.WriteInt32("Tipo", Tipo);
            }
        }
    }

    [RemObjects.SDK.Activator()]
    [System.Reflection.ObfuscationAttribute(Exclude = true, ApplyToMembers = false)]
    public class TConfirmaEnvioF_Activator : object, RemObjects.SDK.ITypeActivator
    {

        public TConfirmaEnvioF_Activator()
        {
        }

        public object CreateInstance()
        {
            return new TConfirmaEnvioF();
        }
    }

    [System.Serializable()]
    [RemObjects.SDK.Remotable(ActivatorClass = typeof(TDatosAdicionales_Activator))]
    [System.Reflection.ObfuscationAttribute(Exclude = true)]
    public partial class TDatosAdicionales : RemObjects.SDK.Types.ComplexType
    {

        private int @__ClienteID;

        private string @__Serie;

        private int @__SecuenciaVenta;

        private int @__EstacionID;

        private double @__Importe;

        public virtual int ClienteID
        {
            get
            {
                return @__ClienteID;
            }
            set
            {
                @__ClienteID = value;
                this.TriggerPropertyChanged("ClienteID");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string Serie
        {
            get
            {
                return @__Serie;
            }
            set
            {
                @__Serie = value;
                this.TriggerPropertyChanged("Serie");
            }
        }

        public virtual int SecuenciaVenta
        {
            get
            {
                return @__SecuenciaVenta;
            }
            set
            {
                @__SecuenciaVenta = value;
                this.TriggerPropertyChanged("SecuenciaVenta");
            }
        }

        public virtual int EstacionID
        {
            get
            {
                return @__EstacionID;
            }
            set
            {
                @__EstacionID = value;
                this.TriggerPropertyChanged("EstacionID");
            }
        }

        public virtual double Importe
        {
            get
            {
                return @__Importe;
            }
            set
            {
                @__Importe = value;
                this.TriggerPropertyChanged("Importe");
            }
        }

        public override void ReadComplex(RemObjects.SDK.Serializer serializer)
        {
            if (serializer.RecordStrictOrder)
            {
                ClienteID = serializer.ReadInt32("ClienteID");
                Serie = serializer.ReadAnsiString("Serie");
                SecuenciaVenta = serializer.ReadInt32("SecuenciaVenta");
                EstacionID = serializer.ReadInt32("EstacionID");
                Importe = serializer.ReadDouble("Importe");
            }
            else
            {
                ClienteID = serializer.ReadInt32("ClienteID");
                EstacionID = serializer.ReadInt32("EstacionID");
                Importe = serializer.ReadDouble("Importe");
                SecuenciaVenta = serializer.ReadInt32("SecuenciaVenta");
                Serie = serializer.ReadAnsiString("Serie");
            }
        }

        public override void WriteComplex(RemObjects.SDK.Serializer serializer)
        {
            if (serializer.RecordStrictOrder)
            {
                serializer.WriteInt32("ClienteID", ClienteID);
                serializer.WriteAnsiString("Serie", Serie);
                serializer.WriteInt32("SecuenciaVenta", SecuenciaVenta);
                serializer.WriteInt32("EstacionID", EstacionID);
                serializer.WriteDouble("Importe", Importe);
            }
            else
            {
                serializer.WriteInt32("ClienteID", ClienteID);
                serializer.WriteInt32("EstacionID", EstacionID);
                serializer.WriteDouble("Importe", Importe);
                serializer.WriteInt32("SecuenciaVenta", SecuenciaVenta);
                serializer.WriteAnsiString("Serie", Serie);
            }
        }
    }

    [RemObjects.SDK.Activator()]
    [System.Reflection.ObfuscationAttribute(Exclude = true, ApplyToMembers = false)]
    public class TDatosAdicionales_Activator : object, RemObjects.SDK.ITypeActivator
    {

        public TDatosAdicionales_Activator()
        {
        }

        public object CreateInstance()
        {
            return new TDatosAdicionales();
        }
    }

    [System.Serializable()]
    [RemObjects.SDK.Remotable(ActivatorClass = typeof(TDatosServicio_Activator))]
    [System.Reflection.ObfuscationAttribute(Exclude = true)]
    public partial class TDatosServicio : RemObjects.SDK.Types.ComplexType
    {

        private string @__Referencia;

        private string @__Nombre;

        private string @__Cuenta;

        private System.DateTime @__Fecha;

        private double @__Importe;

        private double @__ImportePagado;

        private string @__Aux1;

        private string @__Aux2;

        private string @__Aux3;

        private int @__EstacionID;

        private int @__BombaID;

        private bool @__Valido;

        private bool @__PuedeAbonar;

        private string @__Empresa;

        private string @__TxID;

        private string @__LLave;

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string Referencia
        {
            get
            {
                return @__Referencia;
            }
            set
            {
                @__Referencia = value;
                this.TriggerPropertyChanged("Referencia");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string Nombre
        {
            get
            {
                return @__Nombre;
            }
            set
            {
                @__Nombre = value;
                this.TriggerPropertyChanged("Nombre");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string Cuenta
        {
            get
            {
                return @__Cuenta;
            }
            set
            {
                @__Cuenta = value;
                this.TriggerPropertyChanged("Cuenta");
            }
        }

        public virtual System.DateTime Fecha
        {
            get
            {
                return @__Fecha;
            }
            set
            {
                @__Fecha = value;
                this.TriggerPropertyChanged("Fecha");
            }
        }

        public virtual double Importe
        {
            get
            {
                return @__Importe;
            }
            set
            {
                @__Importe = value;
                this.TriggerPropertyChanged("Importe");
            }
        }

        public virtual double ImportePagado
        {
            get
            {
                return @__ImportePagado;
            }
            set
            {
                @__ImportePagado = value;
                this.TriggerPropertyChanged("ImportePagado");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string Aux1
        {
            get
            {
                return @__Aux1;
            }
            set
            {
                @__Aux1 = value;
                this.TriggerPropertyChanged("Aux1");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string Aux2
        {
            get
            {
                return @__Aux2;
            }
            set
            {
                @__Aux2 = value;
                this.TriggerPropertyChanged("Aux2");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string Aux3
        {
            get
            {
                return @__Aux3;
            }
            set
            {
                @__Aux3 = value;
                this.TriggerPropertyChanged("Aux3");
            }
        }

        public virtual int EstacionID
        {
            get
            {
                return @__EstacionID;
            }
            set
            {
                @__EstacionID = value;
                this.TriggerPropertyChanged("EstacionID");
            }
        }

        public virtual int BombaID
        {
            get
            {
                return @__BombaID;
            }
            set
            {
                @__BombaID = value;
                this.TriggerPropertyChanged("BombaID");
            }
        }

        public virtual bool Valido
        {
            get
            {
                return @__Valido;
            }
            set
            {
                @__Valido = value;
                this.TriggerPropertyChanged("Valido");
            }
        }

        public virtual bool PuedeAbonar
        {
            get
            {
                return @__PuedeAbonar;
            }
            set
            {
                @__PuedeAbonar = value;
                this.TriggerPropertyChanged("PuedeAbonar");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string Empresa
        {
            get
            {
                return @__Empresa;
            }
            set
            {
                @__Empresa = value;
                this.TriggerPropertyChanged("Empresa");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string TxID
        {
            get
            {
                return @__TxID;
            }
            set
            {
                @__TxID = value;
                this.TriggerPropertyChanged("TxID");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string LLave
        {
            get
            {
                return @__LLave;
            }
            set
            {
                @__LLave = value;
                this.TriggerPropertyChanged("LLave");
            }
        }

        public override void ReadComplex(RemObjects.SDK.Serializer serializer)
        {
            if (serializer.RecordStrictOrder)
            {
                Referencia = serializer.ReadAnsiString("Referencia");
                Nombre = serializer.ReadAnsiString("Nombre");
                Cuenta = serializer.ReadAnsiString("Cuenta");
                Fecha = serializer.ReadDateTime("Fecha");
                Importe = serializer.ReadDouble("Importe");
                ImportePagado = serializer.ReadDouble("ImportePagado");
                Aux1 = serializer.ReadAnsiString("Aux1");
                Aux2 = serializer.ReadAnsiString("Aux2");
                Aux3 = serializer.ReadAnsiString("Aux3");
                EstacionID = serializer.ReadInt32("EstacionID");
                BombaID = serializer.ReadInt32("BombaID");
                Valido = serializer.ReadBoolean("Valido");
                PuedeAbonar = serializer.ReadBoolean("PuedeAbonar");
                Empresa = serializer.ReadAnsiString("Empresa");
                TxID = serializer.ReadAnsiString("TxID");
                LLave = serializer.ReadAnsiString("LLave");
            }
            else
            {
                Aux1 = serializer.ReadAnsiString("Aux1");
                Aux2 = serializer.ReadAnsiString("Aux2");
                Aux3 = serializer.ReadAnsiString("Aux3");
                BombaID = serializer.ReadInt32("BombaID");
                Cuenta = serializer.ReadAnsiString("Cuenta");
                Empresa = serializer.ReadAnsiString("Empresa");
                EstacionID = serializer.ReadInt32("EstacionID");
                Fecha = serializer.ReadDateTime("Fecha");
                Importe = serializer.ReadDouble("Importe");
                ImportePagado = serializer.ReadDouble("ImportePagado");
                LLave = serializer.ReadAnsiString("LLave");
                Nombre = serializer.ReadAnsiString("Nombre");
                PuedeAbonar = serializer.ReadBoolean("PuedeAbonar");
                Referencia = serializer.ReadAnsiString("Referencia");
                TxID = serializer.ReadAnsiString("TxID");
                Valido = serializer.ReadBoolean("Valido");
            }
        }

        public override void WriteComplex(RemObjects.SDK.Serializer serializer)
        {
            if (serializer.RecordStrictOrder)
            {
                serializer.WriteAnsiString("Referencia", Referencia);
                serializer.WriteAnsiString("Nombre", Nombre);
                serializer.WriteAnsiString("Cuenta", Cuenta);
                serializer.WriteDateTime("Fecha", Fecha);
                serializer.WriteDouble("Importe", Importe);
                serializer.WriteDouble("ImportePagado", ImportePagado);
                serializer.WriteAnsiString("Aux1", Aux1);
                serializer.WriteAnsiString("Aux2", Aux2);
                serializer.WriteAnsiString("Aux3", Aux3);
                serializer.WriteInt32("EstacionID", EstacionID);
                serializer.WriteInt32("BombaID", BombaID);
                serializer.WriteBoolean("Valido", Valido);
                serializer.WriteBoolean("PuedeAbonar", PuedeAbonar);
                serializer.WriteAnsiString("Empresa", Empresa);
                serializer.WriteAnsiString("TxID", TxID);
                serializer.WriteAnsiString("LLave", LLave);
            }
            else
            {
                serializer.WriteAnsiString("Aux1", Aux1);
                serializer.WriteAnsiString("Aux2", Aux2);
                serializer.WriteAnsiString("Aux3", Aux3);
                serializer.WriteInt32("BombaID", BombaID);
                serializer.WriteAnsiString("Cuenta", Cuenta);
                serializer.WriteAnsiString("Empresa", Empresa);
                serializer.WriteInt32("EstacionID", EstacionID);
                serializer.WriteDateTime("Fecha", Fecha);
                serializer.WriteDouble("Importe", Importe);
                serializer.WriteDouble("ImportePagado", ImportePagado);
                serializer.WriteAnsiString("LLave", LLave);
                serializer.WriteAnsiString("Nombre", Nombre);
                serializer.WriteBoolean("PuedeAbonar", PuedeAbonar);
                serializer.WriteAnsiString("Referencia", Referencia);
                serializer.WriteAnsiString("TxID", TxID);
                serializer.WriteBoolean("Valido", Valido);
            }
        }
    }

    [RemObjects.SDK.Activator()]
    [System.Reflection.ObfuscationAttribute(Exclude = true, ApplyToMembers = false)]
    public class TDatosServicio_Activator : object, RemObjects.SDK.ITypeActivator
    {

        public TDatosServicio_Activator()
        {
        }

        public object CreateInstance()
        {
            return new TDatosServicio();
        }
    }

    [System.Serializable()]
    [RemObjects.SDK.Remotable(ActivatorClass = typeof(TDatosFacturaEF_Activator))]
    [System.Reflection.ObfuscationAttribute(Exclude = true)]
    public partial class TDatosFacturaEF : RemObjects.SDK.Types.ComplexType
    {

        private string @__FormaPago;

        private string @__Tickets;

        private string @__NoCertificado;

        private string @__CadenaOriginal;

        private string @__SelloDigital;

        private string @__XML;

        private int @__NoAprobacion;

        private int @__EjercicioAprobacion;

        private string @__ENombre;

        private int @__EEstacion;

        private string @__EClavePemex;

        private string @__ERazonSocial;

        private string @__ERFC;

        private string @__ECalle;

        private string @__ENoExterior;

        private string @__ENoInterior;

        private string @__EColonia;

        private string @__ECodigoPostal;

        private string @__ELocalidad;

        private string @__EMunicipio;

        private string @__EEstado;

        private string @__EPais;

        private string @__ExCalle;

        private string @__ExNoExterior;

        private string @__ExNoInterior;

        private string @__ExColonia;

        private string @__ExCodigoPostal;

        private string @__ExLocalidad;

        private string @__ExMunicipio;

        private string @__ExEstado;

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string FormaPago
        {
            get
            {
                return @__FormaPago;
            }
            set
            {
                @__FormaPago = value;
                this.TriggerPropertyChanged("FormaPago");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string Tickets
        {
            get
            {
                return @__Tickets;
            }
            set
            {
                @__Tickets = value;
                this.TriggerPropertyChanged("Tickets");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string NoCertificado
        {
            get
            {
                return @__NoCertificado;
            }
            set
            {
                @__NoCertificado = value;
                this.TriggerPropertyChanged("NoCertificado");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string CadenaOriginal
        {
            get
            {
                return @__CadenaOriginal;
            }
            set
            {
                @__CadenaOriginal = value;
                this.TriggerPropertyChanged("CadenaOriginal");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string SelloDigital
        {
            get
            {
                return @__SelloDigital;
            }
            set
            {
                @__SelloDigital = value;
                this.TriggerPropertyChanged("SelloDigital");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string XML
        {
            get
            {
                return @__XML;
            }
            set
            {
                @__XML = value;
                this.TriggerPropertyChanged("XML");
            }
        }

        public virtual int NoAprobacion
        {
            get
            {
                return @__NoAprobacion;
            }
            set
            {
                @__NoAprobacion = value;
                this.TriggerPropertyChanged("NoAprobacion");
            }
        }

        public virtual int EjercicioAprobacion
        {
            get
            {
                return @__EjercicioAprobacion;
            }
            set
            {
                @__EjercicioAprobacion = value;
                this.TriggerPropertyChanged("EjercicioAprobacion");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string ENombre
        {
            get
            {
                return @__ENombre;
            }
            set
            {
                @__ENombre = value;
                this.TriggerPropertyChanged("ENombre");
            }
        }

        public virtual int EEstacion
        {
            get
            {
                return @__EEstacion;
            }
            set
            {
                @__EEstacion = value;
                this.TriggerPropertyChanged("EEstacion");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string EClavePemex
        {
            get
            {
                return @__EClavePemex;
            }
            set
            {
                @__EClavePemex = value;
                this.TriggerPropertyChanged("EClavePemex");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string ERazonSocial
        {
            get
            {
                return @__ERazonSocial;
            }
            set
            {
                @__ERazonSocial = value;
                this.TriggerPropertyChanged("ERazonSocial");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string ERFC
        {
            get
            {
                return @__ERFC;
            }
            set
            {
                @__ERFC = value;
                this.TriggerPropertyChanged("ERFC");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string ECalle
        {
            get
            {
                return @__ECalle;
            }
            set
            {
                @__ECalle = value;
                this.TriggerPropertyChanged("ECalle");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string ENoExterior
        {
            get
            {
                return @__ENoExterior;
            }
            set
            {
                @__ENoExterior = value;
                this.TriggerPropertyChanged("ENoExterior");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string ENoInterior
        {
            get
            {
                return @__ENoInterior;
            }
            set
            {
                @__ENoInterior = value;
                this.TriggerPropertyChanged("ENoInterior");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string EColonia
        {
            get
            {
                return @__EColonia;
            }
            set
            {
                @__EColonia = value;
                this.TriggerPropertyChanged("EColonia");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string ECodigoPostal
        {
            get
            {
                return @__ECodigoPostal;
            }
            set
            {
                @__ECodigoPostal = value;
                this.TriggerPropertyChanged("ECodigoPostal");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string ELocalidad
        {
            get
            {
                return @__ELocalidad;
            }
            set
            {
                @__ELocalidad = value;
                this.TriggerPropertyChanged("ELocalidad");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string EMunicipio
        {
            get
            {
                return @__EMunicipio;
            }
            set
            {
                @__EMunicipio = value;
                this.TriggerPropertyChanged("EMunicipio");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string EEstado
        {
            get
            {
                return @__EEstado;
            }
            set
            {
                @__EEstado = value;
                this.TriggerPropertyChanged("EEstado");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string EPais
        {
            get
            {
                return @__EPais;
            }
            set
            {
                @__EPais = value;
                this.TriggerPropertyChanged("EPais");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string ExCalle
        {
            get
            {
                return @__ExCalle;
            }
            set
            {
                @__ExCalle = value;
                this.TriggerPropertyChanged("ExCalle");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string ExNoExterior
        {
            get
            {
                return @__ExNoExterior;
            }
            set
            {
                @__ExNoExterior = value;
                this.TriggerPropertyChanged("ExNoExterior");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string ExNoInterior
        {
            get
            {
                return @__ExNoInterior;
            }
            set
            {
                @__ExNoInterior = value;
                this.TriggerPropertyChanged("ExNoInterior");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string ExColonia
        {
            get
            {
                return @__ExColonia;
            }
            set
            {
                @__ExColonia = value;
                this.TriggerPropertyChanged("ExColonia");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string ExCodigoPostal
        {
            get
            {
                return @__ExCodigoPostal;
            }
            set
            {
                @__ExCodigoPostal = value;
                this.TriggerPropertyChanged("ExCodigoPostal");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string ExLocalidad
        {
            get
            {
                return @__ExLocalidad;
            }
            set
            {
                @__ExLocalidad = value;
                this.TriggerPropertyChanged("ExLocalidad");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string ExMunicipio
        {
            get
            {
                return @__ExMunicipio;
            }
            set
            {
                @__ExMunicipio = value;
                this.TriggerPropertyChanged("ExMunicipio");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string ExEstado
        {
            get
            {
                return @__ExEstado;
            }
            set
            {
                @__ExEstado = value;
                this.TriggerPropertyChanged("ExEstado");
            }
        }

        public override void ReadComplex(RemObjects.SDK.Serializer serializer)
        {
            if (serializer.RecordStrictOrder)
            {
                FormaPago = serializer.ReadAnsiString("FormaPago");
                Tickets = serializer.ReadAnsiString("Tickets");
                NoCertificado = serializer.ReadAnsiString("NoCertificado");
                CadenaOriginal = serializer.ReadAnsiString("CadenaOriginal");
                SelloDigital = serializer.ReadAnsiString("SelloDigital");
                XML = serializer.ReadAnsiString("XML");
                NoAprobacion = serializer.ReadInt32("NoAprobacion");
                EjercicioAprobacion = serializer.ReadInt32("EjercicioAprobacion");
                ENombre = serializer.ReadAnsiString("ENombre");
                EEstacion = serializer.ReadInt32("EEstacion");
                EClavePemex = serializer.ReadAnsiString("EClavePemex");
                ERazonSocial = serializer.ReadAnsiString("ERazonSocial");
                ERFC = serializer.ReadAnsiString("ERFC");
                ECalle = serializer.ReadAnsiString("ECalle");
                ENoExterior = serializer.ReadAnsiString("ENoExterior");
                ENoInterior = serializer.ReadAnsiString("ENoInterior");
                EColonia = serializer.ReadAnsiString("EColonia");
                ECodigoPostal = serializer.ReadAnsiString("ECodigoPostal");
                ELocalidad = serializer.ReadAnsiString("ELocalidad");
                EMunicipio = serializer.ReadAnsiString("EMunicipio");
                EEstado = serializer.ReadAnsiString("EEstado");
                EPais = serializer.ReadAnsiString("EPais");
                ExCalle = serializer.ReadAnsiString("ExCalle");
                ExNoExterior = serializer.ReadAnsiString("ExNoExterior");
                ExNoInterior = serializer.ReadAnsiString("ExNoInterior");
                ExColonia = serializer.ReadAnsiString("ExColonia");
                ExCodigoPostal = serializer.ReadAnsiString("ExCodigoPostal");
                ExLocalidad = serializer.ReadAnsiString("ExLocalidad");
                ExMunicipio = serializer.ReadAnsiString("ExMunicipio");
                ExEstado = serializer.ReadAnsiString("ExEstado");
            }
            else
            {
                CadenaOriginal = serializer.ReadAnsiString("CadenaOriginal");
                ECalle = serializer.ReadAnsiString("ECalle");
                EClavePemex = serializer.ReadAnsiString("EClavePemex");
                ECodigoPostal = serializer.ReadAnsiString("ECodigoPostal");
                EColonia = serializer.ReadAnsiString("EColonia");
                EEstacion = serializer.ReadInt32("EEstacion");
                EEstado = serializer.ReadAnsiString("EEstado");
                EjercicioAprobacion = serializer.ReadInt32("EjercicioAprobacion");
                ELocalidad = serializer.ReadAnsiString("ELocalidad");
                EMunicipio = serializer.ReadAnsiString("EMunicipio");
                ENoExterior = serializer.ReadAnsiString("ENoExterior");
                ENoInterior = serializer.ReadAnsiString("ENoInterior");
                ENombre = serializer.ReadAnsiString("ENombre");
                EPais = serializer.ReadAnsiString("EPais");
                ERazonSocial = serializer.ReadAnsiString("ERazonSocial");
                ERFC = serializer.ReadAnsiString("ERFC");
                ExCalle = serializer.ReadAnsiString("ExCalle");
                ExCodigoPostal = serializer.ReadAnsiString("ExCodigoPostal");
                ExColonia = serializer.ReadAnsiString("ExColonia");
                ExEstado = serializer.ReadAnsiString("ExEstado");
                ExLocalidad = serializer.ReadAnsiString("ExLocalidad");
                ExMunicipio = serializer.ReadAnsiString("ExMunicipio");
                ExNoExterior = serializer.ReadAnsiString("ExNoExterior");
                ExNoInterior = serializer.ReadAnsiString("ExNoInterior");
                FormaPago = serializer.ReadAnsiString("FormaPago");
                NoAprobacion = serializer.ReadInt32("NoAprobacion");
                NoCertificado = serializer.ReadAnsiString("NoCertificado");
                SelloDigital = serializer.ReadAnsiString("SelloDigital");
                Tickets = serializer.ReadAnsiString("Tickets");
                XML = serializer.ReadAnsiString("XML");
            }
        }

        public override void WriteComplex(RemObjects.SDK.Serializer serializer)
        {
            if (serializer.RecordStrictOrder)
            {
                serializer.WriteAnsiString("FormaPago", FormaPago);
                serializer.WriteAnsiString("Tickets", Tickets);
                serializer.WriteAnsiString("NoCertificado", NoCertificado);
                serializer.WriteAnsiString("CadenaOriginal", CadenaOriginal);
                serializer.WriteAnsiString("SelloDigital", SelloDigital);
                serializer.WriteAnsiString("XML", XML);
                serializer.WriteInt32("NoAprobacion", NoAprobacion);
                serializer.WriteInt32("EjercicioAprobacion", EjercicioAprobacion);
                serializer.WriteAnsiString("ENombre", ENombre);
                serializer.WriteInt32("EEstacion", EEstacion);
                serializer.WriteAnsiString("EClavePemex", EClavePemex);
                serializer.WriteAnsiString("ERazonSocial", ERazonSocial);
                serializer.WriteAnsiString("ERFC", ERFC);
                serializer.WriteAnsiString("ECalle", ECalle);
                serializer.WriteAnsiString("ENoExterior", ENoExterior);
                serializer.WriteAnsiString("ENoInterior", ENoInterior);
                serializer.WriteAnsiString("EColonia", EColonia);
                serializer.WriteAnsiString("ECodigoPostal", ECodigoPostal);
                serializer.WriteAnsiString("ELocalidad", ELocalidad);
                serializer.WriteAnsiString("EMunicipio", EMunicipio);
                serializer.WriteAnsiString("EEstado", EEstado);
                serializer.WriteAnsiString("EPais", EPais);
                serializer.WriteAnsiString("ExCalle", ExCalle);
                serializer.WriteAnsiString("ExNoExterior", ExNoExterior);
                serializer.WriteAnsiString("ExNoInterior", ExNoInterior);
                serializer.WriteAnsiString("ExColonia", ExColonia);
                serializer.WriteAnsiString("ExCodigoPostal", ExCodigoPostal);
                serializer.WriteAnsiString("ExLocalidad", ExLocalidad);
                serializer.WriteAnsiString("ExMunicipio", ExMunicipio);
                serializer.WriteAnsiString("ExEstado", ExEstado);
            }
            else
            {
                serializer.WriteAnsiString("CadenaOriginal", CadenaOriginal);
                serializer.WriteAnsiString("ECalle", ECalle);
                serializer.WriteAnsiString("EClavePemex", EClavePemex);
                serializer.WriteAnsiString("ECodigoPostal", ECodigoPostal);
                serializer.WriteAnsiString("EColonia", EColonia);
                serializer.WriteInt32("EEstacion", EEstacion);
                serializer.WriteAnsiString("EEstado", EEstado);
                serializer.WriteInt32("EjercicioAprobacion", EjercicioAprobacion);
                serializer.WriteAnsiString("ELocalidad", ELocalidad);
                serializer.WriteAnsiString("EMunicipio", EMunicipio);
                serializer.WriteAnsiString("ENoExterior", ENoExterior);
                serializer.WriteAnsiString("ENoInterior", ENoInterior);
                serializer.WriteAnsiString("ENombre", ENombre);
                serializer.WriteAnsiString("EPais", EPais);
                serializer.WriteAnsiString("ERazonSocial", ERazonSocial);
                serializer.WriteAnsiString("ERFC", ERFC);
                serializer.WriteAnsiString("ExCalle", ExCalle);
                serializer.WriteAnsiString("ExCodigoPostal", ExCodigoPostal);
                serializer.WriteAnsiString("ExColonia", ExColonia);
                serializer.WriteAnsiString("ExEstado", ExEstado);
                serializer.WriteAnsiString("ExLocalidad", ExLocalidad);
                serializer.WriteAnsiString("ExMunicipio", ExMunicipio);
                serializer.WriteAnsiString("ExNoExterior", ExNoExterior);
                serializer.WriteAnsiString("ExNoInterior", ExNoInterior);
                serializer.WriteAnsiString("FormaPago", FormaPago);
                serializer.WriteInt32("NoAprobacion", NoAprobacion);
                serializer.WriteAnsiString("NoCertificado", NoCertificado);
                serializer.WriteAnsiString("SelloDigital", SelloDigital);
                serializer.WriteAnsiString("Tickets", Tickets);
                serializer.WriteAnsiString("XML", XML);
            }
        }
    }

    [RemObjects.SDK.Activator()]
    [System.Reflection.ObfuscationAttribute(Exclude = true, ApplyToMembers = false)]
    public class TDatosFacturaEF_Activator : object, RemObjects.SDK.ITypeActivator
    {

        public TDatosFacturaEF_Activator()
        {
        }

        public object CreateInstance()
        {
            return new TDatosFacturaEF();
        }
    }

    [System.Serializable()]
    [RemObjects.SDK.Remotable(ActivatorClass = typeof(TFoliosGenerados_Activator))]
    [System.Reflection.ObfuscationAttribute(Exclude = true)]
    public partial class TFoliosGenerados : RemObjects.SDK.Types.ComplexType
    {

        private int @__FolioINI;

        private int @__FolioFIN;

        public virtual int FolioINI
        {
            get
            {
                return @__FolioINI;
            }
            set
            {
                @__FolioINI = value;
                this.TriggerPropertyChanged("FolioINI");
            }
        }

        public virtual int FolioFIN
        {
            get
            {
                return @__FolioFIN;
            }
            set
            {
                @__FolioFIN = value;
                this.TriggerPropertyChanged("FolioFIN");
            }
        }

        public override void ReadComplex(RemObjects.SDK.Serializer serializer)
        {
            if (serializer.RecordStrictOrder)
            {
                FolioINI = serializer.ReadInt32("FolioINI");
                FolioFIN = serializer.ReadInt32("FolioFIN");
            }
            else
            {
                FolioFIN = serializer.ReadInt32("FolioFIN");
                FolioINI = serializer.ReadInt32("FolioINI");
            }
        }

        public override void WriteComplex(RemObjects.SDK.Serializer serializer)
        {
            if (serializer.RecordStrictOrder)
            {
                serializer.WriteInt32("FolioINI", FolioINI);
                serializer.WriteInt32("FolioFIN", FolioFIN);
            }
            else
            {
                serializer.WriteInt32("FolioFIN", FolioFIN);
                serializer.WriteInt32("FolioINI", FolioINI);
            }
        }
    }

    [RemObjects.SDK.Activator()]
    [System.Reflection.ObfuscationAttribute(Exclude = true, ApplyToMembers = false)]
    public class TFoliosGenerados_Activator : object, RemObjects.SDK.ITypeActivator
    {

        public TFoliosGenerados_Activator()
        {
        }

        public object CreateInstance()
        {
            return new TFoliosGenerados();
        }
    }

    [System.Serializable()]
    [RemObjects.SDK.Remotable(ActivatorClass = typeof(TWebFacturaF_Activator))]
    [System.Reflection.ObfuscationAttribute(Exclude = true)]
    public partial class TWebFacturaF : RemObjects.SDK.Types.ComplexType
    {

        private string @__Serie;

        private int @__Folio;

        private int @__EstacionID;

        private int @__FacturaID;

        private string @__Campo;

        private string @__ValorCampo;

        private string @__email;

        private string @__Estacion;

        private string @__XML;

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string Serie
        {
            get
            {
                return @__Serie;
            }
            set
            {
                @__Serie = value;
                this.TriggerPropertyChanged("Serie");
            }
        }

        public virtual int Folio
        {
            get
            {
                return @__Folio;
            }
            set
            {
                @__Folio = value;
                this.TriggerPropertyChanged("Folio");
            }
        }

        public virtual int EstacionID
        {
            get
            {
                return @__EstacionID;
            }
            set
            {
                @__EstacionID = value;
                this.TriggerPropertyChanged("EstacionID");
            }
        }

        public virtual int FacturaID
        {
            get
            {
                return @__FacturaID;
            }
            set
            {
                @__FacturaID = value;
                this.TriggerPropertyChanged("FacturaID");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string Campo
        {
            get
            {
                return @__Campo;
            }
            set
            {
                @__Campo = value;
                this.TriggerPropertyChanged("Campo");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string ValorCampo
        {
            get
            {
                return @__ValorCampo;
            }
            set
            {
                @__ValorCampo = value;
                this.TriggerPropertyChanged("ValorCampo");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string email
        {
            get
            {
                return @__email;
            }
            set
            {
                @__email = value;
                this.TriggerPropertyChanged("email");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string Estacion
        {
            get
            {
                return @__Estacion;
            }
            set
            {
                @__Estacion = value;
                this.TriggerPropertyChanged("Estacion");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string XML
        {
            get
            {
                return @__XML;
            }
            set
            {
                @__XML = value;
                this.TriggerPropertyChanged("XML");
            }
        }

        public override void ReadComplex(RemObjects.SDK.Serializer serializer)
        {
            if (serializer.RecordStrictOrder)
            {
                Serie = serializer.ReadAnsiString("Serie");
                Folio = serializer.ReadInt32("Folio");
                EstacionID = serializer.ReadInt32("EstacionID");
                FacturaID = serializer.ReadInt32("FacturaID");
                Campo = serializer.ReadAnsiString("Campo");
                ValorCampo = serializer.ReadAnsiString("ValorCampo");
                email = serializer.ReadAnsiString("email");
                Estacion = serializer.ReadAnsiString("Estacion");
                XML = serializer.ReadAnsiString("XML");
            }
            else
            {
                Campo = serializer.ReadAnsiString("Campo");
                email = serializer.ReadAnsiString("email");
                Estacion = serializer.ReadAnsiString("Estacion");
                EstacionID = serializer.ReadInt32("EstacionID");
                FacturaID = serializer.ReadInt32("FacturaID");
                Folio = serializer.ReadInt32("Folio");
                Serie = serializer.ReadAnsiString("Serie");
                ValorCampo = serializer.ReadAnsiString("ValorCampo");
                XML = serializer.ReadAnsiString("XML");
            }
        }

        public override void WriteComplex(RemObjects.SDK.Serializer serializer)
        {
            if (serializer.RecordStrictOrder)
            {
                serializer.WriteAnsiString("Serie", Serie);
                serializer.WriteInt32("Folio", Folio);
                serializer.WriteInt32("EstacionID", EstacionID);
                serializer.WriteInt32("FacturaID", FacturaID);
                serializer.WriteAnsiString("Campo", Campo);
                serializer.WriteAnsiString("ValorCampo", ValorCampo);
                serializer.WriteAnsiString("email", email);
                serializer.WriteAnsiString("Estacion", Estacion);
                serializer.WriteAnsiString("XML", XML);
            }
            else
            {
                serializer.WriteAnsiString("Campo", Campo);
                serializer.WriteAnsiString("email", email);
                serializer.WriteAnsiString("Estacion", Estacion);
                serializer.WriteInt32("EstacionID", EstacionID);
                serializer.WriteInt32("FacturaID", FacturaID);
                serializer.WriteInt32("Folio", Folio);
                serializer.WriteAnsiString("Serie", Serie);
                serializer.WriteAnsiString("ValorCampo", ValorCampo);
                serializer.WriteAnsiString("XML", XML);
            }
        }
    }

    [RemObjects.SDK.Activator()]
    [System.Reflection.ObfuscationAttribute(Exclude = true, ApplyToMembers = false)]
    public class TWebFacturaF_Activator : object, RemObjects.SDK.ITypeActivator
    {

        public TWebFacturaF_Activator()
        {
        }

        public object CreateInstance()
        {
            return new TWebFacturaF();
        }
    }

    [System.Serializable()]
    [RemObjects.SDK.Remotable(ActivatorClass = typeof(TRecibo_Activator))]
    [System.Reflection.ObfuscationAttribute(Exclude = true)]
    public partial class TRecibo : RemObjects.SDK.Types.ComplexType
    {

        private int @__ReciboID;

        private int @__Folio;

        private System.DateTime @__FechaMovimiento;

        private int @__Ejercicio;

        private int @__Periodo;

        private string @__Cheque;

        private string @__Referencia;

        private double @__Importe;

        private string @__CuentaContableCliente;

        private System.DateTime @__FechaCaptura;

        private System.DateTime @__FechaAplicacion;

        private int @__UsuarioID;

        private int @__ClienteID;

        private int @__MovimientoID;

        private int @__BancoID;

        private int @__EstacionID;

        private TSaldoDocumento[] @__Facturas;

        private int @__FormaDePagoID;

        private string @__BancoEmisor;

        private string @__Cuenta;

        private string @__FolioInternet;

        public virtual int ReciboID
        {
            get
            {
                return @__ReciboID;
            }
            set
            {
                @__ReciboID = value;
                this.TriggerPropertyChanged("ReciboID");
            }
        }

        public virtual int Folio
        {
            get
            {
                return @__Folio;
            }
            set
            {
                @__Folio = value;
                this.TriggerPropertyChanged("Folio");
            }
        }

        public virtual System.DateTime FechaMovimiento
        {
            get
            {
                return @__FechaMovimiento;
            }
            set
            {
                @__FechaMovimiento = value;
                this.TriggerPropertyChanged("FechaMovimiento");
            }
        }

        public virtual int Ejercicio
        {
            get
            {
                return @__Ejercicio;
            }
            set
            {
                @__Ejercicio = value;
                this.TriggerPropertyChanged("Ejercicio");
            }
        }

        public virtual int Periodo
        {
            get
            {
                return @__Periodo;
            }
            set
            {
                @__Periodo = value;
                this.TriggerPropertyChanged("Periodo");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string Cheque
        {
            get
            {
                return @__Cheque;
            }
            set
            {
                @__Cheque = value;
                this.TriggerPropertyChanged("Cheque");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string Referencia
        {
            get
            {
                return @__Referencia;
            }
            set
            {
                @__Referencia = value;
                this.TriggerPropertyChanged("Referencia");
            }
        }

        public virtual double Importe
        {
            get
            {
                return @__Importe;
            }
            set
            {
                @__Importe = value;
                this.TriggerPropertyChanged("Importe");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string CuentaContableCliente
        {
            get
            {
                return @__CuentaContableCliente;
            }
            set
            {
                @__CuentaContableCliente = value;
                this.TriggerPropertyChanged("CuentaContableCliente");
            }
        }

        public virtual System.DateTime FechaCaptura
        {
            get
            {
                return @__FechaCaptura;
            }
            set
            {
                @__FechaCaptura = value;
                this.TriggerPropertyChanged("FechaCaptura");
            }
        }

        public virtual System.DateTime FechaAplicacion
        {
            get
            {
                return @__FechaAplicacion;
            }
            set
            {
                @__FechaAplicacion = value;
                this.TriggerPropertyChanged("FechaAplicacion");
            }
        }

        public virtual int UsuarioID
        {
            get
            {
                return @__UsuarioID;
            }
            set
            {
                @__UsuarioID = value;
                this.TriggerPropertyChanged("UsuarioID");
            }
        }

        public virtual int ClienteID
        {
            get
            {
                return @__ClienteID;
            }
            set
            {
                @__ClienteID = value;
                this.TriggerPropertyChanged("ClienteID");
            }
        }

        public virtual int MovimientoID
        {
            get
            {
                return @__MovimientoID;
            }
            set
            {
                @__MovimientoID = value;
                this.TriggerPropertyChanged("MovimientoID");
            }
        }

        public virtual int BancoID
        {
            get
            {
                return @__BancoID;
            }
            set
            {
                @__BancoID = value;
                this.TriggerPropertyChanged("BancoID");
            }
        }

        public virtual int EstacionID
        {
            get
            {
                return @__EstacionID;
            }
            set
            {
                @__EstacionID = value;
                this.TriggerPropertyChanged("EstacionID");
            }
        }

        public virtual TSaldoDocumento[] Facturas
        {
            get
            {
                return @__Facturas;
            }
            set
            {
                @__Facturas = value;
                this.TriggerPropertyChanged("Facturas");
            }
        }

        public virtual int FormaDePagoID
        {
            get
            {
                return @__FormaDePagoID;
            }
            set
            {
                @__FormaDePagoID = value;
                this.TriggerPropertyChanged("FormaDePagoID");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string BancoEmisor
        {
            get
            {
                return @__BancoEmisor;
            }
            set
            {
                @__BancoEmisor = value;
                this.TriggerPropertyChanged("BancoEmisor");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string Cuenta
        {
            get
            {
                return @__Cuenta;
            }
            set
            {
                @__Cuenta = value;
                this.TriggerPropertyChanged("Cuenta");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string FolioInternet
        {
            get
            {
                return @__FolioInternet;
            }
            set
            {
                @__FolioInternet = value;
                this.TriggerPropertyChanged("FolioInternet");
            }
        }

        public override void ReadComplex(RemObjects.SDK.Serializer serializer)
        {
            if (serializer.RecordStrictOrder)
            {
                ReciboID = serializer.ReadInt32("ReciboID");
                Folio = serializer.ReadInt32("Folio");
                FechaMovimiento = serializer.ReadDateTime("FechaMovimiento");
                Ejercicio = serializer.ReadInt32("Ejercicio");
                Periodo = serializer.ReadInt32("Periodo");
                Cheque = serializer.ReadAnsiString("Cheque");
                Referencia = serializer.ReadAnsiString("Referencia");
                Importe = serializer.ReadDouble("Importe");
                CuentaContableCliente = serializer.ReadAnsiString("CuentaContableCliente");
                FechaCaptura = serializer.ReadDateTime("FechaCaptura");
                FechaAplicacion = serializer.ReadDateTime("FechaAplicacion");
                UsuarioID = serializer.ReadInt32("UsuarioID");
                ClienteID = serializer.ReadInt32("ClienteID");
                MovimientoID = serializer.ReadInt32("MovimientoID");
                BancoID = serializer.ReadInt32("BancoID");
                EstacionID = serializer.ReadInt32("EstacionID");
                Facturas = ((TSaldoDocumento[])(serializer.Read("Facturas", typeof(TSaldoDocumento[]), RemObjects.SDK.StreamingFormat.Default)));
                FormaDePagoID = serializer.ReadInt32("FormaDePagoID");
                BancoEmisor = serializer.ReadAnsiString("BancoEmisor");
                Cuenta = serializer.ReadAnsiString("Cuenta");
                FolioInternet = serializer.ReadAnsiString("FolioInternet");
            }
            else
            {
                BancoEmisor = serializer.ReadAnsiString("BancoEmisor");
                BancoID = serializer.ReadInt32("BancoID");
                Cheque = serializer.ReadAnsiString("Cheque");
                ClienteID = serializer.ReadInt32("ClienteID");
                Cuenta = serializer.ReadAnsiString("Cuenta");
                CuentaContableCliente = serializer.ReadAnsiString("CuentaContableCliente");
                Ejercicio = serializer.ReadInt32("Ejercicio");
                EstacionID = serializer.ReadInt32("EstacionID");
                Facturas = ((TSaldoDocumento[])(serializer.Read("Facturas", typeof(TSaldoDocumento[]), RemObjects.SDK.StreamingFormat.Default)));
                FechaAplicacion = serializer.ReadDateTime("FechaAplicacion");
                FechaCaptura = serializer.ReadDateTime("FechaCaptura");
                FechaMovimiento = serializer.ReadDateTime("FechaMovimiento");
                Folio = serializer.ReadInt32("Folio");
                FolioInternet = serializer.ReadAnsiString("FolioInternet");
                FormaDePagoID = serializer.ReadInt32("FormaDePagoID");
                Importe = serializer.ReadDouble("Importe");
                MovimientoID = serializer.ReadInt32("MovimientoID");
                Periodo = serializer.ReadInt32("Periodo");
                ReciboID = serializer.ReadInt32("ReciboID");
                Referencia = serializer.ReadAnsiString("Referencia");
                UsuarioID = serializer.ReadInt32("UsuarioID");
            }
        }

        public override void WriteComplex(RemObjects.SDK.Serializer serializer)
        {
            if (serializer.RecordStrictOrder)
            {
                serializer.WriteInt32("ReciboID", ReciboID);
                serializer.WriteInt32("Folio", Folio);
                serializer.WriteDateTime("FechaMovimiento", FechaMovimiento);
                serializer.WriteInt32("Ejercicio", Ejercicio);
                serializer.WriteInt32("Periodo", Periodo);
                serializer.WriteAnsiString("Cheque", Cheque);
                serializer.WriteAnsiString("Referencia", Referencia);
                serializer.WriteDouble("Importe", Importe);
                serializer.WriteAnsiString("CuentaContableCliente", CuentaContableCliente);
                serializer.WriteDateTime("FechaCaptura", FechaCaptura);
                serializer.WriteDateTime("FechaAplicacion", FechaAplicacion);
                serializer.WriteInt32("UsuarioID", UsuarioID);
                serializer.WriteInt32("ClienteID", ClienteID);
                serializer.WriteInt32("MovimientoID", MovimientoID);
                serializer.WriteInt32("BancoID", BancoID);
                serializer.WriteInt32("EstacionID", EstacionID);
                serializer.Write("Facturas", Facturas, typeof(TSaldoDocumento[]), RemObjects.SDK.StreamingFormat.Default);
                serializer.WriteInt32("FormaDePagoID", FormaDePagoID);
                serializer.WriteAnsiString("BancoEmisor", BancoEmisor);
                serializer.WriteAnsiString("Cuenta", Cuenta);
                serializer.WriteAnsiString("FolioInternet", FolioInternet);
            }
            else
            {
                serializer.WriteAnsiString("BancoEmisor", BancoEmisor);
                serializer.WriteInt32("BancoID", BancoID);
                serializer.WriteAnsiString("Cheque", Cheque);
                serializer.WriteInt32("ClienteID", ClienteID);
                serializer.WriteAnsiString("Cuenta", Cuenta);
                serializer.WriteAnsiString("CuentaContableCliente", CuentaContableCliente);
                serializer.WriteInt32("Ejercicio", Ejercicio);
                serializer.WriteInt32("EstacionID", EstacionID);
                serializer.Write("Facturas", Facturas, typeof(TSaldoDocumento[]), RemObjects.SDK.StreamingFormat.Default);
                serializer.WriteDateTime("FechaAplicacion", FechaAplicacion);
                serializer.WriteDateTime("FechaCaptura", FechaCaptura);
                serializer.WriteDateTime("FechaMovimiento", FechaMovimiento);
                serializer.WriteInt32("Folio", Folio);
                serializer.WriteAnsiString("FolioInternet", FolioInternet);
                serializer.WriteInt32("FormaDePagoID", FormaDePagoID);
                serializer.WriteDouble("Importe", Importe);
                serializer.WriteInt32("MovimientoID", MovimientoID);
                serializer.WriteInt32("Periodo", Periodo);
                serializer.WriteInt32("ReciboID", ReciboID);
                serializer.WriteAnsiString("Referencia", Referencia);
                serializer.WriteInt32("UsuarioID", UsuarioID);
            }
        }
    }

    [RemObjects.SDK.Activator()]
    [System.Reflection.ObfuscationAttribute(Exclude = true, ApplyToMembers = false)]
    public class TRecibo_Activator : object, RemObjects.SDK.ITypeActivator
    {

        public TRecibo_Activator()
        {
        }

        public object CreateInstance()
        {
            return new TRecibo();
        }
    }

    [System.Serializable()]
    [RemObjects.SDK.Remotable(ActivatorClass = typeof(TCambiaDatosConsumo_Activator))]
    [System.Reflection.ObfuscationAttribute(Exclude = true)]
    public partial class TCambiaDatosConsumo : RemObjects.SDK.Types.ComplexType
    {

        private int @__ID;

        private int @__Kilometraje;

        private int @__Turno;

        private System.DateTime @__FechaCarga;

        private System.DateTime @__FechaContable;

        public virtual int ID
        {
            get
            {
                return @__ID;
            }
            set
            {
                @__ID = value;
                this.TriggerPropertyChanged("ID");
            }
        }

        public virtual int Kilometraje
        {
            get
            {
                return @__Kilometraje;
            }
            set
            {
                @__Kilometraje = value;
                this.TriggerPropertyChanged("Kilometraje");
            }
        }

        public virtual int Turno
        {
            get
            {
                return @__Turno;
            }
            set
            {
                @__Turno = value;
                this.TriggerPropertyChanged("Turno");
            }
        }

        public virtual System.DateTime FechaCarga
        {
            get
            {
                return @__FechaCarga;
            }
            set
            {
                @__FechaCarga = value;
                this.TriggerPropertyChanged("FechaCarga");
            }
        }

        public virtual System.DateTime FechaContable
        {
            get
            {
                return @__FechaContable;
            }
            set
            {
                @__FechaContable = value;
                this.TriggerPropertyChanged("FechaContable");
            }
        }

        public override void ReadComplex(RemObjects.SDK.Serializer serializer)
        {
            if (serializer.RecordStrictOrder)
            {
                ID = serializer.ReadInt32("ID");
                Kilometraje = serializer.ReadInt32("Kilometraje");
                Turno = serializer.ReadInt32("Turno");
                FechaCarga = serializer.ReadDateTime("FechaCarga");
                FechaContable = serializer.ReadDateTime("FechaContable");
            }
            else
            {
                FechaCarga = serializer.ReadDateTime("FechaCarga");
                FechaContable = serializer.ReadDateTime("FechaContable");
                ID = serializer.ReadInt32("ID");
                Kilometraje = serializer.ReadInt32("Kilometraje");
                Turno = serializer.ReadInt32("Turno");
            }
        }

        public override void WriteComplex(RemObjects.SDK.Serializer serializer)
        {
            if (serializer.RecordStrictOrder)
            {
                serializer.WriteInt32("ID", ID);
                serializer.WriteInt32("Kilometraje", Kilometraje);
                serializer.WriteInt32("Turno", Turno);
                serializer.WriteDateTime("FechaCarga", FechaCarga);
                serializer.WriteDateTime("FechaContable", FechaContable);
            }
            else
            {
                serializer.WriteDateTime("FechaCarga", FechaCarga);
                serializer.WriteDateTime("FechaContable", FechaContable);
                serializer.WriteInt32("ID", ID);
                serializer.WriteInt32("Kilometraje", Kilometraje);
                serializer.WriteInt32("Turno", Turno);
            }
        }
    }

    [RemObjects.SDK.Activator()]
    [System.Reflection.ObfuscationAttribute(Exclude = true, ApplyToMembers = false)]
    public class TCambiaDatosConsumo_Activator : object, RemObjects.SDK.ITypeActivator
    {

        public TCambiaDatosConsumo_Activator()
        {
        }

        public object CreateInstance()
        {
            return new TCambiaDatosConsumo();
        }
    }

    [System.Serializable()]
    [RemObjects.SDK.Remotable(ActivatorClass = typeof(TNotaCredito_Activator))]
    [System.Reflection.ObfuscationAttribute(Exclude = true)]
    public partial class TNotaCredito : RemObjects.SDK.Types.ComplexType
    {

        private string @__Serie;

        private int @__Folio;

        private string @__Error;

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string Serie
        {
            get
            {
                return @__Serie;
            }
            set
            {
                @__Serie = value;
                this.TriggerPropertyChanged("Serie");
            }
        }

        public virtual int Folio
        {
            get
            {
                return @__Folio;
            }
            set
            {
                @__Folio = value;
                this.TriggerPropertyChanged("Folio");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string Error
        {
            get
            {
                return @__Error;
            }
            set
            {
                @__Error = value;
                this.TriggerPropertyChanged("Error");
            }
        }

        public override void ReadComplex(RemObjects.SDK.Serializer serializer)
        {
            if (serializer.RecordStrictOrder)
            {
                Serie = serializer.ReadAnsiString("Serie");
                Folio = serializer.ReadInt32("Folio");
                Error = serializer.ReadAnsiString("Error");
            }
            else
            {
                Error = serializer.ReadAnsiString("Error");
                Folio = serializer.ReadInt32("Folio");
                Serie = serializer.ReadAnsiString("Serie");
            }
        }

        public override void WriteComplex(RemObjects.SDK.Serializer serializer)
        {
            if (serializer.RecordStrictOrder)
            {
                serializer.WriteAnsiString("Serie", Serie);
                serializer.WriteInt32("Folio", Folio);
                serializer.WriteAnsiString("Error", Error);
            }
            else
            {
                serializer.WriteAnsiString("Error", Error);
                serializer.WriteInt32("Folio", Folio);
                serializer.WriteAnsiString("Serie", Serie);
            }
        }
    }

    [RemObjects.SDK.Activator()]
    [System.Reflection.ObfuscationAttribute(Exclude = true, ApplyToMembers = false)]
    public class TNotaCredito_Activator : object, RemObjects.SDK.ITypeActivator
    {

        public TNotaCredito_Activator()
        {
        }

        public object CreateInstance()
        {
            return new TNotaCredito();
        }
    }

    [System.Serializable()]
    [RemObjects.SDK.Remotable(ActivatorClass = typeof(TObservaFactura_Activator))]
    [System.Reflection.ObfuscationAttribute(Exclude = true)]
    public partial class TObservaFactura : RemObjects.SDK.Types.ComplexType
    {

        private bool @__Valida;

        private string @__Error;

        private string @__Observaciones;

        public virtual bool Valida
        {
            get
            {
                return @__Valida;
            }
            set
            {
                @__Valida = value;
                this.TriggerPropertyChanged("Valida");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string Error
        {
            get
            {
                return @__Error;
            }
            set
            {
                @__Error = value;
                this.TriggerPropertyChanged("Error");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string Observaciones
        {
            get
            {
                return @__Observaciones;
            }
            set
            {
                @__Observaciones = value;
                this.TriggerPropertyChanged("Observaciones");
            }
        }

        public override void ReadComplex(RemObjects.SDK.Serializer serializer)
        {
            if (serializer.RecordStrictOrder)
            {
                Valida = serializer.ReadBoolean("Valida");
                Error = serializer.ReadAnsiString("Error");
                Observaciones = serializer.ReadAnsiString("Observaciones");
            }
            else
            {
                Error = serializer.ReadAnsiString("Error");
                Observaciones = serializer.ReadAnsiString("Observaciones");
                Valida = serializer.ReadBoolean("Valida");
            }
        }

        public override void WriteComplex(RemObjects.SDK.Serializer serializer)
        {
            if (serializer.RecordStrictOrder)
            {
                serializer.WriteBoolean("Valida", Valida);
                serializer.WriteAnsiString("Error", Error);
                serializer.WriteAnsiString("Observaciones", Observaciones);
            }
            else
            {
                serializer.WriteAnsiString("Error", Error);
                serializer.WriteAnsiString("Observaciones", Observaciones);
                serializer.WriteBoolean("Valida", Valida);
            }
        }
    }

    [RemObjects.SDK.Activator()]
    [System.Reflection.ObfuscationAttribute(Exclude = true, ApplyToMembers = false)]
    public class TObservaFactura_Activator : object, RemObjects.SDK.ITypeActivator
    {

        public TObservaFactura_Activator()
        {
        }

        public object CreateInstance()
        {
            return new TObservaFactura();
        }
    }

    [System.Serializable()]
    [RemObjects.SDK.Remotable(ActivatorClass = typeof(TSaldoVehiculoPlus_Activator))]
    [System.Reflection.ObfuscationAttribute(Exclude = true)]
    public partial class TSaldoVehiculoPlus : RemObjects.SDK.Types.ComplexType
    {

        private bool @__Valido;

        private string @__NIP;

        private string @__Mensaje;

        private bool @__Odometro;

        private bool @__Firma;

        private bool @__Placas;

        private string @__Fotos;

        private string @__PlacasNumero;

        private int @__VehiculoID;

        private int @__ClienteID;

        private int @__DigitoSeguridad;

        private RemObjects.SDK.Types.Binary @__FotoVehiculo;

        private string @__ProductoAutorizado;

        public virtual bool Valido
        {
            get
            {
                return @__Valido;
            }
            set
            {
                @__Valido = value;
                this.TriggerPropertyChanged("Valido");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string NIP
        {
            get
            {
                return @__NIP;
            }
            set
            {
                @__NIP = value;
                this.TriggerPropertyChanged("NIP");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string Mensaje
        {
            get
            {
                return @__Mensaje;
            }
            set
            {
                @__Mensaje = value;
                this.TriggerPropertyChanged("Mensaje");
            }
        }

        public virtual bool Odometro
        {
            get
            {
                return @__Odometro;
            }
            set
            {
                @__Odometro = value;
                this.TriggerPropertyChanged("Odometro");
            }
        }

        public virtual bool Firma
        {
            get
            {
                return @__Firma;
            }
            set
            {
                @__Firma = value;
                this.TriggerPropertyChanged("Firma");
            }
        }

        public virtual bool Placas
        {
            get
            {
                return @__Placas;
            }
            set
            {
                @__Placas = value;
                this.TriggerPropertyChanged("Placas");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string Fotos
        {
            get
            {
                return @__Fotos;
            }
            set
            {
                @__Fotos = value;
                this.TriggerPropertyChanged("Fotos");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string PlacasNumero
        {
            get
            {
                return @__PlacasNumero;
            }
            set
            {
                @__PlacasNumero = value;
                this.TriggerPropertyChanged("PlacasNumero");
            }
        }

        public virtual int VehiculoID
        {
            get
            {
                return @__VehiculoID;
            }
            set
            {
                @__VehiculoID = value;
                this.TriggerPropertyChanged("VehiculoID");
            }
        }

        public virtual int ClienteID
        {
            get
            {
                return @__ClienteID;
            }
            set
            {
                @__ClienteID = value;
                this.TriggerPropertyChanged("ClienteID");
            }
        }

        public virtual int DigitoSeguridad
        {
            get
            {
                return @__DigitoSeguridad;
            }
            set
            {
                @__DigitoSeguridad = value;
                this.TriggerPropertyChanged("DigitoSeguridad");
            }
        }

        public virtual RemObjects.SDK.Types.Binary FotoVehiculo
        {
            get
            {
                return @__FotoVehiculo;
            }
            set
            {
                @__FotoVehiculo = value;
                this.TriggerPropertyChanged("FotoVehiculo");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string ProductoAutorizado
        {
            get
            {
                return @__ProductoAutorizado;
            }
            set
            {
                @__ProductoAutorizado = value;
                this.TriggerPropertyChanged("ProductoAutorizado");
            }
        }

        public override void ReadComplex(RemObjects.SDK.Serializer serializer)
        {
            if (serializer.RecordStrictOrder)
            {
                Valido = serializer.ReadBoolean("Valido");
                NIP = serializer.ReadAnsiString("NIP");
                Mensaje = serializer.ReadAnsiString("Mensaje");
                Odometro = serializer.ReadBoolean("Odometro");
                Firma = serializer.ReadBoolean("Firma");
                Placas = serializer.ReadBoolean("Placas");
                Fotos = serializer.ReadAnsiString("Fotos");
                PlacasNumero = serializer.ReadAnsiString("PlacasNumero");
                VehiculoID = serializer.ReadInt32("VehiculoID");
                ClienteID = serializer.ReadInt32("ClienteID");
                DigitoSeguridad = serializer.ReadInt32("DigitoSeguridad");
                FotoVehiculo = ((RemObjects.SDK.Types.Binary)(serializer.Read("FotoVehiculo", typeof(RemObjects.SDK.Types.Binary), RemObjects.SDK.StreamingFormat.Default)));
                ProductoAutorizado = serializer.ReadAnsiString("ProductoAutorizado");
            }
            else
            {
                ClienteID = serializer.ReadInt32("ClienteID");
                DigitoSeguridad = serializer.ReadInt32("DigitoSeguridad");
                Firma = serializer.ReadBoolean("Firma");
                Fotos = serializer.ReadAnsiString("Fotos");
                FotoVehiculo = ((RemObjects.SDK.Types.Binary)(serializer.Read("FotoVehiculo", typeof(RemObjects.SDK.Types.Binary), RemObjects.SDK.StreamingFormat.Default)));
                Mensaje = serializer.ReadAnsiString("Mensaje");
                NIP = serializer.ReadAnsiString("NIP");
                Odometro = serializer.ReadBoolean("Odometro");
                Placas = serializer.ReadBoolean("Placas");
                PlacasNumero = serializer.ReadAnsiString("PlacasNumero");
                ProductoAutorizado = serializer.ReadAnsiString("ProductoAutorizado");
                Valido = serializer.ReadBoolean("Valido");
                VehiculoID = serializer.ReadInt32("VehiculoID");
            }
        }

        public override void WriteComplex(RemObjects.SDK.Serializer serializer)
        {
            if (serializer.RecordStrictOrder)
            {
                serializer.WriteBoolean("Valido", Valido);
                serializer.WriteAnsiString("NIP", NIP);
                serializer.WriteAnsiString("Mensaje", Mensaje);
                serializer.WriteBoolean("Odometro", Odometro);
                serializer.WriteBoolean("Firma", Firma);
                serializer.WriteBoolean("Placas", Placas);
                serializer.WriteAnsiString("Fotos", Fotos);
                serializer.WriteAnsiString("PlacasNumero", PlacasNumero);
                serializer.WriteInt32("VehiculoID", VehiculoID);
                serializer.WriteInt32("ClienteID", ClienteID);
                serializer.WriteInt32("DigitoSeguridad", DigitoSeguridad);
                serializer.Write("FotoVehiculo", FotoVehiculo, typeof(RemObjects.SDK.Types.Binary), RemObjects.SDK.StreamingFormat.Default);
                serializer.WriteAnsiString("ProductoAutorizado", ProductoAutorizado);
            }
            else
            {
                serializer.WriteInt32("ClienteID", ClienteID);
                serializer.WriteInt32("DigitoSeguridad", DigitoSeguridad);
                serializer.WriteBoolean("Firma", Firma);
                serializer.WriteAnsiString("Fotos", Fotos);
                serializer.Write("FotoVehiculo", FotoVehiculo, typeof(RemObjects.SDK.Types.Binary), RemObjects.SDK.StreamingFormat.Default);
                serializer.WriteAnsiString("Mensaje", Mensaje);
                serializer.WriteAnsiString("NIP", NIP);
                serializer.WriteBoolean("Odometro", Odometro);
                serializer.WriteBoolean("Placas", Placas);
                serializer.WriteAnsiString("PlacasNumero", PlacasNumero);
                serializer.WriteAnsiString("ProductoAutorizado", ProductoAutorizado);
                serializer.WriteBoolean("Valido", Valido);
                serializer.WriteInt32("VehiculoID", VehiculoID);
            }
        }
    }

    [RemObjects.SDK.Activator()]
    [System.Reflection.ObfuscationAttribute(Exclude = true, ApplyToMembers = false)]
    public class TSaldoVehiculoPlus_Activator : object, RemObjects.SDK.ITypeActivator
    {

        public TSaldoVehiculoPlus_Activator()
        {
        }

        public object CreateInstance()
        {
            return new TSaldoVehiculoPlus();
        }
    }

    [System.Serializable()]
    [RemObjects.SDK.Remotable(ActivatorClass = typeof(TSincronizaAlbum_Activator))]
    [System.Reflection.ObfuscationAttribute(Exclude = true)]
    public partial class TSincronizaAlbum : RemObjects.SDK.Types.ComplexType
    {

        private int @__EstacionID;

        private int @__TicketID;

        private RemObjects.SDK.Types.Binary @__Firma;

        private RemObjects.SDK.Types.Binary @__Foto1;

        private RemObjects.SDK.Types.Binary @__Foto2;

        private RemObjects.SDK.Types.Binary @__Foto3;

        private RemObjects.SDK.Types.Binary @__Foto4;

        private RemObjects.SDK.Types.Binary @__Foto5;

        private string @__Nota;

        private string @__Referencia;

        public virtual int EstacionID
        {
            get
            {
                return @__EstacionID;
            }
            set
            {
                @__EstacionID = value;
                this.TriggerPropertyChanged("EstacionID");
            }
        }

        public virtual int TicketID
        {
            get
            {
                return @__TicketID;
            }
            set
            {
                @__TicketID = value;
                this.TriggerPropertyChanged("TicketID");
            }
        }

        public virtual RemObjects.SDK.Types.Binary Firma
        {
            get
            {
                return @__Firma;
            }
            set
            {
                @__Firma = value;
                this.TriggerPropertyChanged("Firma");
            }
        }

        public virtual RemObjects.SDK.Types.Binary Foto1
        {
            get
            {
                return @__Foto1;
            }
            set
            {
                @__Foto1 = value;
                this.TriggerPropertyChanged("Foto1");
            }
        }

        public virtual RemObjects.SDK.Types.Binary Foto2
        {
            get
            {
                return @__Foto2;
            }
            set
            {
                @__Foto2 = value;
                this.TriggerPropertyChanged("Foto2");
            }
        }

        public virtual RemObjects.SDK.Types.Binary Foto3
        {
            get
            {
                return @__Foto3;
            }
            set
            {
                @__Foto3 = value;
                this.TriggerPropertyChanged("Foto3");
            }
        }

        public virtual RemObjects.SDK.Types.Binary Foto4
        {
            get
            {
                return @__Foto4;
            }
            set
            {
                @__Foto4 = value;
                this.TriggerPropertyChanged("Foto4");
            }
        }

        public virtual RemObjects.SDK.Types.Binary Foto5
        {
            get
            {
                return @__Foto5;
            }
            set
            {
                @__Foto5 = value;
                this.TriggerPropertyChanged("Foto5");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string Nota
        {
            get
            {
                return @__Nota;
            }
            set
            {
                @__Nota = value;
                this.TriggerPropertyChanged("Nota");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string Referencia
        {
            get
            {
                return @__Referencia;
            }
            set
            {
                @__Referencia = value;
                this.TriggerPropertyChanged("Referencia");
            }
        }

        public override void ReadComplex(RemObjects.SDK.Serializer serializer)
        {
            if (serializer.RecordStrictOrder)
            {
                EstacionID = serializer.ReadInt32("EstacionID");
                TicketID = serializer.ReadInt32("TicketID");
                Firma = ((RemObjects.SDK.Types.Binary)(serializer.Read("Firma", typeof(RemObjects.SDK.Types.Binary), RemObjects.SDK.StreamingFormat.Default)));
                Foto1 = ((RemObjects.SDK.Types.Binary)(serializer.Read("Foto1", typeof(RemObjects.SDK.Types.Binary), RemObjects.SDK.StreamingFormat.Default)));
                Foto2 = ((RemObjects.SDK.Types.Binary)(serializer.Read("Foto2", typeof(RemObjects.SDK.Types.Binary), RemObjects.SDK.StreamingFormat.Default)));
                Foto3 = ((RemObjects.SDK.Types.Binary)(serializer.Read("Foto3", typeof(RemObjects.SDK.Types.Binary), RemObjects.SDK.StreamingFormat.Default)));
                Foto4 = ((RemObjects.SDK.Types.Binary)(serializer.Read("Foto4", typeof(RemObjects.SDK.Types.Binary), RemObjects.SDK.StreamingFormat.Default)));
                Foto5 = ((RemObjects.SDK.Types.Binary)(serializer.Read("Foto5", typeof(RemObjects.SDK.Types.Binary), RemObjects.SDK.StreamingFormat.Default)));
                Nota = serializer.ReadAnsiString("Nota");
                Referencia = serializer.ReadAnsiString("Referencia");
            }
            else
            {
                EstacionID = serializer.ReadInt32("EstacionID");
                Firma = ((RemObjects.SDK.Types.Binary)(serializer.Read("Firma", typeof(RemObjects.SDK.Types.Binary), RemObjects.SDK.StreamingFormat.Default)));
                Foto1 = ((RemObjects.SDK.Types.Binary)(serializer.Read("Foto1", typeof(RemObjects.SDK.Types.Binary), RemObjects.SDK.StreamingFormat.Default)));
                Foto2 = ((RemObjects.SDK.Types.Binary)(serializer.Read("Foto2", typeof(RemObjects.SDK.Types.Binary), RemObjects.SDK.StreamingFormat.Default)));
                Foto3 = ((RemObjects.SDK.Types.Binary)(serializer.Read("Foto3", typeof(RemObjects.SDK.Types.Binary), RemObjects.SDK.StreamingFormat.Default)));
                Foto4 = ((RemObjects.SDK.Types.Binary)(serializer.Read("Foto4", typeof(RemObjects.SDK.Types.Binary), RemObjects.SDK.StreamingFormat.Default)));
                Foto5 = ((RemObjects.SDK.Types.Binary)(serializer.Read("Foto5", typeof(RemObjects.SDK.Types.Binary), RemObjects.SDK.StreamingFormat.Default)));
                Nota = serializer.ReadAnsiString("Nota");
                Referencia = serializer.ReadAnsiString("Referencia");
                TicketID = serializer.ReadInt32("TicketID");
            }
        }

        public override void WriteComplex(RemObjects.SDK.Serializer serializer)
        {
            if (serializer.RecordStrictOrder)
            {
                serializer.WriteInt32("EstacionID", EstacionID);
                serializer.WriteInt32("TicketID", TicketID);
                serializer.Write("Firma", Firma, typeof(RemObjects.SDK.Types.Binary), RemObjects.SDK.StreamingFormat.Default);
                serializer.Write("Foto1", Foto1, typeof(RemObjects.SDK.Types.Binary), RemObjects.SDK.StreamingFormat.Default);
                serializer.Write("Foto2", Foto2, typeof(RemObjects.SDK.Types.Binary), RemObjects.SDK.StreamingFormat.Default);
                serializer.Write("Foto3", Foto3, typeof(RemObjects.SDK.Types.Binary), RemObjects.SDK.StreamingFormat.Default);
                serializer.Write("Foto4", Foto4, typeof(RemObjects.SDK.Types.Binary), RemObjects.SDK.StreamingFormat.Default);
                serializer.Write("Foto5", Foto5, typeof(RemObjects.SDK.Types.Binary), RemObjects.SDK.StreamingFormat.Default);
                serializer.WriteAnsiString("Nota", Nota);
                serializer.WriteAnsiString("Referencia", Referencia);
            }
            else
            {
                serializer.WriteInt32("EstacionID", EstacionID);
                serializer.Write("Firma", Firma, typeof(RemObjects.SDK.Types.Binary), RemObjects.SDK.StreamingFormat.Default);
                serializer.Write("Foto1", Foto1, typeof(RemObjects.SDK.Types.Binary), RemObjects.SDK.StreamingFormat.Default);
                serializer.Write("Foto2", Foto2, typeof(RemObjects.SDK.Types.Binary), RemObjects.SDK.StreamingFormat.Default);
                serializer.Write("Foto3", Foto3, typeof(RemObjects.SDK.Types.Binary), RemObjects.SDK.StreamingFormat.Default);
                serializer.Write("Foto4", Foto4, typeof(RemObjects.SDK.Types.Binary), RemObjects.SDK.StreamingFormat.Default);
                serializer.Write("Foto5", Foto5, typeof(RemObjects.SDK.Types.Binary), RemObjects.SDK.StreamingFormat.Default);
                serializer.WriteAnsiString("Nota", Nota);
                serializer.WriteAnsiString("Referencia", Referencia);
                serializer.WriteInt32("TicketID", TicketID);
            }
        }
    }

    [RemObjects.SDK.Activator()]
    [System.Reflection.ObfuscationAttribute(Exclude = true, ApplyToMembers = false)]
    public class TSincronizaAlbum_Activator : object, RemObjects.SDK.ITypeActivator
    {

        public TSincronizaAlbum_Activator()
        {
        }

        public object CreateInstance()
        {
            return new TSincronizaAlbum();
        }
    }

    [System.Serializable()]
    [RemObjects.SDK.Remotable(ActivatorClass = typeof(TValidaQREmpadronar_Activator))]
    [System.Reflection.ObfuscationAttribute(Exclude = true)]
    public partial class TValidaQREmpadronar : RemObjects.SDK.Types.ComplexType
    {

        private bool @__Valida;

        private RemObjects.SDK.Types.Binary @__FotoVehiculo;

        public virtual bool Valida
        {
            get
            {
                return @__Valida;
            }
            set
            {
                @__Valida = value;
                this.TriggerPropertyChanged("Valida");
            }
        }

        public virtual RemObjects.SDK.Types.Binary FotoVehiculo
        {
            get
            {
                return @__FotoVehiculo;
            }
            set
            {
                @__FotoVehiculo = value;
                this.TriggerPropertyChanged("FotoVehiculo");
            }
        }

        public override void ReadComplex(RemObjects.SDK.Serializer serializer)
        {
            if (serializer.RecordStrictOrder)
            {
                Valida = serializer.ReadBoolean("Valida");
                FotoVehiculo = ((RemObjects.SDK.Types.Binary)(serializer.Read("FotoVehiculo", typeof(RemObjects.SDK.Types.Binary), RemObjects.SDK.StreamingFormat.Default)));
            }
            else
            {
                FotoVehiculo = ((RemObjects.SDK.Types.Binary)(serializer.Read("FotoVehiculo", typeof(RemObjects.SDK.Types.Binary), RemObjects.SDK.StreamingFormat.Default)));
                Valida = serializer.ReadBoolean("Valida");
            }
        }

        public override void WriteComplex(RemObjects.SDK.Serializer serializer)
        {
            if (serializer.RecordStrictOrder)
            {
                serializer.WriteBoolean("Valida", Valida);
                serializer.Write("FotoVehiculo", FotoVehiculo, typeof(RemObjects.SDK.Types.Binary), RemObjects.SDK.StreamingFormat.Default);
            }
            else
            {
                serializer.Write("FotoVehiculo", FotoVehiculo, typeof(RemObjects.SDK.Types.Binary), RemObjects.SDK.StreamingFormat.Default);
                serializer.WriteBoolean("Valida", Valida);
            }
        }
    }

    [RemObjects.SDK.Activator()]
    [System.Reflection.ObfuscationAttribute(Exclude = true, ApplyToMembers = false)]
    public class TValidaQREmpadronar_Activator : object, RemObjects.SDK.ITypeActivator
    {

        public TValidaQREmpadronar_Activator()
        {
        }

        public object CreateInstance()
        {
            return new TValidaQREmpadronar();
        }
    }

    public interface IServiceFlotillas : RemObjects.DataAbstract.Server.IDataAbstractService
    {

        RemObjects.SDK.Types.Binary AbreDataSetReportes(string SQL, TParametrosF Parametros);

        void ActualizaHistorial(TConsumo Consumo);

        bool AfectarMovimientos(TMovimiento Movimiento);

        bool AfectarSaldoDocumento(TSaldoDocumento SaldoDocumento);

        string AfiliacionBancaria(int EstacionID);

        void AgregaReferencia(int VehiculoID, int Tipo, string Referencia);

        bool AgregaSecuencias(TConsumo[] Consumos);

        bool AsignaFechaCierre(System.DateTime Fecha);

        TTarjeta AutorizaTarjeta(TAutoriza Autoriza);

        TBancaria Bancaria(string Params, int Banco);

        bool BuscaAutorizacionTajeta(int ClienteID, int VehiculoID, int GasolineroID);

        bool BuscaReferenciaServicio(string Referencia);

        TReporteF BuscarReporte(string Nombre);

        bool CambiaClienteConsumo(int EstacionID, int Ticket, string Serie, int ClienteID, int VehiculoID);

        bool CambiaNIP(string Referencia, int NIP);

        string CambioFactura(string Serie, int Folio, string NevaSerie, int NuevoFolio, System.DateTime FechaImpresion);

        bool CancelaGrupo(int Grupo);

        string CancelarCupones(string Lista, int UsuarioID);

        string CancelarLote(int LoteID, int UsuarioID);

        string CaracteresCupon();

        TBancaria CashBack(string Params);

        bool CierrePeriodo(int Periodo, int Ejercicio, int UsuarioID);

        double Clasificacion();

        void ClasificacionCliente(int ClienteID, double Clasificacion);

        void ClasificacionVehiculo(int VehiculoID, double Clasificacion);

        int ClaveACupon(string Clave);

        TCuponValido CuponManual(int EstacionID, int TurnoID, int BombaID, string Barras);

        //TCliente DatosCliente(int ClienteID);

        TDatosClienteOtros DatosClienteOtros(string Tarjeta, int EstacionID);

        bool DatosFactura(int Folio, string Serie);

        TProductoF DatosProducto(int ID);

        TDatosServicio DatosServicio(int ServicioID, string Referencia);

        TDatosVehiculo DatosVehiculo(int VehiculoID);

        TDatosVerifica DatosVerifica(int VehiculoID);

        TDatosVerifica DatosVerificaReferencia(string Referencia);

        TDatosVerifoneF DatosVerifone(int VehiculoID, string Referencia);

        TDocumentosConSaldo[] DocumentosConSaldo(int ClienteID);

        void EliminaAutorizacion(int AutorizacionID);

        bool EliminaAutorizacionVehiculo(int ClienteID, int VehiculoID, int GasolineroID);

        bool EliminaFactura(int Folio, string Serie);

        string EliminaRecibo(int ReciboID, int UsuarioID);

        void EliminaReferencia(int VehiculoID, int Tipo);

        void EliminaVehiculoProducto(int VehiculoID, int ProductoID);

        TDatosFacturaEF FacturaElectronica(string Serie, int Folio, bool ConIEPS);

        int FacturaRecibo(int Cliente, double Importe, int EstacionID, int EmpleadoID, string SerieFactura, int ProductoID, double Precio, int ReciboID, System.DateTime FechaFactura);

        System.DateTime Fecha();

        System.DateTime FechaCierre();

        bool FechaValida(System.DateTime Fecha);

        int Folio(string Campo, string Serie);

        int GasolineroID();

        string GasolineroNombre();

        int GeneraCupones(int LoteCuponID, int ClienteID, int EstacionID, int Identificador, TGeneraCupon[] Cupones, int ProductoID, int EmpleadoID, string Serie);

        int GeneraFacturasXCliente(int ClienteID, string Productos, System.DateTime FechaCorte, System.DateTime FechaContable, string Serie, int aFolio, int EmpleadoID);

        TFoliosGenerados GeneraFacturasxConsumo(string Serie, int EmpleadoID, int EstacionID, int[] Consumos, System.DateTime FechaFactura);

        TFoliosGenerados GeneraFacturasxConsumo2(string Serie, int EmpleadoID, int EstacionID, int[] Consumos, System.DateTime FechaFactura, string Observaciones, double Descuento);

        TFoliosGenerados GenerarFacturas(string Serie, System.DateTime FechaCorte, System.DateTime FechaFactura, int DiaFacturar, int Productos, int EmpleadoID, int EstacionID);

        void GuardaAccesos(int UsuarioID, string Lista);

        bool GuardaAutorizacion(TAutoriza Autorizacion);

        void GuardaDatosFactura(TDatosFactura DatosFactura);

        bool GuardarConsumo(TConsumo Consumo);

        bool GuardaRecibo(TRecibo Recibo);

        double[] ImportesTiempoAire(int ProveedorID);

        bool InsertaBitacora(int ClienteID, int UsuarioID, string Tabla, string Campo, string ValorAnterior, string ValorNuevo);

        double IVAEstacion(int EstacionID);

        TLoginInfoF Login(string Usuario, string Clave);

        string ModificarFolioActual(string Campo, string Serie, int FolioNew);

        TCuponValido ObtenCuponValido(string Barras, int Grupo, TAutoriza Autoriza);

        TDatosServicio PagoServicio(int ServicioID, TDatosServicio Datos);

        double PrecioProducto(int ProductoID);

        bool QuemarCupon(TConsumo Consumo, string Barras);

        TAutorizacion[] REDAutorizaciones(int EstacionID, int BombaID);

        TDatosTicketConsumo REDConsumo(int EstacionID, string Serie, int TicketID, int AutorizacionID, double Importe, int ProductoID);

        string ReferenciaTarjeta(int VehiculoID);

        double Rendimiento(int EstacionID, int TicketID);

        string SaldoVehiculo(string Referencia, int EstacionID);

        string Series(string Campo);

        string StatusCupon(string Codigo);

        bool TarjetaConsumo(string Tarjeta, TConsumo Consumo);

        TTarjetaLLave[] TarjetasLLave();

        TTiempoAire TiempoAire(int EstacionID, int BombaID, string Telefono, int ProveedorID, double Importe, int CajaID, string LLave, int TurnoID);

        int ValidaConsumo(TConsumo Consumo);

        string ValidaSecuencias(int EstacionID, string Secuencias);

        void VehiculoProducto(int VehiculoID, int ProductoID);

        TWebFacturaF WebFactura(string Serie, int Folio, string Campo);

        bool CambiaKilometraje(TCambiaDatosConsumo Datos);

        string MailCliente(int ClienteID, int Tipo);

        bool AgregarIButton(string iButton, string Referencia);

        string iButtonToReferencia(string iButton);

        string ReferenciaToIButton(string Referencia);

        bool EnviaMail(string Serie, int Folio);

        void EliminaAutorizacionReferencia(string Referencia);

        string FormatoFacturaWEB(string Serie, int Folio);

        TNotaCredito NotaCredito(string ASerie, int AFolio, string ASerieNota, double AImporte, int AUsuarioID);

        double TotalNotaCreditoEnFactura(string Serie, int Folio);

        string PuedeEliminarFactura(string Serie, int Folio, System.DateTime Fecha);

        TObservaFactura ConsultaObservacionesFactura(string Serie, int Folio);

        bool GuardaObservacionesFactura(string Serie, int Folio, string Observaciones);

        void KFleet();

        TSaldoVehiculoPlus SaldoVehiculoPlus(string Referencia, int EstacionID);

        bool SincronizaAlbum(TSincronizaAlbum Datos);

        string GuardaFotoVehiculo(string Referencia, RemObjects.SDK.Types.Binary Foto);

        TValidaQREmpadronar ValidaQREmpadronar(string Referencia);

        bool CambiaDigitoSeguridadVehiculo(int VehiculoID, int DigitoSeguridad);
    }

    public partial class ServiceFlotillas_Proxy : RemObjects.DataAbstract.Server.DataAbstractService_Proxy, IServiceFlotillas
    {

        public ServiceFlotillas_Proxy(RemObjects.SDK.IMessage message, RemObjects.SDK.IClientChannel clientChannel) :
                base(message, clientChannel)
        {
        }

        public ServiceFlotillas_Proxy(RemObjects.SDK.IMessage message, RemObjects.SDK.IClientChannel clientChannel, string interfaceName) :
                base(message, clientChannel, interfaceName)
        {
        }

        public ServiceFlotillas_Proxy(RemObjects.SDK.IRemoteService remoteService) :
                base(remoteService)
        {
        }

        public ServiceFlotillas_Proxy(RemObjects.SDK.IRemoteService remoteService, string interfaceName) :
                base(remoteService, interfaceName)
        {
        }

        public ServiceFlotillas_Proxy(System.Uri uri) :
                base(uri)
        {
        }

        public ServiceFlotillas_Proxy(string url) :
                base(url)
        {
        }

        public override string InterfaceName
        {
            get
            {
                return "ServiceFlotillas";
            }
        }

        public virtual RemObjects.SDK.Types.Binary AbreDataSetReportes(string SQL, TParametrosF Parametros)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "AbreDataSetReportes");
                @__LocalMessage.WriteAnsiString("SQL", SQL);
                @__LocalMessage.Write("Parametros", Parametros, typeof(TParametrosF), RemObjects.SDK.StreamingFormat.Default);
                @__LocalMessage.FinalizeMessage();
                ClientChannel.Dispatch(@__LocalMessage);
                RemObjects.SDK.Types.Binary _Result = ((RemObjects.SDK.Types.Binary)(@__LocalMessage.Read("Result", typeof(RemObjects.SDK.Types.Binary), RemObjects.SDK.StreamingFormat.Default)));
                return _Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual void ActualizaHistorial(TConsumo Consumo)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "ActualizaHistorial");
                @__LocalMessage.Write("Consumo", Consumo, typeof(TConsumo), RemObjects.SDK.StreamingFormat.Default);
                @__LocalMessage.FinalizeMessage();
                ClientChannel.Dispatch(@__LocalMessage);
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual bool AfectarMovimientos(TMovimiento Movimiento)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "AfectarMovimientos");
                @__LocalMessage.Write("Movimiento", Movimiento, typeof(TMovimiento), RemObjects.SDK.StreamingFormat.Default);
                @__LocalMessage.FinalizeMessage();
                ClientChannel.Dispatch(@__LocalMessage);
                bool _Result = @__LocalMessage.ReadBoolean("Result");
                return _Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual bool AfectarSaldoDocumento(TSaldoDocumento SaldoDocumento)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "AfectarSaldoDocumento");
                @__LocalMessage.Write("SaldoDocumento", SaldoDocumento, typeof(TSaldoDocumento), RemObjects.SDK.StreamingFormat.Default);
                @__LocalMessage.FinalizeMessage();
                ClientChannel.Dispatch(@__LocalMessage);
                bool _Result = @__LocalMessage.ReadBoolean("Result");
                return _Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual string AfiliacionBancaria(int EstacionID)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "AfiliacionBancaria");
                @__LocalMessage.WriteInt32("EstacionID", EstacionID);
                @__LocalMessage.FinalizeMessage();
                ClientChannel.Dispatch(@__LocalMessage);
                string _Result = @__LocalMessage.ReadAnsiString("Result");
                return _Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual void AgregaReferencia(int VehiculoID, int Tipo, string Referencia)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "AgregaReferencia");
                @__LocalMessage.WriteInt32("VehiculoID", VehiculoID);
                @__LocalMessage.WriteInt32("Tipo", Tipo);
                @__LocalMessage.WriteAnsiString("Referencia", Referencia);
                @__LocalMessage.FinalizeMessage();
                ClientChannel.Dispatch(@__LocalMessage);
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual bool AgregaSecuencias(TConsumo[] Consumos)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "AgregaSecuencias");
                @__LocalMessage.Write("Consumos", Consumos, typeof(TConsumo[]), RemObjects.SDK.StreamingFormat.Default);
                @__LocalMessage.FinalizeMessage();
                ClientChannel.Dispatch(@__LocalMessage);
                bool _Result = @__LocalMessage.ReadBoolean("Result");
                return _Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual bool AsignaFechaCierre(System.DateTime Fecha)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "AsignaFechaCierre");
                @__LocalMessage.WriteDateTime("Fecha", Fecha);
                @__LocalMessage.FinalizeMessage();
                ClientChannel.Dispatch(@__LocalMessage);
                bool _Result = @__LocalMessage.ReadBoolean("Result");
                return _Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual TTarjeta AutorizaTarjeta(TAutoriza Autoriza)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "AutorizaTarjeta");
                @__LocalMessage.Write("Autoriza", Autoriza, typeof(TAutoriza), RemObjects.SDK.StreamingFormat.Default);
                @__LocalMessage.FinalizeMessage();
                ClientChannel.Dispatch(@__LocalMessage);
                TTarjeta _Result = ((TTarjeta)(@__LocalMessage.Read("Result", typeof(TTarjeta), RemObjects.SDK.StreamingFormat.Default)));
                return _Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual TBancaria Bancaria(string Params, int Banco)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "Bancaria");
                @__LocalMessage.WriteAnsiString("Params", Params);
                @__LocalMessage.WriteInt32("Banco", Banco);
                @__LocalMessage.FinalizeMessage();
                ClientChannel.Dispatch(@__LocalMessage);
                TBancaria _Result = ((TBancaria)(@__LocalMessage.Read("Result", typeof(TBancaria), RemObjects.SDK.StreamingFormat.Default)));
                return _Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual bool BuscaAutorizacionTajeta(int ClienteID, int VehiculoID, int GasolineroID)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "BuscaAutorizacionTajeta");
                @__LocalMessage.WriteInt32("ClienteID", ClienteID);
                @__LocalMessage.WriteInt32("VehiculoID", VehiculoID);
                @__LocalMessage.WriteInt32("GasolineroID", GasolineroID);
                @__LocalMessage.FinalizeMessage();
                ClientChannel.Dispatch(@__LocalMessage);
                bool _Result = @__LocalMessage.ReadBoolean("Result");
                return _Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual bool BuscaReferenciaServicio(string Referencia)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "BuscaReferenciaServicio");
                @__LocalMessage.WriteAnsiString("Referencia", Referencia);
                @__LocalMessage.FinalizeMessage();
                ClientChannel.Dispatch(@__LocalMessage);
                bool _Result = @__LocalMessage.ReadBoolean("Result");
                return _Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual TReporteF BuscarReporte(string Nombre)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "BuscarReporte");
                @__LocalMessage.WriteAnsiString("Nombre", Nombre);
                @__LocalMessage.FinalizeMessage();
                ClientChannel.Dispatch(@__LocalMessage);
                TReporteF _Result = ((TReporteF)(@__LocalMessage.Read("Result", typeof(TReporteF), RemObjects.SDK.StreamingFormat.Default)));
                return _Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual bool CambiaClienteConsumo(int EstacionID, int Ticket, string Serie, int ClienteID, int VehiculoID)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "CambiaClienteConsumo");
                @__LocalMessage.WriteInt32("EstacionID", EstacionID);
                @__LocalMessage.WriteInt32("Ticket", Ticket);
                @__LocalMessage.WriteAnsiString("Serie", Serie);
                @__LocalMessage.WriteInt32("ClienteID", ClienteID);
                @__LocalMessage.WriteInt32("VehiculoID", VehiculoID);
                @__LocalMessage.FinalizeMessage();
                ClientChannel.Dispatch(@__LocalMessage);
                bool _Result = @__LocalMessage.ReadBoolean("Result");
                return _Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual bool CambiaNIP(string Referencia, int NIP)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "CambiaNIP");
                @__LocalMessage.WriteAnsiString("Referencia", Referencia);
                @__LocalMessage.WriteInt32("NIP", NIP);
                @__LocalMessage.FinalizeMessage();
                ClientChannel.Dispatch(@__LocalMessage);
                bool _Result = @__LocalMessage.ReadBoolean("Result");
                return _Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual string CambioFactura(string Serie, int Folio, string NevaSerie, int NuevoFolio, System.DateTime FechaImpresion)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "CambioFactura");
                @__LocalMessage.WriteAnsiString("Serie", Serie);
                @__LocalMessage.WriteInt32("Folio", Folio);
                @__LocalMessage.WriteAnsiString("NevaSerie", NevaSerie);
                @__LocalMessage.WriteInt32("NuevoFolio", NuevoFolio);
                @__LocalMessage.WriteDateTime("FechaImpresion", FechaImpresion);
                @__LocalMessage.FinalizeMessage();
                ClientChannel.Dispatch(@__LocalMessage);
                string _Result = @__LocalMessage.ReadAnsiString("Result");
                return _Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual bool CancelaGrupo(int Grupo)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "CancelaGrupo");
                @__LocalMessage.WriteInt32("Grupo", Grupo);
                @__LocalMessage.FinalizeMessage();
                ClientChannel.Dispatch(@__LocalMessage);
                bool _Result = @__LocalMessage.ReadBoolean("Result");
                return _Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual string CancelarCupones(string Lista, int UsuarioID)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "CancelarCupones");
                @__LocalMessage.WriteAnsiString("Lista", Lista);
                @__LocalMessage.WriteInt32("UsuarioID", UsuarioID);
                @__LocalMessage.FinalizeMessage();
                ClientChannel.Dispatch(@__LocalMessage);
                string _Result = @__LocalMessage.ReadAnsiString("Result");
                return _Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual string CancelarLote(int LoteID, int UsuarioID)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "CancelarLote");
                @__LocalMessage.WriteInt32("LoteID", LoteID);
                @__LocalMessage.WriteInt32("UsuarioID", UsuarioID);
                @__LocalMessage.FinalizeMessage();
                ClientChannel.Dispatch(@__LocalMessage);
                string _Result = @__LocalMessage.ReadAnsiString("Result");
                return _Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual string CaracteresCupon()
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "CaracteresCupon");
                @__LocalMessage.FinalizeMessage();
                ClientChannel.Dispatch(@__LocalMessage);
                string _Result = @__LocalMessage.ReadAnsiString("Result");
                return _Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual TBancaria CashBack(string Params)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "CashBack");
                @__LocalMessage.WriteAnsiString("Params", Params);
                @__LocalMessage.FinalizeMessage();
                ClientChannel.Dispatch(@__LocalMessage);
                TBancaria _Result = ((TBancaria)(@__LocalMessage.Read("Result", typeof(TBancaria), RemObjects.SDK.StreamingFormat.Default)));
                return _Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual bool CierrePeriodo(int Periodo, int Ejercicio, int UsuarioID)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "CierrePeriodo");
                @__LocalMessage.WriteInt32("Periodo", Periodo);
                @__LocalMessage.WriteInt32("Ejercicio", Ejercicio);
                @__LocalMessage.WriteInt32("UsuarioID", UsuarioID);
                @__LocalMessage.FinalizeMessage();
                ClientChannel.Dispatch(@__LocalMessage);
                bool _Result = @__LocalMessage.ReadBoolean("Result");
                return _Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual double Clasificacion()
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "Clasificacion");
                @__LocalMessage.FinalizeMessage();
                ClientChannel.Dispatch(@__LocalMessage);
                double _Result = @__LocalMessage.ReadDouble("Result");
                return _Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual void ClasificacionCliente(int ClienteID, double Clasificacion)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "ClasificacionCliente");
                @__LocalMessage.WriteInt32("ClienteID", ClienteID);
                @__LocalMessage.WriteDouble("Clasificacion", Clasificacion);
                @__LocalMessage.FinalizeMessage();
                ClientChannel.Dispatch(@__LocalMessage);
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual void ClasificacionVehiculo(int VehiculoID, double Clasificacion)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "ClasificacionVehiculo");
                @__LocalMessage.WriteInt32("VehiculoID", VehiculoID);
                @__LocalMessage.WriteDouble("Clasificacion", Clasificacion);
                @__LocalMessage.FinalizeMessage();
                ClientChannel.Dispatch(@__LocalMessage);
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual int ClaveACupon(string Clave)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "ClaveACupon");
                @__LocalMessage.WriteAnsiString("Clave", Clave);
                @__LocalMessage.FinalizeMessage();
                ClientChannel.Dispatch(@__LocalMessage);
                int _Result = @__LocalMessage.ReadInt32("Result");
                return _Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual TCuponValido CuponManual(int EstacionID, int TurnoID, int BombaID, string Barras)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "CuponManual");
                @__LocalMessage.WriteInt32("EstacionID", EstacionID);
                @__LocalMessage.WriteInt32("TurnoID", TurnoID);
                @__LocalMessage.WriteInt32("BombaID", BombaID);
                @__LocalMessage.WriteAnsiString("Barras", Barras);
                @__LocalMessage.FinalizeMessage();
                ClientChannel.Dispatch(@__LocalMessage);
                TCuponValido _Result = ((TCuponValido)(@__LocalMessage.Read("Result", typeof(TCuponValido), RemObjects.SDK.StreamingFormat.Default)));
                return _Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        /*
        public virtual TCliente DatosCliente(int ClienteID)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "DatosCliente");
                @__LocalMessage.WriteInt32("ClienteID", ClienteID);
                @__LocalMessage.FinalizeMessage();
                ClientChannel.Dispatch(@__LocalMessage);
                TCliente _Result = ((TCliente)(@__LocalMessage.Read("Result", typeof(TCliente), RemObjects.SDK.StreamingFormat.Default)));
                return _Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }
        */
        public virtual TDatosClienteOtros DatosClienteOtros(string Tarjeta, int EstacionID)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "DatosClienteOtros");
                @__LocalMessage.WriteAnsiString("Tarjeta", Tarjeta);
                @__LocalMessage.WriteInt32("EstacionID", EstacionID);
                @__LocalMessage.FinalizeMessage();
                ClientChannel.Dispatch(@__LocalMessage);
                TDatosClienteOtros _Result = ((TDatosClienteOtros)(@__LocalMessage.Read("Result", typeof(TDatosClienteOtros), RemObjects.SDK.StreamingFormat.Default)));
                return _Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual bool DatosFactura(int Folio, string Serie)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "DatosFactura");
                @__LocalMessage.WriteInt32("Folio", Folio);
                @__LocalMessage.WriteAnsiString("Serie", Serie);
                @__LocalMessage.FinalizeMessage();
                ClientChannel.Dispatch(@__LocalMessage);
                bool _Result = @__LocalMessage.ReadBoolean("Result");
                return _Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual TProductoF DatosProducto(int ID)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "DatosProducto");
                @__LocalMessage.WriteInt32("ID", ID);
                @__LocalMessage.FinalizeMessage();
                ClientChannel.Dispatch(@__LocalMessage);
                TProductoF _Result = ((TProductoF)(@__LocalMessage.Read("Result", typeof(TProductoF), RemObjects.SDK.StreamingFormat.Default)));
                return _Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual TDatosServicio DatosServicio(int ServicioID, string Referencia)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "DatosServicio");
                @__LocalMessage.WriteInt32("ServicioID", ServicioID);
                @__LocalMessage.WriteAnsiString("Referencia", Referencia);
                @__LocalMessage.FinalizeMessage();
                ClientChannel.Dispatch(@__LocalMessage);
                TDatosServicio _Result = ((TDatosServicio)(@__LocalMessage.Read("Result", typeof(TDatosServicio), RemObjects.SDK.StreamingFormat.Default)));
                return _Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual TDatosVehiculo DatosVehiculo(int VehiculoID)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "DatosVehiculo");
                @__LocalMessage.WriteInt32("VehiculoID", VehiculoID);
                @__LocalMessage.FinalizeMessage();
                ClientChannel.Dispatch(@__LocalMessage);
                TDatosVehiculo _Result = ((TDatosVehiculo)(@__LocalMessage.Read("Result", typeof(TDatosVehiculo), RemObjects.SDK.StreamingFormat.Default)));
                return _Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual TDatosVerifica DatosVerifica(int VehiculoID)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "DatosVerifica");
                @__LocalMessage.WriteInt32("VehiculoID", VehiculoID);
                @__LocalMessage.FinalizeMessage();
                ClientChannel.Dispatch(@__LocalMessage);
                TDatosVerifica _Result = ((TDatosVerifica)(@__LocalMessage.Read("Result", typeof(TDatosVerifica), RemObjects.SDK.StreamingFormat.Default)));
                return _Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual TDatosVerifica DatosVerificaReferencia(string Referencia)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "DatosVerificaReferencia");
                @__LocalMessage.WriteAnsiString("Referencia", Referencia);
                @__LocalMessage.FinalizeMessage();
                ClientChannel.Dispatch(@__LocalMessage);
                TDatosVerifica _Result = ((TDatosVerifica)(@__LocalMessage.Read("Result", typeof(TDatosVerifica), RemObjects.SDK.StreamingFormat.Default)));
                return _Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual TDatosVerifoneF DatosVerifone(int VehiculoID, string Referencia)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "DatosVerifone");
                @__LocalMessage.WriteInt32("VehiculoID", VehiculoID);
                @__LocalMessage.WriteAnsiString("Referencia", Referencia);
                @__LocalMessage.FinalizeMessage();
                ClientChannel.Dispatch(@__LocalMessage);
                TDatosVerifoneF _Result = ((TDatosVerifoneF)(@__LocalMessage.Read("Result", typeof(TDatosVerifoneF), RemObjects.SDK.StreamingFormat.Default)));
                return _Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual TDocumentosConSaldo[] DocumentosConSaldo(int ClienteID)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "DocumentosConSaldo");
                @__LocalMessage.WriteInt32("ClienteID", ClienteID);
                @__LocalMessage.FinalizeMessage();
                ClientChannel.Dispatch(@__LocalMessage);
                TDocumentosConSaldo[] _Result = ((TDocumentosConSaldo[])(@__LocalMessage.Read("Result", typeof(TDocumentosConSaldo[]), RemObjects.SDK.StreamingFormat.Default)));
                return _Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual void EliminaAutorizacion(int AutorizacionID)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "EliminaAutorizacion");
                @__LocalMessage.WriteInt32("AutorizacionID", AutorizacionID);
                @__LocalMessage.FinalizeMessage();
                ClientChannel.Dispatch(@__LocalMessage);
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual bool EliminaAutorizacionVehiculo(int ClienteID, int VehiculoID, int GasolineroID)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "EliminaAutorizacionVehiculo");
                @__LocalMessage.WriteInt32("ClienteID", ClienteID);
                @__LocalMessage.WriteInt32("VehiculoID", VehiculoID);
                @__LocalMessage.WriteInt32("GasolineroID", GasolineroID);
                @__LocalMessage.FinalizeMessage();
                ClientChannel.Dispatch(@__LocalMessage);
                bool _Result = @__LocalMessage.ReadBoolean("Result");
                return _Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual bool EliminaFactura(int Folio, string Serie)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "EliminaFactura");
                @__LocalMessage.WriteInt32("Folio", Folio);
                @__LocalMessage.WriteAnsiString("Serie", Serie);
                @__LocalMessage.FinalizeMessage();
                ClientChannel.Dispatch(@__LocalMessage);
                bool _Result = @__LocalMessage.ReadBoolean("Result");
                return _Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual string EliminaRecibo(int ReciboID, int UsuarioID)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "EliminaRecibo");
                @__LocalMessage.WriteInt32("ReciboID", ReciboID);
                @__LocalMessage.WriteInt32("UsuarioID", UsuarioID);
                @__LocalMessage.FinalizeMessage();
                ClientChannel.Dispatch(@__LocalMessage);
                string _Result = @__LocalMessage.ReadAnsiString("Result");
                return _Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual void EliminaReferencia(int VehiculoID, int Tipo)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "EliminaReferencia");
                @__LocalMessage.WriteInt32("VehiculoID", VehiculoID);
                @__LocalMessage.WriteInt32("Tipo", Tipo);
                @__LocalMessage.FinalizeMessage();
                ClientChannel.Dispatch(@__LocalMessage);
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual void EliminaVehiculoProducto(int VehiculoID, int ProductoID)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "EliminaVehiculoProducto");
                @__LocalMessage.WriteInt32("VehiculoID", VehiculoID);
                @__LocalMessage.WriteInt32("ProductoID", ProductoID);
                @__LocalMessage.FinalizeMessage();
                ClientChannel.Dispatch(@__LocalMessage);
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual TDatosFacturaEF FacturaElectronica(string Serie, int Folio, bool ConIEPS)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "FacturaElectronica");
                @__LocalMessage.WriteAnsiString("Serie", Serie);
                @__LocalMessage.WriteInt32("Folio", Folio);
                @__LocalMessage.WriteBoolean("ConIEPS", ConIEPS);
                @__LocalMessage.FinalizeMessage();
                ClientChannel.Dispatch(@__LocalMessage);
                TDatosFacturaEF _Result = ((TDatosFacturaEF)(@__LocalMessage.Read("Result", typeof(TDatosFacturaEF), RemObjects.SDK.StreamingFormat.Default)));
                return _Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual int FacturaRecibo(int Cliente, double Importe, int EstacionID, int EmpleadoID, string SerieFactura, int ProductoID, double Precio, int ReciboID, System.DateTime FechaFactura)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "FacturaRecibo");
                @__LocalMessage.WriteInt32("Cliente", Cliente);
                @__LocalMessage.WriteDouble("Importe", Importe);
                @__LocalMessage.WriteInt32("EstacionID", EstacionID);
                @__LocalMessage.WriteInt32("EmpleadoID", EmpleadoID);
                @__LocalMessage.WriteAnsiString("SerieFactura", SerieFactura);
                @__LocalMessage.WriteInt32("ProductoID", ProductoID);
                @__LocalMessage.WriteDouble("Precio", Precio);
                @__LocalMessage.WriteInt32("ReciboID", ReciboID);
                @__LocalMessage.WriteDateTime("FechaFactura", FechaFactura);
                @__LocalMessage.FinalizeMessage();
                ClientChannel.Dispatch(@__LocalMessage);
                int _Result = @__LocalMessage.ReadInt32("Result");
                return _Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual System.DateTime Fecha()
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "Fecha");
                @__LocalMessage.FinalizeMessage();
                ClientChannel.Dispatch(@__LocalMessage);
                System.DateTime _Result = @__LocalMessage.ReadDateTime("Result");
                return _Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual System.DateTime FechaCierre()
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "FechaCierre");
                @__LocalMessage.FinalizeMessage();
                ClientChannel.Dispatch(@__LocalMessage);
                System.DateTime _Result = @__LocalMessage.ReadDateTime("Result");
                return _Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual bool FechaValida(System.DateTime Fecha)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "FechaValida");
                @__LocalMessage.WriteDateTime("Fecha", Fecha);
                @__LocalMessage.FinalizeMessage();
                ClientChannel.Dispatch(@__LocalMessage);
                bool _Result = @__LocalMessage.ReadBoolean("Result");
                return _Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual int Folio(string Campo, string Serie)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "Folio");
                @__LocalMessage.WriteAnsiString("Campo", Campo);
                @__LocalMessage.WriteAnsiString("Serie", Serie);
                @__LocalMessage.FinalizeMessage();
                ClientChannel.Dispatch(@__LocalMessage);
                int _Result = @__LocalMessage.ReadInt32("Result");
                return _Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual int GasolineroID()
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "GasolineroID");
                @__LocalMessage.FinalizeMessage();
                ClientChannel.Dispatch(@__LocalMessage);
                int _Result = @__LocalMessage.ReadInt32("Result");
                return _Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual string GasolineroNombre()
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "GasolineroNombre");
                @__LocalMessage.FinalizeMessage();
                ClientChannel.Dispatch(@__LocalMessage);
                string _Result = @__LocalMessage.ReadAnsiString("Result");
                return _Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual int GeneraCupones(int LoteCuponID, int ClienteID, int EstacionID, int Identificador, TGeneraCupon[] Cupones, int ProductoID, int EmpleadoID, string Serie)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "GeneraCupones");
                @__LocalMessage.WriteInt32("LoteCuponID", LoteCuponID);
                @__LocalMessage.WriteInt32("ClienteID", ClienteID);
                @__LocalMessage.WriteInt32("EstacionID", EstacionID);
                @__LocalMessage.WriteInt32("Identificador", Identificador);
                @__LocalMessage.Write("Cupones", Cupones, typeof(TGeneraCupon[]), RemObjects.SDK.StreamingFormat.Default);
                @__LocalMessage.WriteInt32("ProductoID", ProductoID);
                @__LocalMessage.WriteInt32("EmpleadoID", EmpleadoID);
                @__LocalMessage.WriteAnsiString("Serie", Serie);
                @__LocalMessage.FinalizeMessage();
                ClientChannel.Dispatch(@__LocalMessage);
                int _Result = @__LocalMessage.ReadInt32("Result");
                return _Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual int GeneraFacturasXCliente(int ClienteID, string Productos, System.DateTime FechaCorte, System.DateTime FechaContable, string Serie, int aFolio, int EmpleadoID)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "GeneraFacturasXCliente");
                @__LocalMessage.WriteInt32("ClienteID", ClienteID);
                @__LocalMessage.WriteAnsiString("Productos", Productos);
                @__LocalMessage.WriteDateTime("FechaCorte", FechaCorte);
                @__LocalMessage.WriteDateTime("FechaContable", FechaContable);
                @__LocalMessage.WriteAnsiString("Serie", Serie);
                @__LocalMessage.WriteInt32("aFolio", aFolio);
                @__LocalMessage.WriteInt32("EmpleadoID", EmpleadoID);
                @__LocalMessage.FinalizeMessage();
                ClientChannel.Dispatch(@__LocalMessage);
                int _Result = @__LocalMessage.ReadInt32("Result");
                return _Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual TFoliosGenerados GeneraFacturasxConsumo(string Serie, int EmpleadoID, int EstacionID, int[] Consumos, System.DateTime FechaFactura)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "GeneraFacturasxConsumo");
                @__LocalMessage.WriteAnsiString("Serie", Serie);
                @__LocalMessage.WriteInt32("EmpleadoID", EmpleadoID);
                @__LocalMessage.WriteInt32("EstacionID", EstacionID);
                @__LocalMessage.Write("Consumos", Consumos, typeof(int[]), RemObjects.SDK.StreamingFormat.Default);
                @__LocalMessage.WriteDateTime("FechaFactura", FechaFactura);
                @__LocalMessage.FinalizeMessage();
                ClientChannel.Dispatch(@__LocalMessage);
                TFoliosGenerados _Result = ((TFoliosGenerados)(@__LocalMessage.Read("Result", typeof(TFoliosGenerados), RemObjects.SDK.StreamingFormat.Default)));
                return _Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual TFoliosGenerados GeneraFacturasxConsumo2(string Serie, int EmpleadoID, int EstacionID, int[] Consumos, System.DateTime FechaFactura, string Observaciones, double Descuento)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "GeneraFacturasxConsumo2");
                @__LocalMessage.WriteAnsiString("Serie", Serie);
                @__LocalMessage.WriteInt32("EmpleadoID", EmpleadoID);
                @__LocalMessage.WriteInt32("EstacionID", EstacionID);
                @__LocalMessage.Write("Consumos", Consumos, typeof(int[]), RemObjects.SDK.StreamingFormat.Default);
                @__LocalMessage.WriteDateTime("FechaFactura", FechaFactura);
                @__LocalMessage.WriteAnsiString("Observaciones", Observaciones);
                @__LocalMessage.WriteDouble("Descuento", Descuento);
                @__LocalMessage.FinalizeMessage();
                ClientChannel.Dispatch(@__LocalMessage);
                TFoliosGenerados _Result = ((TFoliosGenerados)(@__LocalMessage.Read("Result", typeof(TFoliosGenerados), RemObjects.SDK.StreamingFormat.Default)));
                return _Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual TFoliosGenerados GenerarFacturas(string Serie, System.DateTime FechaCorte, System.DateTime FechaFactura, int DiaFacturar, int Productos, int EmpleadoID, int EstacionID)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "GenerarFacturas");
                @__LocalMessage.WriteAnsiString("Serie", Serie);
                @__LocalMessage.WriteDateTime("FechaCorte", FechaCorte);
                @__LocalMessage.WriteDateTime("FechaFactura", FechaFactura);
                @__LocalMessage.WriteInt32("DiaFacturar", DiaFacturar);
                @__LocalMessage.WriteInt32("Productos", Productos);
                @__LocalMessage.WriteInt32("EmpleadoID", EmpleadoID);
                @__LocalMessage.WriteInt32("EstacionID", EstacionID);
                @__LocalMessage.FinalizeMessage();
                ClientChannel.Dispatch(@__LocalMessage);
                TFoliosGenerados _Result = ((TFoliosGenerados)(@__LocalMessage.Read("Result", typeof(TFoliosGenerados), RemObjects.SDK.StreamingFormat.Default)));
                return _Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual void GuardaAccesos(int UsuarioID, string Lista)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "GuardaAccesos");
                @__LocalMessage.WriteInt32("UsuarioID", UsuarioID);
                @__LocalMessage.WriteAnsiString("Lista", Lista);
                @__LocalMessage.FinalizeMessage();
                ClientChannel.Dispatch(@__LocalMessage);
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual bool GuardaAutorizacion(TAutoriza Autorizacion)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "GuardaAutorizacion");
                @__LocalMessage.Write("Autorizacion", Autorizacion, typeof(TAutoriza), RemObjects.SDK.StreamingFormat.Default);
                @__LocalMessage.FinalizeMessage();
                ClientChannel.Dispatch(@__LocalMessage);
                bool _Result = @__LocalMessage.ReadBoolean("Result");
                return _Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual void GuardaDatosFactura(TDatosFactura DatosFactura)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "GuardaDatosFactura");
                @__LocalMessage.Write("DatosFactura", DatosFactura, typeof(TDatosFactura), RemObjects.SDK.StreamingFormat.Default);
                @__LocalMessage.FinalizeMessage();
                ClientChannel.Dispatch(@__LocalMessage);
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual bool GuardarConsumo(TConsumo Consumo)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "GuardarConsumo");
                @__LocalMessage.Write("Consumo", Consumo, typeof(TConsumo), RemObjects.SDK.StreamingFormat.Default);
                @__LocalMessage.FinalizeMessage();
                ClientChannel.Dispatch(@__LocalMessage);
                bool _Result = @__LocalMessage.ReadBoolean("Result");
                return _Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual bool GuardaRecibo(TRecibo Recibo)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "GuardaRecibo");
                @__LocalMessage.Write("Recibo", Recibo, typeof(TRecibo), RemObjects.SDK.StreamingFormat.Default);
                @__LocalMessage.FinalizeMessage();
                ClientChannel.Dispatch(@__LocalMessage);
                bool _Result = @__LocalMessage.ReadBoolean("Result");
                return _Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual double[] ImportesTiempoAire(int ProveedorID)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "ImportesTiempoAire");
                @__LocalMessage.WriteInt32("ProveedorID", ProveedorID);
                @__LocalMessage.FinalizeMessage();
                ClientChannel.Dispatch(@__LocalMessage);
                double[] _Result = ((double[])(@__LocalMessage.Read("Result", typeof(double[]), RemObjects.SDK.StreamingFormat.Default)));
                return _Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual bool InsertaBitacora(int ClienteID, int UsuarioID, string Tabla, string Campo, string ValorAnterior, string ValorNuevo)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "InsertaBitacora");
                @__LocalMessage.WriteInt32("ClienteID", ClienteID);
                @__LocalMessage.WriteInt32("UsuarioID", UsuarioID);
                @__LocalMessage.WriteAnsiString("Tabla", Tabla);
                @__LocalMessage.WriteAnsiString("Campo", Campo);
                @__LocalMessage.WriteAnsiString("ValorAnterior", ValorAnterior);
                @__LocalMessage.WriteAnsiString("ValorNuevo", ValorNuevo);
                @__LocalMessage.FinalizeMessage();
                ClientChannel.Dispatch(@__LocalMessage);
                bool _Result = @__LocalMessage.ReadBoolean("Result");
                return _Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual double IVAEstacion(int EstacionID)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "IVAEstacion");
                @__LocalMessage.WriteInt32("EstacionID", EstacionID);
                @__LocalMessage.FinalizeMessage();
                ClientChannel.Dispatch(@__LocalMessage);
                double _Result = @__LocalMessage.ReadDouble("Result");
                return _Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual TLoginInfoF Login(string Usuario, string Clave)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "Login");
                @__LocalMessage.WriteAnsiString("Usuario", Usuario);
                @__LocalMessage.WriteAnsiString("Clave", Clave);
                @__LocalMessage.FinalizeMessage();
                ClientChannel.Dispatch(@__LocalMessage);
                TLoginInfoF _Result = ((TLoginInfoF)(@__LocalMessage.Read("Result", typeof(TLoginInfoF), RemObjects.SDK.StreamingFormat.Default)));
                return _Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual string ModificarFolioActual(string Campo, string Serie, int FolioNew)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "ModificarFolioActual");
                @__LocalMessage.WriteAnsiString("Campo", Campo);
                @__LocalMessage.WriteAnsiString("Serie", Serie);
                @__LocalMessage.WriteInt32("FolioNew", FolioNew);
                @__LocalMessage.FinalizeMessage();
                ClientChannel.Dispatch(@__LocalMessage);
                string _Result = @__LocalMessage.ReadAnsiString("Result");
                return _Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual TCuponValido ObtenCuponValido(string Barras, int Grupo, TAutoriza Autoriza)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "ObtenCuponValido");
                @__LocalMessage.WriteAnsiString("Barras", Barras);
                @__LocalMessage.WriteInt32("Grupo", Grupo);
                @__LocalMessage.Write("Autoriza", Autoriza, typeof(TAutoriza), RemObjects.SDK.StreamingFormat.Default);
                @__LocalMessage.FinalizeMessage();
                ClientChannel.Dispatch(@__LocalMessage);
                TCuponValido _Result = ((TCuponValido)(@__LocalMessage.Read("Result", typeof(TCuponValido), RemObjects.SDK.StreamingFormat.Default)));
                return _Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual TDatosServicio PagoServicio(int ServicioID, TDatosServicio Datos)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "PagoServicio");
                @__LocalMessage.WriteInt32("ServicioID", ServicioID);
                @__LocalMessage.Write("Datos", Datos, typeof(TDatosServicio), RemObjects.SDK.StreamingFormat.Default);
                @__LocalMessage.FinalizeMessage();
                ClientChannel.Dispatch(@__LocalMessage);
                TDatosServicio _Result = ((TDatosServicio)(@__LocalMessage.Read("Result", typeof(TDatosServicio), RemObjects.SDK.StreamingFormat.Default)));
                return _Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual double PrecioProducto(int ProductoID)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "PrecioProducto");
                @__LocalMessage.WriteInt32("ProductoID", ProductoID);
                @__LocalMessage.FinalizeMessage();
                ClientChannel.Dispatch(@__LocalMessage);
                double _Result = @__LocalMessage.ReadDouble("Result");
                return _Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual bool QuemarCupon(TConsumo Consumo, string Barras)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "QuemarCupon");
                @__LocalMessage.Write("Consumo", Consumo, typeof(TConsumo), RemObjects.SDK.StreamingFormat.Default);
                @__LocalMessage.WriteAnsiString("Barras", Barras);
                @__LocalMessage.FinalizeMessage();
                ClientChannel.Dispatch(@__LocalMessage);
                bool _Result = @__LocalMessage.ReadBoolean("Result");
                return _Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual TAutorizacion[] REDAutorizaciones(int EstacionID, int BombaID)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "REDAutorizaciones");
                @__LocalMessage.WriteInt32("EstacionID", EstacionID);
                @__LocalMessage.WriteInt32("BombaID", BombaID);
                @__LocalMessage.FinalizeMessage();
                ClientChannel.Dispatch(@__LocalMessage);
                TAutorizacion[] _Result = ((TAutorizacion[])(@__LocalMessage.Read("Result", typeof(TAutorizacion[]), RemObjects.SDK.StreamingFormat.Default)));
                return _Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual TDatosTicketConsumo REDConsumo(int EstacionID, string Serie, int TicketID, int AutorizacionID, double Importe, int ProductoID)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "REDConsumo");
                @__LocalMessage.WriteInt32("EstacionID", EstacionID);
                @__LocalMessage.WriteAnsiString("Serie", Serie);
                @__LocalMessage.WriteInt32("TicketID", TicketID);
                @__LocalMessage.WriteInt32("AutorizacionID", AutorizacionID);
                @__LocalMessage.WriteDouble("Importe", Importe);
                @__LocalMessage.WriteInt32("ProductoID", ProductoID);
                @__LocalMessage.FinalizeMessage();
                ClientChannel.Dispatch(@__LocalMessage);
                TDatosTicketConsumo _Result = ((TDatosTicketConsumo)(@__LocalMessage.Read("Result", typeof(TDatosTicketConsumo), RemObjects.SDK.StreamingFormat.Default)));
                return _Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual string ReferenciaTarjeta(int VehiculoID)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "ReferenciaTarjeta");
                @__LocalMessage.WriteInt32("VehiculoID", VehiculoID);
                @__LocalMessage.FinalizeMessage();
                ClientChannel.Dispatch(@__LocalMessage);
                string _Result = @__LocalMessage.ReadAnsiString("Result");
                return _Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual double Rendimiento(int EstacionID, int TicketID)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "Rendimiento");
                @__LocalMessage.WriteInt32("EstacionID", EstacionID);
                @__LocalMessage.WriteInt32("TicketID", TicketID);
                @__LocalMessage.FinalizeMessage();
                ClientChannel.Dispatch(@__LocalMessage);
                double _Result = @__LocalMessage.ReadDouble("Result");
                return _Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual string SaldoVehiculo(string Referencia, int EstacionID)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "SaldoVehiculo");
                @__LocalMessage.WriteAnsiString("Referencia", Referencia);
                @__LocalMessage.WriteInt32("EstacionID", EstacionID);
                @__LocalMessage.FinalizeMessage();
                ClientChannel.Dispatch(@__LocalMessage);
                string _Result = @__LocalMessage.ReadAnsiString("Result");
                return _Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual string Series(string Campo)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "Series");
                @__LocalMessage.WriteAnsiString("Campo", Campo);
                @__LocalMessage.FinalizeMessage();
                ClientChannel.Dispatch(@__LocalMessage);
                string _Result = @__LocalMessage.ReadAnsiString("Result");
                return _Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual string StatusCupon(string Codigo)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "StatusCupon");
                @__LocalMessage.WriteAnsiString("Codigo", Codigo);
                @__LocalMessage.FinalizeMessage();
                ClientChannel.Dispatch(@__LocalMessage);
                string _Result = @__LocalMessage.ReadAnsiString("Result");
                return _Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual bool TarjetaConsumo(string Tarjeta, TConsumo Consumo)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "TarjetaConsumo");
                @__LocalMessage.WriteAnsiString("Tarjeta", Tarjeta);
                @__LocalMessage.Write("Consumo", Consumo, typeof(TConsumo), RemObjects.SDK.StreamingFormat.Default);
                @__LocalMessage.FinalizeMessage();
                ClientChannel.Dispatch(@__LocalMessage);
                bool _Result = @__LocalMessage.ReadBoolean("Result");
                return _Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual TTarjetaLLave[] TarjetasLLave()
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "TarjetasLLave");
                @__LocalMessage.FinalizeMessage();
                ClientChannel.Dispatch(@__LocalMessage);
                TTarjetaLLave[] _Result = ((TTarjetaLLave[])(@__LocalMessage.Read("Result", typeof(TTarjetaLLave[]), RemObjects.SDK.StreamingFormat.Default)));
                return _Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual TTiempoAire TiempoAire(int EstacionID, int BombaID, string Telefono, int ProveedorID, double Importe, int CajaID, string LLave, int TurnoID)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "TiempoAire");
                @__LocalMessage.WriteInt32("EstacionID", EstacionID);
                @__LocalMessage.WriteInt32("BombaID", BombaID);
                @__LocalMessage.WriteAnsiString("Telefono", Telefono);
                @__LocalMessage.WriteInt32("ProveedorID", ProveedorID);
                @__LocalMessage.WriteDouble("Importe", Importe);
                @__LocalMessage.WriteInt32("CajaID", CajaID);
                @__LocalMessage.WriteAnsiString("LLave", LLave);
                @__LocalMessage.WriteInt32("TurnoID", TurnoID);
                @__LocalMessage.FinalizeMessage();
                ClientChannel.Dispatch(@__LocalMessage);
                TTiempoAire _Result = ((TTiempoAire)(@__LocalMessage.Read("Result", typeof(TTiempoAire), RemObjects.SDK.StreamingFormat.Default)));
                return _Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual int ValidaConsumo(TConsumo Consumo)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "ValidaConsumo");
                @__LocalMessage.Write("Consumo", Consumo, typeof(TConsumo), RemObjects.SDK.StreamingFormat.Default);
                @__LocalMessage.FinalizeMessage();
                ClientChannel.Dispatch(@__LocalMessage);
                int _Result = @__LocalMessage.ReadInt32("Result");
                return _Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual string ValidaSecuencias(int EstacionID, string Secuencias)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "ValidaSecuencias");
                @__LocalMessage.WriteInt32("EstacionID", EstacionID);
                @__LocalMessage.WriteAnsiString("Secuencias", Secuencias);
                @__LocalMessage.FinalizeMessage();
                ClientChannel.Dispatch(@__LocalMessage);
                string _Result = @__LocalMessage.ReadAnsiString("Result");
                return _Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual void VehiculoProducto(int VehiculoID, int ProductoID)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "VehiculoProducto");
                @__LocalMessage.WriteInt32("VehiculoID", VehiculoID);
                @__LocalMessage.WriteInt32("ProductoID", ProductoID);
                @__LocalMessage.FinalizeMessage();
                ClientChannel.Dispatch(@__LocalMessage);
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual TWebFacturaF WebFactura(string Serie, int Folio, string Campo)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "WebFactura");
                @__LocalMessage.WriteAnsiString("Serie", Serie);
                @__LocalMessage.WriteInt32("Folio", Folio);
                @__LocalMessage.WriteAnsiString("Campo", Campo);
                @__LocalMessage.FinalizeMessage();
                ClientChannel.Dispatch(@__LocalMessage);
                TWebFacturaF _Result = ((TWebFacturaF)(@__LocalMessage.Read("Result", typeof(TWebFacturaF), RemObjects.SDK.StreamingFormat.Default)));
                return _Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual bool CambiaKilometraje(TCambiaDatosConsumo Datos)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "CambiaKilometraje");
                @__LocalMessage.Write("Datos", Datos, typeof(TCambiaDatosConsumo), RemObjects.SDK.StreamingFormat.Default);
                @__LocalMessage.FinalizeMessage();
                ClientChannel.Dispatch(@__LocalMessage);
                bool _Result = @__LocalMessage.ReadBoolean("Result");
                return _Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual string MailCliente(int ClienteID, int Tipo)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "MailCliente");
                @__LocalMessage.WriteInt32("ClienteID", ClienteID);
                @__LocalMessage.WriteInt32("Tipo", Tipo);
                @__LocalMessage.FinalizeMessage();
                ClientChannel.Dispatch(@__LocalMessage);
                string _Result = @__LocalMessage.ReadAnsiString("Result");
                return _Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual bool AgregarIButton(string iButton, string Referencia)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "AgregarIButton");
                @__LocalMessage.WriteAnsiString("iButton", iButton);
                @__LocalMessage.WriteAnsiString("Referencia", Referencia);
                @__LocalMessage.FinalizeMessage();
                ClientChannel.Dispatch(@__LocalMessage);
                bool _Result = @__LocalMessage.ReadBoolean("Result");
                return _Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual string iButtonToReferencia(string iButton)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "iButtonToReferencia");
                @__LocalMessage.WriteAnsiString("iButton", iButton);
                @__LocalMessage.FinalizeMessage();
                ClientChannel.Dispatch(@__LocalMessage);
                string _Result = @__LocalMessage.ReadAnsiString("Result");
                return _Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual string ReferenciaToIButton(string Referencia)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "ReferenciaToIButton");
                @__LocalMessage.WriteAnsiString("Referencia", Referencia);
                @__LocalMessage.FinalizeMessage();
                ClientChannel.Dispatch(@__LocalMessage);
                string _Result = @__LocalMessage.ReadAnsiString("Result");
                return _Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual bool EnviaMail(string Serie, int Folio)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "EnviaMail");
                @__LocalMessage.WriteAnsiString("Serie", Serie);
                @__LocalMessage.WriteInt32("Folio", Folio);
                @__LocalMessage.FinalizeMessage();
                ClientChannel.Dispatch(@__LocalMessage);
                bool _Result = @__LocalMessage.ReadBoolean("Result");
                return _Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual void EliminaAutorizacionReferencia(string Referencia)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "EliminaAutorizacionReferencia");
                @__LocalMessage.WriteAnsiString("Referencia", Referencia);
                @__LocalMessage.FinalizeMessage();
                ClientChannel.Dispatch(@__LocalMessage);
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual string FormatoFacturaWEB(string Serie, int Folio)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "FormatoFacturaWEB");
                @__LocalMessage.WriteAnsiString("Serie", Serie);
                @__LocalMessage.WriteInt32("Folio", Folio);
                @__LocalMessage.FinalizeMessage();
                ClientChannel.Dispatch(@__LocalMessage);
                string _Result = @__LocalMessage.ReadAnsiString("Result");
                return _Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual TNotaCredito NotaCredito(string ASerie, int AFolio, string ASerieNota, double AImporte, int AUsuarioID)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "NotaCredito");
                @__LocalMessage.WriteAnsiString("ASerie", ASerie);
                @__LocalMessage.WriteInt32("AFolio", AFolio);
                @__LocalMessage.WriteAnsiString("ASerieNota", ASerieNota);
                @__LocalMessage.WriteDouble("AImporte", AImporte);
                @__LocalMessage.WriteInt32("AUsuarioID", AUsuarioID);
                @__LocalMessage.FinalizeMessage();
                ClientChannel.Dispatch(@__LocalMessage);
                TNotaCredito _Result = ((TNotaCredito)(@__LocalMessage.Read("Result", typeof(TNotaCredito), RemObjects.SDK.StreamingFormat.Default)));
                return _Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual double TotalNotaCreditoEnFactura(string Serie, int Folio)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "TotalNotaCreditoEnFactura");
                @__LocalMessage.WriteAnsiString("Serie", Serie);
                @__LocalMessage.WriteInt32("Folio", Folio);
                @__LocalMessage.FinalizeMessage();
                ClientChannel.Dispatch(@__LocalMessage);
                double _Result = @__LocalMessage.ReadDouble("Result");
                return _Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual string PuedeEliminarFactura(string Serie, int Folio, System.DateTime Fecha)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "PuedeEliminarFactura");
                @__LocalMessage.WriteAnsiString("Serie", Serie);
                @__LocalMessage.WriteInt32("Folio", Folio);
                @__LocalMessage.WriteDateTime("Fecha", Fecha);
                @__LocalMessage.FinalizeMessage();
                ClientChannel.Dispatch(@__LocalMessage);
                string _Result = @__LocalMessage.ReadAnsiString("Result");
                return _Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual TObservaFactura ConsultaObservacionesFactura(string Serie, int Folio)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "ConsultaObservacionesFactura");
                @__LocalMessage.WriteAnsiString("Serie", Serie);
                @__LocalMessage.WriteInt32("Folio", Folio);
                @__LocalMessage.FinalizeMessage();
                ClientChannel.Dispatch(@__LocalMessage);
                TObservaFactura _Result = ((TObservaFactura)(@__LocalMessage.Read("Result", typeof(TObservaFactura), RemObjects.SDK.StreamingFormat.Default)));
                return _Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual bool GuardaObservacionesFactura(string Serie, int Folio, string Observaciones)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "GuardaObservacionesFactura");
                @__LocalMessage.WriteAnsiString("Serie", Serie);
                @__LocalMessage.WriteInt32("Folio", Folio);
                @__LocalMessage.WriteAnsiString("Observaciones", Observaciones);
                @__LocalMessage.FinalizeMessage();
                ClientChannel.Dispatch(@__LocalMessage);
                bool _Result = @__LocalMessage.ReadBoolean("Result");
                return _Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual void KFleet()
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "KFleet");
                @__LocalMessage.FinalizeMessage();
                ClientChannel.Dispatch(@__LocalMessage);
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual TSaldoVehiculoPlus SaldoVehiculoPlus(string Referencia, int EstacionID)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "SaldoVehiculoPlus");
                @__LocalMessage.WriteAnsiString("Referencia", Referencia);
                @__LocalMessage.WriteInt32("EstacionID", EstacionID);
                @__LocalMessage.FinalizeMessage();
                ClientChannel.Dispatch(@__LocalMessage);
                TSaldoVehiculoPlus _Result = ((TSaldoVehiculoPlus)(@__LocalMessage.Read("Result", typeof(TSaldoVehiculoPlus), RemObjects.SDK.StreamingFormat.Default)));
                return _Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual bool SincronizaAlbum(TSincronizaAlbum Datos)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "SincronizaAlbum");
                @__LocalMessage.Write("Datos", Datos, typeof(TSincronizaAlbum), RemObjects.SDK.StreamingFormat.Default);
                @__LocalMessage.FinalizeMessage();
                ClientChannel.Dispatch(@__LocalMessage);
                bool _Result = @__LocalMessage.ReadBoolean("Result");
                return _Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual string GuardaFotoVehiculo(string Referencia, RemObjects.SDK.Types.Binary Foto)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "GuardaFotoVehiculo");
                @__LocalMessage.WriteAnsiString("Referencia", Referencia);
                @__LocalMessage.Write("Foto", Foto, typeof(RemObjects.SDK.Types.Binary), RemObjects.SDK.StreamingFormat.Default);
                @__LocalMessage.FinalizeMessage();
                ClientChannel.Dispatch(@__LocalMessage);
                string _Result = @__LocalMessage.ReadAnsiString("Result");
                return _Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual TValidaQREmpadronar ValidaQREmpadronar(string Referencia)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "ValidaQREmpadronar");
                @__LocalMessage.WriteAnsiString("Referencia", Referencia);
                @__LocalMessage.FinalizeMessage();
                ClientChannel.Dispatch(@__LocalMessage);
                TValidaQREmpadronar _Result = ((TValidaQREmpadronar)(@__LocalMessage.Read("Result", typeof(TValidaQREmpadronar), RemObjects.SDK.StreamingFormat.Default)));
                return _Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual bool CambiaDigitoSeguridadVehiculo(int VehiculoID, int DigitoSeguridad)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "CambiaDigitoSeguridadVehiculo");
                @__LocalMessage.WriteInt32("VehiculoID", VehiculoID);
                @__LocalMessage.WriteInt32("DigitoSeguridad", DigitoSeguridad);
                @__LocalMessage.FinalizeMessage();
                ClientChannel.Dispatch(@__LocalMessage);
                bool _Result = @__LocalMessage.ReadBoolean("Result");
                return _Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }
    }

    public class CoServiceFlotillas
    {

        public static IServiceFlotillas Create(RemObjects.SDK.IMessage message, RemObjects.SDK.IClientChannel clientChannel)
        {
            return new ServiceFlotillas_Proxy(message, clientChannel);
        }

        public static IServiceFlotillas Create(RemObjects.SDK.IRemoteService remoteService)
        {
            return new ServiceFlotillas_Proxy(remoteService);
        }

        public static IServiceFlotillas Create(System.Uri uri)
        {
            return new ServiceFlotillas_Proxy(uri);
        }

        public static IServiceFlotillas Create(string url)
        {
            return new ServiceFlotillas_Proxy(url);
        }
    }

    public interface IServiceFlotillas_Async : RemObjects.DataAbstract.Server.IDataAbstractService_Async
    {

        System.IAsyncResult BeginAbreDataSetReportes(string SQL, TParametrosF Parametros, System.AsyncCallback @__Callback, object @__UserData);

        RemObjects.SDK.Types.Binary EndAbreDataSetReportes(System.IAsyncResult @__AsyncResult);

        System.Threading.Tasks.Task<RemObjects.SDK.Types.Binary> AbreDataSetReportesAsync(string SQL, TParametrosF Parametros);

        System.IAsyncResult BeginActualizaHistorial(TConsumo Consumo, System.AsyncCallback @__Callback, object @__UserData);

        void EndActualizaHistorial(System.IAsyncResult @__AsyncResult);

        System.Threading.Tasks.Task ActualizaHistorialAsync(TConsumo Consumo);

        System.IAsyncResult BeginAfectarMovimientos(TMovimiento Movimiento, System.AsyncCallback @__Callback, object @__UserData);

        bool EndAfectarMovimientos(System.IAsyncResult @__AsyncResult);

        System.Threading.Tasks.Task<bool> AfectarMovimientosAsync(TMovimiento Movimiento);

        System.IAsyncResult BeginAfectarSaldoDocumento(TSaldoDocumento SaldoDocumento, System.AsyncCallback @__Callback, object @__UserData);

        bool EndAfectarSaldoDocumento(System.IAsyncResult @__AsyncResult);

        System.Threading.Tasks.Task<bool> AfectarSaldoDocumentoAsync(TSaldoDocumento SaldoDocumento);

        System.IAsyncResult BeginAfiliacionBancaria(int EstacionID, System.AsyncCallback @__Callback, object @__UserData);

        string EndAfiliacionBancaria(System.IAsyncResult @__AsyncResult);

        System.Threading.Tasks.Task<string> AfiliacionBancariaAsync(int EstacionID);

        System.IAsyncResult BeginAgregaReferencia(int VehiculoID, int Tipo, string Referencia, System.AsyncCallback @__Callback, object @__UserData);

        void EndAgregaReferencia(System.IAsyncResult @__AsyncResult);

        System.Threading.Tasks.Task AgregaReferenciaAsync(int VehiculoID, int Tipo, string Referencia);

        System.IAsyncResult BeginAgregaSecuencias(TConsumo[] Consumos, System.AsyncCallback @__Callback, object @__UserData);

        bool EndAgregaSecuencias(System.IAsyncResult @__AsyncResult);

        System.Threading.Tasks.Task<bool> AgregaSecuenciasAsync(TConsumo[] Consumos);

        System.IAsyncResult BeginAsignaFechaCierre(System.DateTime Fecha, System.AsyncCallback @__Callback, object @__UserData);

        bool EndAsignaFechaCierre(System.IAsyncResult @__AsyncResult);

        System.Threading.Tasks.Task<bool> AsignaFechaCierreAsync(System.DateTime Fecha);

        System.IAsyncResult BeginAutorizaTarjeta(TAutoriza Autoriza, System.AsyncCallback @__Callback, object @__UserData);

        TTarjeta EndAutorizaTarjeta(System.IAsyncResult @__AsyncResult);

        System.Threading.Tasks.Task<TTarjeta> AutorizaTarjetaAsync(TAutoriza Autoriza);

        System.IAsyncResult BeginBancaria(string Params, int Banco, System.AsyncCallback @__Callback, object @__UserData);

        TBancaria EndBancaria(System.IAsyncResult @__AsyncResult);

        System.Threading.Tasks.Task<TBancaria> BancariaAsync(string Params, int Banco);

        System.IAsyncResult BeginBuscaAutorizacionTajeta(int ClienteID, int VehiculoID, int GasolineroID, System.AsyncCallback @__Callback, object @__UserData);

        bool EndBuscaAutorizacionTajeta(System.IAsyncResult @__AsyncResult);

        System.Threading.Tasks.Task<bool> BuscaAutorizacionTajetaAsync(int ClienteID, int VehiculoID, int GasolineroID);

        System.IAsyncResult BeginBuscaReferenciaServicio(string Referencia, System.AsyncCallback @__Callback, object @__UserData);

        bool EndBuscaReferenciaServicio(System.IAsyncResult @__AsyncResult);

        System.Threading.Tasks.Task<bool> BuscaReferenciaServicioAsync(string Referencia);

        System.IAsyncResult BeginBuscarReporte(string Nombre, System.AsyncCallback @__Callback, object @__UserData);

        TReporteF EndBuscarReporte(System.IAsyncResult @__AsyncResult);

        System.Threading.Tasks.Task<TReporteF> BuscarReporteAsync(string Nombre);

        System.IAsyncResult BeginCambiaClienteConsumo(int EstacionID, int Ticket, string Serie, int ClienteID, int VehiculoID, System.AsyncCallback @__Callback, object @__UserData);

        bool EndCambiaClienteConsumo(System.IAsyncResult @__AsyncResult);

        System.Threading.Tasks.Task<bool> CambiaClienteConsumoAsync(int EstacionID, int Ticket, string Serie, int ClienteID, int VehiculoID);

        System.IAsyncResult BeginCambiaNIP(string Referencia, int NIP, System.AsyncCallback @__Callback, object @__UserData);

        bool EndCambiaNIP(System.IAsyncResult @__AsyncResult);

        System.Threading.Tasks.Task<bool> CambiaNIPAsync(string Referencia, int NIP);

        System.IAsyncResult BeginCambioFactura(string Serie, int Folio, string NevaSerie, int NuevoFolio, System.DateTime FechaImpresion, System.AsyncCallback @__Callback, object @__UserData);

        string EndCambioFactura(System.IAsyncResult @__AsyncResult);

        System.Threading.Tasks.Task<string> CambioFacturaAsync(string Serie, int Folio, string NevaSerie, int NuevoFolio, System.DateTime FechaImpresion);

        System.IAsyncResult BeginCancelaGrupo(int Grupo, System.AsyncCallback @__Callback, object @__UserData);

        bool EndCancelaGrupo(System.IAsyncResult @__AsyncResult);

        System.Threading.Tasks.Task<bool> CancelaGrupoAsync(int Grupo);

        System.IAsyncResult BeginCancelarCupones(string Lista, int UsuarioID, System.AsyncCallback @__Callback, object @__UserData);

        string EndCancelarCupones(System.IAsyncResult @__AsyncResult);

        System.Threading.Tasks.Task<string> CancelarCuponesAsync(string Lista, int UsuarioID);

        System.IAsyncResult BeginCancelarLote(int LoteID, int UsuarioID, System.AsyncCallback @__Callback, object @__UserData);

        string EndCancelarLote(System.IAsyncResult @__AsyncResult);

        System.Threading.Tasks.Task<string> CancelarLoteAsync(int LoteID, int UsuarioID);

        System.IAsyncResult BeginCaracteresCupon(System.AsyncCallback @__Callback, object @__UserData);

        string EndCaracteresCupon(System.IAsyncResult @__AsyncResult);

        System.Threading.Tasks.Task<string> CaracteresCuponAsync();

        System.IAsyncResult BeginCashBack(string Params, System.AsyncCallback @__Callback, object @__UserData);

        TBancaria EndCashBack(System.IAsyncResult @__AsyncResult);

        System.Threading.Tasks.Task<TBancaria> CashBackAsync(string Params);

        System.IAsyncResult BeginCierrePeriodo(int Periodo, int Ejercicio, int UsuarioID, System.AsyncCallback @__Callback, object @__UserData);

        bool EndCierrePeriodo(System.IAsyncResult @__AsyncResult);

        System.Threading.Tasks.Task<bool> CierrePeriodoAsync(int Periodo, int Ejercicio, int UsuarioID);

        System.IAsyncResult BeginClasificacion(System.AsyncCallback @__Callback, object @__UserData);

        double EndClasificacion(System.IAsyncResult @__AsyncResult);

        System.Threading.Tasks.Task<double> ClasificacionAsync();

        System.IAsyncResult BeginClasificacionCliente(int ClienteID, double Clasificacion, System.AsyncCallback @__Callback, object @__UserData);

        void EndClasificacionCliente(System.IAsyncResult @__AsyncResult);

        System.Threading.Tasks.Task ClasificacionClienteAsync(int ClienteID, double Clasificacion);

        System.IAsyncResult BeginClasificacionVehiculo(int VehiculoID, double Clasificacion, System.AsyncCallback @__Callback, object @__UserData);

        void EndClasificacionVehiculo(System.IAsyncResult @__AsyncResult);

        System.Threading.Tasks.Task ClasificacionVehiculoAsync(int VehiculoID, double Clasificacion);

        System.IAsyncResult BeginClaveACupon(string Clave, System.AsyncCallback @__Callback, object @__UserData);

        int EndClaveACupon(System.IAsyncResult @__AsyncResult);

        System.Threading.Tasks.Task<int> ClaveACuponAsync(string Clave);

        System.IAsyncResult BeginCuponManual(int EstacionID, int TurnoID, int BombaID, string Barras, System.AsyncCallback @__Callback, object @__UserData);

        TCuponValido EndCuponManual(System.IAsyncResult @__AsyncResult);

        System.Threading.Tasks.Task<TCuponValido> CuponManualAsync(int EstacionID, int TurnoID, int BombaID, string Barras);

        System.IAsyncResult BeginDatosCliente(int ClienteID, System.AsyncCallback @__Callback, object @__UserData);

        //TCliente EndDatosCliente(System.IAsyncResult @__AsyncResult);

       // System.Threading.Tasks.Task<TCliente> DatosClienteAsync(int ClienteID);

        System.IAsyncResult BeginDatosClienteOtros(string Tarjeta, int EstacionID, System.AsyncCallback @__Callback, object @__UserData);

        TDatosClienteOtros EndDatosClienteOtros(System.IAsyncResult @__AsyncResult);

        System.Threading.Tasks.Task<TDatosClienteOtros> DatosClienteOtrosAsync(string Tarjeta, int EstacionID);

        System.IAsyncResult BeginDatosFactura(int Folio, string Serie, System.AsyncCallback @__Callback, object @__UserData);

        bool EndDatosFactura(System.IAsyncResult @__AsyncResult);

        System.Threading.Tasks.Task<bool> DatosFacturaAsync(int Folio, string Serie);

        System.IAsyncResult BeginDatosProducto(int ID, System.AsyncCallback @__Callback, object @__UserData);

        TProductoF EndDatosProducto(System.IAsyncResult @__AsyncResult);

        System.Threading.Tasks.Task<TProductoF> DatosProductoAsync(int ID);

        System.IAsyncResult BeginDatosServicio(int ServicioID, string Referencia, System.AsyncCallback @__Callback, object @__UserData);

        TDatosServicio EndDatosServicio(System.IAsyncResult @__AsyncResult);

        System.Threading.Tasks.Task<TDatosServicio> DatosServicioAsync(int ServicioID, string Referencia);

        System.IAsyncResult BeginDatosVehiculo(int VehiculoID, System.AsyncCallback @__Callback, object @__UserData);

        TDatosVehiculo EndDatosVehiculo(System.IAsyncResult @__AsyncResult);

        System.Threading.Tasks.Task<TDatosVehiculo> DatosVehiculoAsync(int VehiculoID);

        System.IAsyncResult BeginDatosVerifica(int VehiculoID, System.AsyncCallback @__Callback, object @__UserData);

        TDatosVerifica EndDatosVerifica(System.IAsyncResult @__AsyncResult);

        System.Threading.Tasks.Task<TDatosVerifica> DatosVerificaAsync(int VehiculoID);

        System.IAsyncResult BeginDatosVerificaReferencia(string Referencia, System.AsyncCallback @__Callback, object @__UserData);

        TDatosVerifica EndDatosVerificaReferencia(System.IAsyncResult @__AsyncResult);

        System.Threading.Tasks.Task<TDatosVerifica> DatosVerificaReferenciaAsync(string Referencia);

        System.IAsyncResult BeginDatosVerifone(int VehiculoID, string Referencia, System.AsyncCallback @__Callback, object @__UserData);

        TDatosVerifoneF EndDatosVerifone(System.IAsyncResult @__AsyncResult);

        System.Threading.Tasks.Task<TDatosVerifoneF> DatosVerifoneAsync(int VehiculoID, string Referencia);

        System.IAsyncResult BeginDocumentosConSaldo(int ClienteID, System.AsyncCallback @__Callback, object @__UserData);

        TDocumentosConSaldo[] EndDocumentosConSaldo(System.IAsyncResult @__AsyncResult);

        System.Threading.Tasks.Task<TDocumentosConSaldo[]> DocumentosConSaldoAsync(int ClienteID);

        System.IAsyncResult BeginEliminaAutorizacion(int AutorizacionID, System.AsyncCallback @__Callback, object @__UserData);

        void EndEliminaAutorizacion(System.IAsyncResult @__AsyncResult);

        System.Threading.Tasks.Task EliminaAutorizacionAsync(int AutorizacionID);

        System.IAsyncResult BeginEliminaAutorizacionVehiculo(int ClienteID, int VehiculoID, int GasolineroID, System.AsyncCallback @__Callback, object @__UserData);

        bool EndEliminaAutorizacionVehiculo(System.IAsyncResult @__AsyncResult);

        System.Threading.Tasks.Task<bool> EliminaAutorizacionVehiculoAsync(int ClienteID, int VehiculoID, int GasolineroID);

        System.IAsyncResult BeginEliminaFactura(int Folio, string Serie, System.AsyncCallback @__Callback, object @__UserData);

        bool EndEliminaFactura(System.IAsyncResult @__AsyncResult);

        System.Threading.Tasks.Task<bool> EliminaFacturaAsync(int Folio, string Serie);

        System.IAsyncResult BeginEliminaRecibo(int ReciboID, int UsuarioID, System.AsyncCallback @__Callback, object @__UserData);

        string EndEliminaRecibo(System.IAsyncResult @__AsyncResult);

        System.Threading.Tasks.Task<string> EliminaReciboAsync(int ReciboID, int UsuarioID);

        System.IAsyncResult BeginEliminaReferencia(int VehiculoID, int Tipo, System.AsyncCallback @__Callback, object @__UserData);

        void EndEliminaReferencia(System.IAsyncResult @__AsyncResult);

        System.Threading.Tasks.Task EliminaReferenciaAsync(int VehiculoID, int Tipo);

        System.IAsyncResult BeginEliminaVehiculoProducto(int VehiculoID, int ProductoID, System.AsyncCallback @__Callback, object @__UserData);

        void EndEliminaVehiculoProducto(System.IAsyncResult @__AsyncResult);

        System.Threading.Tasks.Task EliminaVehiculoProductoAsync(int VehiculoID, int ProductoID);

        System.IAsyncResult BeginFacturaElectronica(string Serie, int Folio, bool ConIEPS, System.AsyncCallback @__Callback, object @__UserData);

        TDatosFacturaEF EndFacturaElectronica(System.IAsyncResult @__AsyncResult);

        System.Threading.Tasks.Task<TDatosFacturaEF> FacturaElectronicaAsync(string Serie, int Folio, bool ConIEPS);

        System.IAsyncResult BeginFacturaRecibo(int Cliente, double Importe, int EstacionID, int EmpleadoID, string SerieFactura, int ProductoID, double Precio, int ReciboID, System.DateTime FechaFactura, System.AsyncCallback @__Callback, object @__UserData);

        int EndFacturaRecibo(System.IAsyncResult @__AsyncResult);

        System.Threading.Tasks.Task<int> FacturaReciboAsync(int Cliente, double Importe, int EstacionID, int EmpleadoID, string SerieFactura, int ProductoID, double Precio, int ReciboID, System.DateTime FechaFactura);

        System.IAsyncResult BeginFecha(System.AsyncCallback @__Callback, object @__UserData);

        System.DateTime EndFecha(System.IAsyncResult @__AsyncResult);

        System.Threading.Tasks.Task<System.DateTime> FechaAsync();

        System.IAsyncResult BeginFechaCierre(System.AsyncCallback @__Callback, object @__UserData);

        System.DateTime EndFechaCierre(System.IAsyncResult @__AsyncResult);

        System.Threading.Tasks.Task<System.DateTime> FechaCierreAsync();

        System.IAsyncResult BeginFechaValida(System.DateTime Fecha, System.AsyncCallback @__Callback, object @__UserData);

        bool EndFechaValida(System.IAsyncResult @__AsyncResult);

        System.Threading.Tasks.Task<bool> FechaValidaAsync(System.DateTime Fecha);

        System.IAsyncResult BeginFolio(string Campo, string Serie, System.AsyncCallback @__Callback, object @__UserData);

        int EndFolio(System.IAsyncResult @__AsyncResult);

        System.Threading.Tasks.Task<int> FolioAsync(string Campo, string Serie);

        System.IAsyncResult BeginGasolineroID(System.AsyncCallback @__Callback, object @__UserData);

        int EndGasolineroID(System.IAsyncResult @__AsyncResult);

        System.Threading.Tasks.Task<int> GasolineroIDAsync();

        System.IAsyncResult BeginGasolineroNombre(System.AsyncCallback @__Callback, object @__UserData);

        string EndGasolineroNombre(System.IAsyncResult @__AsyncResult);

        System.Threading.Tasks.Task<string> GasolineroNombreAsync();

        System.IAsyncResult BeginGeneraCupones(int LoteCuponID, int ClienteID, int EstacionID, int Identificador, TGeneraCupon[] Cupones, int ProductoID, int EmpleadoID, string Serie, System.AsyncCallback @__Callback, object @__UserData);

        int EndGeneraCupones(System.IAsyncResult @__AsyncResult);

        System.Threading.Tasks.Task<int> GeneraCuponesAsync(int LoteCuponID, int ClienteID, int EstacionID, int Identificador, TGeneraCupon[] Cupones, int ProductoID, int EmpleadoID, string Serie);

        System.IAsyncResult BeginGeneraFacturasXCliente(int ClienteID, string Productos, System.DateTime FechaCorte, System.DateTime FechaContable, string Serie, int aFolio, int EmpleadoID, System.AsyncCallback @__Callback, object @__UserData);

        int EndGeneraFacturasXCliente(System.IAsyncResult @__AsyncResult);

        System.Threading.Tasks.Task<int> GeneraFacturasXClienteAsync(int ClienteID, string Productos, System.DateTime FechaCorte, System.DateTime FechaContable, string Serie, int aFolio, int EmpleadoID);

        System.IAsyncResult BeginGeneraFacturasxConsumo(string Serie, int EmpleadoID, int EstacionID, int[] Consumos, System.DateTime FechaFactura, System.AsyncCallback @__Callback, object @__UserData);

        TFoliosGenerados EndGeneraFacturasxConsumo(System.IAsyncResult @__AsyncResult);

        System.Threading.Tasks.Task<TFoliosGenerados> GeneraFacturasxConsumoAsync(string Serie, int EmpleadoID, int EstacionID, int[] Consumos, System.DateTime FechaFactura);

        System.IAsyncResult BeginGeneraFacturasxConsumo2(string Serie, int EmpleadoID, int EstacionID, int[] Consumos, System.DateTime FechaFactura, string Observaciones, double Descuento, System.AsyncCallback @__Callback, object @__UserData);

        TFoliosGenerados EndGeneraFacturasxConsumo2(System.IAsyncResult @__AsyncResult);

        System.Threading.Tasks.Task<TFoliosGenerados> GeneraFacturasxConsumo2Async(string Serie, int EmpleadoID, int EstacionID, int[] Consumos, System.DateTime FechaFactura, string Observaciones, double Descuento);

        System.IAsyncResult BeginGenerarFacturas(string Serie, System.DateTime FechaCorte, System.DateTime FechaFactura, int DiaFacturar, int Productos, int EmpleadoID, int EstacionID, System.AsyncCallback @__Callback, object @__UserData);

        TFoliosGenerados EndGenerarFacturas(System.IAsyncResult @__AsyncResult);

        System.Threading.Tasks.Task<TFoliosGenerados> GenerarFacturasAsync(string Serie, System.DateTime FechaCorte, System.DateTime FechaFactura, int DiaFacturar, int Productos, int EmpleadoID, int EstacionID);

        System.IAsyncResult BeginGuardaAccesos(int UsuarioID, string Lista, System.AsyncCallback @__Callback, object @__UserData);

        void EndGuardaAccesos(System.IAsyncResult @__AsyncResult);

        System.Threading.Tasks.Task GuardaAccesosAsync(int UsuarioID, string Lista);

        System.IAsyncResult BeginGuardaAutorizacion(TAutoriza Autorizacion, System.AsyncCallback @__Callback, object @__UserData);

        bool EndGuardaAutorizacion(System.IAsyncResult @__AsyncResult);

        System.Threading.Tasks.Task<bool> GuardaAutorizacionAsync(TAutoriza Autorizacion);

        System.IAsyncResult BeginGuardaDatosFactura(TDatosFactura DatosFactura, System.AsyncCallback @__Callback, object @__UserData);

        void EndGuardaDatosFactura(System.IAsyncResult @__AsyncResult);

        System.Threading.Tasks.Task GuardaDatosFacturaAsync(TDatosFactura DatosFactura);

        System.IAsyncResult BeginGuardarConsumo(TConsumo Consumo, System.AsyncCallback @__Callback, object @__UserData);

        bool EndGuardarConsumo(System.IAsyncResult @__AsyncResult);

        System.Threading.Tasks.Task<bool> GuardarConsumoAsync(TConsumo Consumo);

        System.IAsyncResult BeginGuardaRecibo(TRecibo Recibo, System.AsyncCallback @__Callback, object @__UserData);

        bool EndGuardaRecibo(System.IAsyncResult @__AsyncResult);

        System.Threading.Tasks.Task<bool> GuardaReciboAsync(TRecibo Recibo);

        System.IAsyncResult BeginImportesTiempoAire(int ProveedorID, System.AsyncCallback @__Callback, object @__UserData);

        double[] EndImportesTiempoAire(System.IAsyncResult @__AsyncResult);

        System.Threading.Tasks.Task<double[]> ImportesTiempoAireAsync(int ProveedorID);

        System.IAsyncResult BeginInsertaBitacora(int ClienteID, int UsuarioID, string Tabla, string Campo, string ValorAnterior, string ValorNuevo, System.AsyncCallback @__Callback, object @__UserData);

        bool EndInsertaBitacora(System.IAsyncResult @__AsyncResult);

        System.Threading.Tasks.Task<bool> InsertaBitacoraAsync(int ClienteID, int UsuarioID, string Tabla, string Campo, string ValorAnterior, string ValorNuevo);

        System.IAsyncResult BeginIVAEstacion(int EstacionID, System.AsyncCallback @__Callback, object @__UserData);

        double EndIVAEstacion(System.IAsyncResult @__AsyncResult);

        System.Threading.Tasks.Task<double> IVAEstacionAsync(int EstacionID);

        System.IAsyncResult BeginLogin(string Usuario, string Clave, System.AsyncCallback @__Callback, object @__UserData);

        TLoginInfoF EndLogin(System.IAsyncResult @__AsyncResult);

        System.Threading.Tasks.Task<TLoginInfoF> LoginAsync(string Usuario, string Clave);

        System.IAsyncResult BeginModificarFolioActual(string Campo, string Serie, int FolioNew, System.AsyncCallback @__Callback, object @__UserData);

        string EndModificarFolioActual(System.IAsyncResult @__AsyncResult);

        System.Threading.Tasks.Task<string> ModificarFolioActualAsync(string Campo, string Serie, int FolioNew);

        System.IAsyncResult BeginObtenCuponValido(string Barras, int Grupo, TAutoriza Autoriza, System.AsyncCallback @__Callback, object @__UserData);

        TCuponValido EndObtenCuponValido(System.IAsyncResult @__AsyncResult);

        System.Threading.Tasks.Task<TCuponValido> ObtenCuponValidoAsync(string Barras, int Grupo, TAutoriza Autoriza);

        System.IAsyncResult BeginPagoServicio(int ServicioID, TDatosServicio Datos, System.AsyncCallback @__Callback, object @__UserData);

        TDatosServicio EndPagoServicio(System.IAsyncResult @__AsyncResult);

        System.Threading.Tasks.Task<TDatosServicio> PagoServicioAsync(int ServicioID, TDatosServicio Datos);

        System.IAsyncResult BeginPrecioProducto(int ProductoID, System.AsyncCallback @__Callback, object @__UserData);

        double EndPrecioProducto(System.IAsyncResult @__AsyncResult);

        System.Threading.Tasks.Task<double> PrecioProductoAsync(int ProductoID);

        System.IAsyncResult BeginQuemarCupon(TConsumo Consumo, string Barras, System.AsyncCallback @__Callback, object @__UserData);

        bool EndQuemarCupon(System.IAsyncResult @__AsyncResult);

        System.Threading.Tasks.Task<bool> QuemarCuponAsync(TConsumo Consumo, string Barras);

        System.IAsyncResult BeginREDAutorizaciones(int EstacionID, int BombaID, System.AsyncCallback @__Callback, object @__UserData);

        TAutorizacion[] EndREDAutorizaciones(System.IAsyncResult @__AsyncResult);

        System.Threading.Tasks.Task<TAutorizacion[]> REDAutorizacionesAsync(int EstacionID, int BombaID);

        System.IAsyncResult BeginREDConsumo(int EstacionID, string Serie, int TicketID, int AutorizacionID, double Importe, int ProductoID, System.AsyncCallback @__Callback, object @__UserData);

        TDatosTicketConsumo EndREDConsumo(System.IAsyncResult @__AsyncResult);

        System.Threading.Tasks.Task<TDatosTicketConsumo> REDConsumoAsync(int EstacionID, string Serie, int TicketID, int AutorizacionID, double Importe, int ProductoID);

        System.IAsyncResult BeginReferenciaTarjeta(int VehiculoID, System.AsyncCallback @__Callback, object @__UserData);

        string EndReferenciaTarjeta(System.IAsyncResult @__AsyncResult);

        System.Threading.Tasks.Task<string> ReferenciaTarjetaAsync(int VehiculoID);

        System.IAsyncResult BeginRendimiento(int EstacionID, int TicketID, System.AsyncCallback @__Callback, object @__UserData);

        double EndRendimiento(System.IAsyncResult @__AsyncResult);

        System.Threading.Tasks.Task<double> RendimientoAsync(int EstacionID, int TicketID);

        System.IAsyncResult BeginSaldoVehiculo(string Referencia, int EstacionID, System.AsyncCallback @__Callback, object @__UserData);

        string EndSaldoVehiculo(System.IAsyncResult @__AsyncResult);

        System.Threading.Tasks.Task<string> SaldoVehiculoAsync(string Referencia, int EstacionID);

        System.IAsyncResult BeginSeries(string Campo, System.AsyncCallback @__Callback, object @__UserData);

        string EndSeries(System.IAsyncResult @__AsyncResult);

        System.Threading.Tasks.Task<string> SeriesAsync(string Campo);

        System.IAsyncResult BeginStatusCupon(string Codigo, System.AsyncCallback @__Callback, object @__UserData);

        string EndStatusCupon(System.IAsyncResult @__AsyncResult);

        System.Threading.Tasks.Task<string> StatusCuponAsync(string Codigo);

        System.IAsyncResult BeginTarjetaConsumo(string Tarjeta, TConsumo Consumo, System.AsyncCallback @__Callback, object @__UserData);

        bool EndTarjetaConsumo(System.IAsyncResult @__AsyncResult);

        System.Threading.Tasks.Task<bool> TarjetaConsumoAsync(string Tarjeta, TConsumo Consumo);

        System.IAsyncResult BeginTarjetasLLave(System.AsyncCallback @__Callback, object @__UserData);

        TTarjetaLLave[] EndTarjetasLLave(System.IAsyncResult @__AsyncResult);

        System.Threading.Tasks.Task<TTarjetaLLave[]> TarjetasLLaveAsync();

        System.IAsyncResult BeginTiempoAire(int EstacionID, int BombaID, string Telefono, int ProveedorID, double Importe, int CajaID, string LLave, int TurnoID, System.AsyncCallback @__Callback, object @__UserData);

        TTiempoAire EndTiempoAire(System.IAsyncResult @__AsyncResult);

        System.Threading.Tasks.Task<TTiempoAire> TiempoAireAsync(int EstacionID, int BombaID, string Telefono, int ProveedorID, double Importe, int CajaID, string LLave, int TurnoID);

        System.IAsyncResult BeginValidaConsumo(TConsumo Consumo, System.AsyncCallback @__Callback, object @__UserData);

        int EndValidaConsumo(System.IAsyncResult @__AsyncResult);

        System.Threading.Tasks.Task<int> ValidaConsumoAsync(TConsumo Consumo);

        System.IAsyncResult BeginValidaSecuencias(int EstacionID, string Secuencias, System.AsyncCallback @__Callback, object @__UserData);

        string EndValidaSecuencias(System.IAsyncResult @__AsyncResult);

        System.Threading.Tasks.Task<string> ValidaSecuenciasAsync(int EstacionID, string Secuencias);

        System.IAsyncResult BeginVehiculoProducto(int VehiculoID, int ProductoID, System.AsyncCallback @__Callback, object @__UserData);

        void EndVehiculoProducto(System.IAsyncResult @__AsyncResult);

        System.Threading.Tasks.Task VehiculoProductoAsync(int VehiculoID, int ProductoID);

        System.IAsyncResult BeginWebFactura(string Serie, int Folio, string Campo, System.AsyncCallback @__Callback, object @__UserData);

        TWebFacturaF EndWebFactura(System.IAsyncResult @__AsyncResult);

        System.Threading.Tasks.Task<TWebFacturaF> WebFacturaAsync(string Serie, int Folio, string Campo);

        System.IAsyncResult BeginCambiaKilometraje(TCambiaDatosConsumo Datos, System.AsyncCallback @__Callback, object @__UserData);

        bool EndCambiaKilometraje(System.IAsyncResult @__AsyncResult);

        System.Threading.Tasks.Task<bool> CambiaKilometrajeAsync(TCambiaDatosConsumo Datos);

        System.IAsyncResult BeginMailCliente(int ClienteID, int Tipo, System.AsyncCallback @__Callback, object @__UserData);

        string EndMailCliente(System.IAsyncResult @__AsyncResult);

        System.Threading.Tasks.Task<string> MailClienteAsync(int ClienteID, int Tipo);

        System.IAsyncResult BeginAgregarIButton(string iButton, string Referencia, System.AsyncCallback @__Callback, object @__UserData);

        bool EndAgregarIButton(System.IAsyncResult @__AsyncResult);

        System.Threading.Tasks.Task<bool> AgregarIButtonAsync(string iButton, string Referencia);

        System.IAsyncResult BeginiButtonToReferencia(string iButton, System.AsyncCallback @__Callback, object @__UserData);

        string EndiButtonToReferencia(System.IAsyncResult @__AsyncResult);

        System.Threading.Tasks.Task<string> iButtonToReferenciaAsync(string iButton);

        System.IAsyncResult BeginReferenciaToIButton(string Referencia, System.AsyncCallback @__Callback, object @__UserData);

        string EndReferenciaToIButton(System.IAsyncResult @__AsyncResult);

        System.Threading.Tasks.Task<string> ReferenciaToIButtonAsync(string Referencia);

        System.IAsyncResult BeginEnviaMail(string Serie, int Folio, System.AsyncCallback @__Callback, object @__UserData);

        bool EndEnviaMail(System.IAsyncResult @__AsyncResult);

        System.Threading.Tasks.Task<bool> EnviaMailAsync(string Serie, int Folio);

        System.IAsyncResult BeginEliminaAutorizacionReferencia(string Referencia, System.AsyncCallback @__Callback, object @__UserData);

        void EndEliminaAutorizacionReferencia(System.IAsyncResult @__AsyncResult);

        System.Threading.Tasks.Task EliminaAutorizacionReferenciaAsync(string Referencia);

        System.IAsyncResult BeginFormatoFacturaWEB(string Serie, int Folio, System.AsyncCallback @__Callback, object @__UserData);

        string EndFormatoFacturaWEB(System.IAsyncResult @__AsyncResult);

        System.Threading.Tasks.Task<string> FormatoFacturaWEBAsync(string Serie, int Folio);

        System.IAsyncResult BeginNotaCredito(string ASerie, int AFolio, string ASerieNota, double AImporte, int AUsuarioID, System.AsyncCallback @__Callback, object @__UserData);

        TNotaCredito EndNotaCredito(System.IAsyncResult @__AsyncResult);

        System.Threading.Tasks.Task<TNotaCredito> NotaCreditoAsync(string ASerie, int AFolio, string ASerieNota, double AImporte, int AUsuarioID);

        System.IAsyncResult BeginTotalNotaCreditoEnFactura(string Serie, int Folio, System.AsyncCallback @__Callback, object @__UserData);

        double EndTotalNotaCreditoEnFactura(System.IAsyncResult @__AsyncResult);

        System.Threading.Tasks.Task<double> TotalNotaCreditoEnFacturaAsync(string Serie, int Folio);

        System.IAsyncResult BeginPuedeEliminarFactura(string Serie, int Folio, System.DateTime Fecha, System.AsyncCallback @__Callback, object @__UserData);

        string EndPuedeEliminarFactura(System.IAsyncResult @__AsyncResult);

        System.Threading.Tasks.Task<string> PuedeEliminarFacturaAsync(string Serie, int Folio, System.DateTime Fecha);

        System.IAsyncResult BeginConsultaObservacionesFactura(string Serie, int Folio, System.AsyncCallback @__Callback, object @__UserData);

        TObservaFactura EndConsultaObservacionesFactura(System.IAsyncResult @__AsyncResult);

        System.Threading.Tasks.Task<TObservaFactura> ConsultaObservacionesFacturaAsync(string Serie, int Folio);

        System.IAsyncResult BeginGuardaObservacionesFactura(string Serie, int Folio, string Observaciones, System.AsyncCallback @__Callback, object @__UserData);

        bool EndGuardaObservacionesFactura(System.IAsyncResult @__AsyncResult);

        System.Threading.Tasks.Task<bool> GuardaObservacionesFacturaAsync(string Serie, int Folio, string Observaciones);

        System.IAsyncResult BeginKFleet(System.AsyncCallback @__Callback, object @__UserData);

        void EndKFleet(System.IAsyncResult @__AsyncResult);

        System.Threading.Tasks.Task KFleetAsync();

        System.IAsyncResult BeginSaldoVehiculoPlus(string Referencia, int EstacionID, System.AsyncCallback @__Callback, object @__UserData);

        TSaldoVehiculoPlus EndSaldoVehiculoPlus(System.IAsyncResult @__AsyncResult);

        System.Threading.Tasks.Task<TSaldoVehiculoPlus> SaldoVehiculoPlusAsync(string Referencia, int EstacionID);

        System.IAsyncResult BeginSincronizaAlbum(TSincronizaAlbum Datos, System.AsyncCallback @__Callback, object @__UserData);

        bool EndSincronizaAlbum(System.IAsyncResult @__AsyncResult);

        System.Threading.Tasks.Task<bool> SincronizaAlbumAsync(TSincronizaAlbum Datos);

        System.IAsyncResult BeginGuardaFotoVehiculo(string Referencia, RemObjects.SDK.Types.Binary Foto, System.AsyncCallback @__Callback, object @__UserData);

        string EndGuardaFotoVehiculo(System.IAsyncResult @__AsyncResult);

        System.Threading.Tasks.Task<string> GuardaFotoVehiculoAsync(string Referencia, RemObjects.SDK.Types.Binary Foto);

        System.IAsyncResult BeginValidaQREmpadronar(string Referencia, System.AsyncCallback @__Callback, object @__UserData);

        TValidaQREmpadronar EndValidaQREmpadronar(System.IAsyncResult @__AsyncResult);

        System.Threading.Tasks.Task<TValidaQREmpadronar> ValidaQREmpadronarAsync(string Referencia);

        System.IAsyncResult BeginCambiaDigitoSeguridadVehiculo(int VehiculoID, int DigitoSeguridad, System.AsyncCallback @__Callback, object @__UserData);

        bool EndCambiaDigitoSeguridadVehiculo(System.IAsyncResult @__AsyncResult);

        System.Threading.Tasks.Task<bool> CambiaDigitoSeguridadVehiculoAsync(int VehiculoID, int DigitoSeguridad);
    }

    public partial class ServiceFlotillas_AsyncProxy : RemObjects.DataAbstract.Server.DataAbstractService_AsyncProxy, IServiceFlotillas_Async
    {

        public ServiceFlotillas_AsyncProxy(RemObjects.SDK.IMessage message, RemObjects.SDK.IClientChannel clientChannel) :
                base(message, clientChannel)
        {
        }

        public ServiceFlotillas_AsyncProxy(RemObjects.SDK.IMessage message, RemObjects.SDK.IClientChannel clientChannel, string interfaceName) :
                base(message, clientChannel, interfaceName)
        {
        }

        public ServiceFlotillas_AsyncProxy(RemObjects.SDK.IRemoteService remoteService) :
                base(remoteService)
        {
        }

        public ServiceFlotillas_AsyncProxy(RemObjects.SDK.IRemoteService remoteService, string interfaceName) :
                base(remoteService, interfaceName)
        {
        }

        public ServiceFlotillas_AsyncProxy(System.Uri uri) :
                base(uri)
        {
        }

        public ServiceFlotillas_AsyncProxy(string url) :
                base(url)
        {
        }

        public override string InterfaceName
        {
            get
            {
                return "ServiceFlotillas";
            }
        }

        public virtual System.IAsyncResult BeginAbreDataSetReportes(string SQL, TParametrosF Parametros, System.AsyncCallback @__Callback, object @__UserData)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "AbreDataSetReportes");
                @__LocalMessage.WriteAnsiString("SQL", SQL);
                @__LocalMessage.Write("Parametros", Parametros, typeof(TParametrosF), RemObjects.SDK.StreamingFormat.Default);
                @__LocalMessage.FinalizeMessage();
                return ClientChannel.AsyncDispatch(@__LocalMessage, @__Callback, @__UserData);
            }
            catch (System.Exception ex)
            {
                this.@__ClearMessage(@__LocalMessage);
                throw ex;
            }
        }

        public virtual RemObjects.SDK.Types.Binary EndAbreDataSetReportes(System.IAsyncResult @__AsyncResult)
        {
            RemObjects.SDK.IMessage @__LocalMessage = ((RemObjects.SDK.IClientAsyncResult)(@__AsyncResult)).Message;
            try
            {
                RemObjects.SDK.Types.Binary Result = ((RemObjects.SDK.Types.Binary)(@__LocalMessage.Read("Result", typeof(RemObjects.SDK.Types.Binary), RemObjects.SDK.StreamingFormat.Default)));
                return Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual System.Threading.Tasks.Task<RemObjects.SDK.Types.Binary> AbreDataSetReportesAsync(string SQL, TParametrosF Parametros)
        {
            return System.Threading.Tasks.Task<RemObjects.SDK.Types.Binary>.Factory.FromAsync(this.BeginAbreDataSetReportes(SQL, Parametros, null, null), new System.Func<System.IAsyncResult, RemObjects.SDK.Types.Binary>(this.EndAbreDataSetReportes));
        }

        public virtual System.IAsyncResult BeginActualizaHistorial(TConsumo Consumo, System.AsyncCallback @__Callback, object @__UserData)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "ActualizaHistorial");
                @__LocalMessage.Write("Consumo", Consumo, typeof(TConsumo), RemObjects.SDK.StreamingFormat.Default);
                @__LocalMessage.FinalizeMessage();
                return ClientChannel.AsyncDispatch(@__LocalMessage, @__Callback, @__UserData);
            }
            catch (System.Exception ex)
            {
                this.@__ClearMessage(@__LocalMessage);
                throw ex;
            }
        }

        public virtual void EndActualizaHistorial(System.IAsyncResult @__AsyncResult)
        {
            RemObjects.SDK.IMessage @__LocalMessage = ((RemObjects.SDK.IClientAsyncResult)(@__AsyncResult)).Message;
            try
            {
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual System.Threading.Tasks.Task ActualizaHistorialAsync(TConsumo Consumo)
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(this.BeginActualizaHistorial(Consumo, null, null), new System.Action<System.IAsyncResult>(this.EndActualizaHistorial));
        }

        public virtual System.IAsyncResult BeginAfectarMovimientos(TMovimiento Movimiento, System.AsyncCallback @__Callback, object @__UserData)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "AfectarMovimientos");
                @__LocalMessage.Write("Movimiento", Movimiento, typeof(TMovimiento), RemObjects.SDK.StreamingFormat.Default);
                @__LocalMessage.FinalizeMessage();
                return ClientChannel.AsyncDispatch(@__LocalMessage, @__Callback, @__UserData);
            }
            catch (System.Exception ex)
            {
                this.@__ClearMessage(@__LocalMessage);
                throw ex;
            }
        }

        public virtual bool EndAfectarMovimientos(System.IAsyncResult @__AsyncResult)
        {
            RemObjects.SDK.IMessage @__LocalMessage = ((RemObjects.SDK.IClientAsyncResult)(@__AsyncResult)).Message;
            try
            {
                bool Result = @__LocalMessage.ReadBoolean("Result");
                return Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual System.Threading.Tasks.Task<bool> AfectarMovimientosAsync(TMovimiento Movimiento)
        {
            return System.Threading.Tasks.Task<bool>.Factory.FromAsync(this.BeginAfectarMovimientos(Movimiento, null, null), new System.Func<System.IAsyncResult, bool>(this.EndAfectarMovimientos));
        }

        public virtual System.IAsyncResult BeginAfectarSaldoDocumento(TSaldoDocumento SaldoDocumento, System.AsyncCallback @__Callback, object @__UserData)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "AfectarSaldoDocumento");
                @__LocalMessage.Write("SaldoDocumento", SaldoDocumento, typeof(TSaldoDocumento), RemObjects.SDK.StreamingFormat.Default);
                @__LocalMessage.FinalizeMessage();
                return ClientChannel.AsyncDispatch(@__LocalMessage, @__Callback, @__UserData);
            }
            catch (System.Exception ex)
            {
                this.@__ClearMessage(@__LocalMessage);
                throw ex;
            }
        }

        public virtual bool EndAfectarSaldoDocumento(System.IAsyncResult @__AsyncResult)
        {
            RemObjects.SDK.IMessage @__LocalMessage = ((RemObjects.SDK.IClientAsyncResult)(@__AsyncResult)).Message;
            try
            {
                bool Result = @__LocalMessage.ReadBoolean("Result");
                return Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual System.Threading.Tasks.Task<bool> AfectarSaldoDocumentoAsync(TSaldoDocumento SaldoDocumento)
        {
            return System.Threading.Tasks.Task<bool>.Factory.FromAsync(this.BeginAfectarSaldoDocumento(SaldoDocumento, null, null), new System.Func<System.IAsyncResult, bool>(this.EndAfectarSaldoDocumento));
        }

        public virtual System.IAsyncResult BeginAfiliacionBancaria(int EstacionID, System.AsyncCallback @__Callback, object @__UserData)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "AfiliacionBancaria");
                @__LocalMessage.WriteInt32("EstacionID", EstacionID);
                @__LocalMessage.FinalizeMessage();
                return ClientChannel.AsyncDispatch(@__LocalMessage, @__Callback, @__UserData);
            }
            catch (System.Exception ex)
            {
                this.@__ClearMessage(@__LocalMessage);
                throw ex;
            }
        }

        public virtual string EndAfiliacionBancaria(System.IAsyncResult @__AsyncResult)
        {
            RemObjects.SDK.IMessage @__LocalMessage = ((RemObjects.SDK.IClientAsyncResult)(@__AsyncResult)).Message;
            try
            {
                string Result = @__LocalMessage.ReadAnsiString("Result");
                return Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual System.Threading.Tasks.Task<string> AfiliacionBancariaAsync(int EstacionID)
        {
            return System.Threading.Tasks.Task<string>.Factory.FromAsync(this.BeginAfiliacionBancaria(EstacionID, null, null), new System.Func<System.IAsyncResult, string>(this.EndAfiliacionBancaria));
        }

        public virtual System.IAsyncResult BeginAgregaReferencia(int VehiculoID, int Tipo, string Referencia, System.AsyncCallback @__Callback, object @__UserData)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "AgregaReferencia");
                @__LocalMessage.WriteInt32("VehiculoID", VehiculoID);
                @__LocalMessage.WriteInt32("Tipo", Tipo);
                @__LocalMessage.WriteAnsiString("Referencia", Referencia);
                @__LocalMessage.FinalizeMessage();
                return ClientChannel.AsyncDispatch(@__LocalMessage, @__Callback, @__UserData);
            }
            catch (System.Exception ex)
            {
                this.@__ClearMessage(@__LocalMessage);
                throw ex;
            }
        }

        public virtual void EndAgregaReferencia(System.IAsyncResult @__AsyncResult)
        {
            RemObjects.SDK.IMessage @__LocalMessage = ((RemObjects.SDK.IClientAsyncResult)(@__AsyncResult)).Message;
            try
            {
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual System.Threading.Tasks.Task AgregaReferenciaAsync(int VehiculoID, int Tipo, string Referencia)
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(this.BeginAgregaReferencia(VehiculoID, Tipo, Referencia, null, null), new System.Action<System.IAsyncResult>(this.EndAgregaReferencia));
        }

        public virtual System.IAsyncResult BeginAgregaSecuencias(TConsumo[] Consumos, System.AsyncCallback @__Callback, object @__UserData)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "AgregaSecuencias");
                @__LocalMessage.Write("Consumos", Consumos, typeof(TConsumo[]), RemObjects.SDK.StreamingFormat.Default);
                @__LocalMessage.FinalizeMessage();
                return ClientChannel.AsyncDispatch(@__LocalMessage, @__Callback, @__UserData);
            }
            catch (System.Exception ex)
            {
                this.@__ClearMessage(@__LocalMessage);
                throw ex;
            }
        }

        public virtual bool EndAgregaSecuencias(System.IAsyncResult @__AsyncResult)
        {
            RemObjects.SDK.IMessage @__LocalMessage = ((RemObjects.SDK.IClientAsyncResult)(@__AsyncResult)).Message;
            try
            {
                bool Result = @__LocalMessage.ReadBoolean("Result");
                return Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual System.Threading.Tasks.Task<bool> AgregaSecuenciasAsync(TConsumo[] Consumos)
        {
            return System.Threading.Tasks.Task<bool>.Factory.FromAsync(this.BeginAgregaSecuencias(Consumos, null, null), new System.Func<System.IAsyncResult, bool>(this.EndAgregaSecuencias));
        }

        public virtual System.IAsyncResult BeginAsignaFechaCierre(System.DateTime Fecha, System.AsyncCallback @__Callback, object @__UserData)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "AsignaFechaCierre");
                @__LocalMessage.WriteDateTime("Fecha", Fecha);
                @__LocalMessage.FinalizeMessage();
                return ClientChannel.AsyncDispatch(@__LocalMessage, @__Callback, @__UserData);
            }
            catch (System.Exception ex)
            {
                this.@__ClearMessage(@__LocalMessage);
                throw ex;
            }
        }

        public virtual bool EndAsignaFechaCierre(System.IAsyncResult @__AsyncResult)
        {
            RemObjects.SDK.IMessage @__LocalMessage = ((RemObjects.SDK.IClientAsyncResult)(@__AsyncResult)).Message;
            try
            {
                bool Result = @__LocalMessage.ReadBoolean("Result");
                return Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual System.Threading.Tasks.Task<bool> AsignaFechaCierreAsync(System.DateTime Fecha)
        {
            return System.Threading.Tasks.Task<bool>.Factory.FromAsync(this.BeginAsignaFechaCierre(Fecha, null, null), new System.Func<System.IAsyncResult, bool>(this.EndAsignaFechaCierre));
        }

        public virtual System.IAsyncResult BeginAutorizaTarjeta(TAutoriza Autoriza, System.AsyncCallback @__Callback, object @__UserData)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "AutorizaTarjeta");
                @__LocalMessage.Write("Autoriza", Autoriza, typeof(TAutoriza), RemObjects.SDK.StreamingFormat.Default);
                @__LocalMessage.FinalizeMessage();
                return ClientChannel.AsyncDispatch(@__LocalMessage, @__Callback, @__UserData);
            }
            catch (System.Exception ex)
            {
                this.@__ClearMessage(@__LocalMessage);
                throw ex;
            }
        }

        public virtual TTarjeta EndAutorizaTarjeta(System.IAsyncResult @__AsyncResult)
        {
            RemObjects.SDK.IMessage @__LocalMessage = ((RemObjects.SDK.IClientAsyncResult)(@__AsyncResult)).Message;
            try
            {
                TTarjeta Result = ((TTarjeta)(@__LocalMessage.Read("Result", typeof(TTarjeta), RemObjects.SDK.StreamingFormat.Default)));
                return Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual System.Threading.Tasks.Task<TTarjeta> AutorizaTarjetaAsync(TAutoriza Autoriza)
        {
            return System.Threading.Tasks.Task<TTarjeta>.Factory.FromAsync(this.BeginAutorizaTarjeta(Autoriza, null, null), new System.Func<System.IAsyncResult, TTarjeta>(this.EndAutorizaTarjeta));
        }

        public virtual System.IAsyncResult BeginBancaria(string Params, int Banco, System.AsyncCallback @__Callback, object @__UserData)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "Bancaria");
                @__LocalMessage.WriteAnsiString("Params", Params);
                @__LocalMessage.WriteInt32("Banco", Banco);
                @__LocalMessage.FinalizeMessage();
                return ClientChannel.AsyncDispatch(@__LocalMessage, @__Callback, @__UserData);
            }
            catch (System.Exception ex)
            {
                this.@__ClearMessage(@__LocalMessage);
                throw ex;
            }
        }

        public virtual TBancaria EndBancaria(System.IAsyncResult @__AsyncResult)
        {
            RemObjects.SDK.IMessage @__LocalMessage = ((RemObjects.SDK.IClientAsyncResult)(@__AsyncResult)).Message;
            try
            {
                TBancaria Result = ((TBancaria)(@__LocalMessage.Read("Result", typeof(TBancaria), RemObjects.SDK.StreamingFormat.Default)));
                return Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual System.Threading.Tasks.Task<TBancaria> BancariaAsync(string Params, int Banco)
        {
            return System.Threading.Tasks.Task<TBancaria>.Factory.FromAsync(this.BeginBancaria(Params, Banco, null, null), new System.Func<System.IAsyncResult, TBancaria>(this.EndBancaria));
        }

        public virtual System.IAsyncResult BeginBuscaAutorizacionTajeta(int ClienteID, int VehiculoID, int GasolineroID, System.AsyncCallback @__Callback, object @__UserData)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "BuscaAutorizacionTajeta");
                @__LocalMessage.WriteInt32("ClienteID", ClienteID);
                @__LocalMessage.WriteInt32("VehiculoID", VehiculoID);
                @__LocalMessage.WriteInt32("GasolineroID", GasolineroID);
                @__LocalMessage.FinalizeMessage();
                return ClientChannel.AsyncDispatch(@__LocalMessage, @__Callback, @__UserData);
            }
            catch (System.Exception ex)
            {
                this.@__ClearMessage(@__LocalMessage);
                throw ex;
            }
        }

        public virtual bool EndBuscaAutorizacionTajeta(System.IAsyncResult @__AsyncResult)
        {
            RemObjects.SDK.IMessage @__LocalMessage = ((RemObjects.SDK.IClientAsyncResult)(@__AsyncResult)).Message;
            try
            {
                bool Result = @__LocalMessage.ReadBoolean("Result");
                return Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual System.Threading.Tasks.Task<bool> BuscaAutorizacionTajetaAsync(int ClienteID, int VehiculoID, int GasolineroID)
        {
            return System.Threading.Tasks.Task<bool>.Factory.FromAsync(this.BeginBuscaAutorizacionTajeta(ClienteID, VehiculoID, GasolineroID, null, null), new System.Func<System.IAsyncResult, bool>(this.EndBuscaAutorizacionTajeta));
        }

        public virtual System.IAsyncResult BeginBuscaReferenciaServicio(string Referencia, System.AsyncCallback @__Callback, object @__UserData)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "BuscaReferenciaServicio");
                @__LocalMessage.WriteAnsiString("Referencia", Referencia);
                @__LocalMessage.FinalizeMessage();
                return ClientChannel.AsyncDispatch(@__LocalMessage, @__Callback, @__UserData);
            }
            catch (System.Exception ex)
            {
                this.@__ClearMessage(@__LocalMessage);
                throw ex;
            }
        }

        public virtual bool EndBuscaReferenciaServicio(System.IAsyncResult @__AsyncResult)
        {
            RemObjects.SDK.IMessage @__LocalMessage = ((RemObjects.SDK.IClientAsyncResult)(@__AsyncResult)).Message;
            try
            {
                bool Result = @__LocalMessage.ReadBoolean("Result");
                return Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual System.Threading.Tasks.Task<bool> BuscaReferenciaServicioAsync(string Referencia)
        {
            return System.Threading.Tasks.Task<bool>.Factory.FromAsync(this.BeginBuscaReferenciaServicio(Referencia, null, null), new System.Func<System.IAsyncResult, bool>(this.EndBuscaReferenciaServicio));
        }

        public virtual System.IAsyncResult BeginBuscarReporte(string Nombre, System.AsyncCallback @__Callback, object @__UserData)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "BuscarReporte");
                @__LocalMessage.WriteAnsiString("Nombre", Nombre);
                @__LocalMessage.FinalizeMessage();
                return ClientChannel.AsyncDispatch(@__LocalMessage, @__Callback, @__UserData);
            }
            catch (System.Exception ex)
            {
                this.@__ClearMessage(@__LocalMessage);
                throw ex;
            }
        }

        public virtual TReporteF EndBuscarReporte(System.IAsyncResult @__AsyncResult)
        {
            RemObjects.SDK.IMessage @__LocalMessage = ((RemObjects.SDK.IClientAsyncResult)(@__AsyncResult)).Message;
            try
            {
                TReporteF Result = ((TReporteF)(@__LocalMessage.Read("Result", typeof(TReporteF), RemObjects.SDK.StreamingFormat.Default)));
                return Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual System.Threading.Tasks.Task<TReporteF> BuscarReporteAsync(string Nombre)
        {
            return System.Threading.Tasks.Task<TReporteF>.Factory.FromAsync(this.BeginBuscarReporte(Nombre, null, null), new System.Func<System.IAsyncResult, TReporteF>(this.EndBuscarReporte));
        }

        public virtual System.IAsyncResult BeginCambiaClienteConsumo(int EstacionID, int Ticket, string Serie, int ClienteID, int VehiculoID, System.AsyncCallback @__Callback, object @__UserData)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "CambiaClienteConsumo");
                @__LocalMessage.WriteInt32("EstacionID", EstacionID);
                @__LocalMessage.WriteInt32("Ticket", Ticket);
                @__LocalMessage.WriteAnsiString("Serie", Serie);
                @__LocalMessage.WriteInt32("ClienteID", ClienteID);
                @__LocalMessage.WriteInt32("VehiculoID", VehiculoID);
                @__LocalMessage.FinalizeMessage();
                return ClientChannel.AsyncDispatch(@__LocalMessage, @__Callback, @__UserData);
            }
            catch (System.Exception ex)
            {
                this.@__ClearMessage(@__LocalMessage);
                throw ex;
            }
        }

        public virtual bool EndCambiaClienteConsumo(System.IAsyncResult @__AsyncResult)
        {
            RemObjects.SDK.IMessage @__LocalMessage = ((RemObjects.SDK.IClientAsyncResult)(@__AsyncResult)).Message;
            try
            {
                bool Result = @__LocalMessage.ReadBoolean("Result");
                return Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual System.Threading.Tasks.Task<bool> CambiaClienteConsumoAsync(int EstacionID, int Ticket, string Serie, int ClienteID, int VehiculoID)
        {
            return System.Threading.Tasks.Task<bool>.Factory.FromAsync(this.BeginCambiaClienteConsumo(EstacionID, Ticket, Serie, ClienteID, VehiculoID, null, null), new System.Func<System.IAsyncResult, bool>(this.EndCambiaClienteConsumo));
        }

        public virtual System.IAsyncResult BeginCambiaNIP(string Referencia, int NIP, System.AsyncCallback @__Callback, object @__UserData)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "CambiaNIP");
                @__LocalMessage.WriteAnsiString("Referencia", Referencia);
                @__LocalMessage.WriteInt32("NIP", NIP);
                @__LocalMessage.FinalizeMessage();
                return ClientChannel.AsyncDispatch(@__LocalMessage, @__Callback, @__UserData);
            }
            catch (System.Exception ex)
            {
                this.@__ClearMessage(@__LocalMessage);
                throw ex;
            }
        }

        public virtual bool EndCambiaNIP(System.IAsyncResult @__AsyncResult)
        {
            RemObjects.SDK.IMessage @__LocalMessage = ((RemObjects.SDK.IClientAsyncResult)(@__AsyncResult)).Message;
            try
            {
                bool Result = @__LocalMessage.ReadBoolean("Result");
                return Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual System.Threading.Tasks.Task<bool> CambiaNIPAsync(string Referencia, int NIP)
        {
            return System.Threading.Tasks.Task<bool>.Factory.FromAsync(this.BeginCambiaNIP(Referencia, NIP, null, null), new System.Func<System.IAsyncResult, bool>(this.EndCambiaNIP));
        }

        public virtual System.IAsyncResult BeginCambioFactura(string Serie, int Folio, string NevaSerie, int NuevoFolio, System.DateTime FechaImpresion, System.AsyncCallback @__Callback, object @__UserData)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "CambioFactura");
                @__LocalMessage.WriteAnsiString("Serie", Serie);
                @__LocalMessage.WriteInt32("Folio", Folio);
                @__LocalMessage.WriteAnsiString("NevaSerie", NevaSerie);
                @__LocalMessage.WriteInt32("NuevoFolio", NuevoFolio);
                @__LocalMessage.WriteDateTime("FechaImpresion", FechaImpresion);
                @__LocalMessage.FinalizeMessage();
                return ClientChannel.AsyncDispatch(@__LocalMessage, @__Callback, @__UserData);
            }
            catch (System.Exception ex)
            {
                this.@__ClearMessage(@__LocalMessage);
                throw ex;
            }
        }

        public virtual string EndCambioFactura(System.IAsyncResult @__AsyncResult)
        {
            RemObjects.SDK.IMessage @__LocalMessage = ((RemObjects.SDK.IClientAsyncResult)(@__AsyncResult)).Message;
            try
            {
                string Result = @__LocalMessage.ReadAnsiString("Result");
                return Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual System.Threading.Tasks.Task<string> CambioFacturaAsync(string Serie, int Folio, string NevaSerie, int NuevoFolio, System.DateTime FechaImpresion)
        {
            return System.Threading.Tasks.Task<string>.Factory.FromAsync(this.BeginCambioFactura(Serie, Folio, NevaSerie, NuevoFolio, FechaImpresion, null, null), new System.Func<System.IAsyncResult, string>(this.EndCambioFactura));
        }

        public virtual System.IAsyncResult BeginCancelaGrupo(int Grupo, System.AsyncCallback @__Callback, object @__UserData)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "CancelaGrupo");
                @__LocalMessage.WriteInt32("Grupo", Grupo);
                @__LocalMessage.FinalizeMessage();
                return ClientChannel.AsyncDispatch(@__LocalMessage, @__Callback, @__UserData);
            }
            catch (System.Exception ex)
            {
                this.@__ClearMessage(@__LocalMessage);
                throw ex;
            }
        }

        public virtual bool EndCancelaGrupo(System.IAsyncResult @__AsyncResult)
        {
            RemObjects.SDK.IMessage @__LocalMessage = ((RemObjects.SDK.IClientAsyncResult)(@__AsyncResult)).Message;
            try
            {
                bool Result = @__LocalMessage.ReadBoolean("Result");
                return Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual System.Threading.Tasks.Task<bool> CancelaGrupoAsync(int Grupo)
        {
            return System.Threading.Tasks.Task<bool>.Factory.FromAsync(this.BeginCancelaGrupo(Grupo, null, null), new System.Func<System.IAsyncResult, bool>(this.EndCancelaGrupo));
        }

        public virtual System.IAsyncResult BeginCancelarCupones(string Lista, int UsuarioID, System.AsyncCallback @__Callback, object @__UserData)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "CancelarCupones");
                @__LocalMessage.WriteAnsiString("Lista", Lista);
                @__LocalMessage.WriteInt32("UsuarioID", UsuarioID);
                @__LocalMessage.FinalizeMessage();
                return ClientChannel.AsyncDispatch(@__LocalMessage, @__Callback, @__UserData);
            }
            catch (System.Exception ex)
            {
                this.@__ClearMessage(@__LocalMessage);
                throw ex;
            }
        }

        public virtual string EndCancelarCupones(System.IAsyncResult @__AsyncResult)
        {
            RemObjects.SDK.IMessage @__LocalMessage = ((RemObjects.SDK.IClientAsyncResult)(@__AsyncResult)).Message;
            try
            {
                string Result = @__LocalMessage.ReadAnsiString("Result");
                return Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual System.Threading.Tasks.Task<string> CancelarCuponesAsync(string Lista, int UsuarioID)
        {
            return System.Threading.Tasks.Task<string>.Factory.FromAsync(this.BeginCancelarCupones(Lista, UsuarioID, null, null), new System.Func<System.IAsyncResult, string>(this.EndCancelarCupones));
        }

        public virtual System.IAsyncResult BeginCancelarLote(int LoteID, int UsuarioID, System.AsyncCallback @__Callback, object @__UserData)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "CancelarLote");
                @__LocalMessage.WriteInt32("LoteID", LoteID);
                @__LocalMessage.WriteInt32("UsuarioID", UsuarioID);
                @__LocalMessage.FinalizeMessage();
                return ClientChannel.AsyncDispatch(@__LocalMessage, @__Callback, @__UserData);
            }
            catch (System.Exception ex)
            {
                this.@__ClearMessage(@__LocalMessage);
                throw ex;
            }
        }

        public virtual string EndCancelarLote(System.IAsyncResult @__AsyncResult)
        {
            RemObjects.SDK.IMessage @__LocalMessage = ((RemObjects.SDK.IClientAsyncResult)(@__AsyncResult)).Message;
            try
            {
                string Result = @__LocalMessage.ReadAnsiString("Result");
                return Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual System.Threading.Tasks.Task<string> CancelarLoteAsync(int LoteID, int UsuarioID)
        {
            return System.Threading.Tasks.Task<string>.Factory.FromAsync(this.BeginCancelarLote(LoteID, UsuarioID, null, null), new System.Func<System.IAsyncResult, string>(this.EndCancelarLote));
        }

        public virtual System.IAsyncResult BeginCaracteresCupon(System.AsyncCallback @__Callback, object @__UserData)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "CaracteresCupon");
                @__LocalMessage.FinalizeMessage();
                return ClientChannel.AsyncDispatch(@__LocalMessage, @__Callback, @__UserData);
            }
            catch (System.Exception ex)
            {
                this.@__ClearMessage(@__LocalMessage);
                throw ex;
            }
        }

        public virtual string EndCaracteresCupon(System.IAsyncResult @__AsyncResult)
        {
            RemObjects.SDK.IMessage @__LocalMessage = ((RemObjects.SDK.IClientAsyncResult)(@__AsyncResult)).Message;
            try
            {
                string Result = @__LocalMessage.ReadAnsiString("Result");
                return Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual System.Threading.Tasks.Task<string> CaracteresCuponAsync()
        {
            return System.Threading.Tasks.Task<string>.Factory.FromAsync(this.BeginCaracteresCupon(null, null), new System.Func<System.IAsyncResult, string>(this.EndCaracteresCupon));
        }

        public virtual System.IAsyncResult BeginCashBack(string Params, System.AsyncCallback @__Callback, object @__UserData)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "CashBack");
                @__LocalMessage.WriteAnsiString("Params", Params);
                @__LocalMessage.FinalizeMessage();
                return ClientChannel.AsyncDispatch(@__LocalMessage, @__Callback, @__UserData);
            }
            catch (System.Exception ex)
            {
                this.@__ClearMessage(@__LocalMessage);
                throw ex;
            }
        }

        public virtual TBancaria EndCashBack(System.IAsyncResult @__AsyncResult)
        {
            RemObjects.SDK.IMessage @__LocalMessage = ((RemObjects.SDK.IClientAsyncResult)(@__AsyncResult)).Message;
            try
            {
                TBancaria Result = ((TBancaria)(@__LocalMessage.Read("Result", typeof(TBancaria), RemObjects.SDK.StreamingFormat.Default)));
                return Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual System.Threading.Tasks.Task<TBancaria> CashBackAsync(string Params)
        {
            return System.Threading.Tasks.Task<TBancaria>.Factory.FromAsync(this.BeginCashBack(Params, null, null), new System.Func<System.IAsyncResult, TBancaria>(this.EndCashBack));
        }

        public virtual System.IAsyncResult BeginCierrePeriodo(int Periodo, int Ejercicio, int UsuarioID, System.AsyncCallback @__Callback, object @__UserData)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "CierrePeriodo");
                @__LocalMessage.WriteInt32("Periodo", Periodo);
                @__LocalMessage.WriteInt32("Ejercicio", Ejercicio);
                @__LocalMessage.WriteInt32("UsuarioID", UsuarioID);
                @__LocalMessage.FinalizeMessage();
                return ClientChannel.AsyncDispatch(@__LocalMessage, @__Callback, @__UserData);
            }
            catch (System.Exception ex)
            {
                this.@__ClearMessage(@__LocalMessage);
                throw ex;
            }
        }

        public virtual bool EndCierrePeriodo(System.IAsyncResult @__AsyncResult)
        {
            RemObjects.SDK.IMessage @__LocalMessage = ((RemObjects.SDK.IClientAsyncResult)(@__AsyncResult)).Message;
            try
            {
                bool Result = @__LocalMessage.ReadBoolean("Result");
                return Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual System.Threading.Tasks.Task<bool> CierrePeriodoAsync(int Periodo, int Ejercicio, int UsuarioID)
        {
            return System.Threading.Tasks.Task<bool>.Factory.FromAsync(this.BeginCierrePeriodo(Periodo, Ejercicio, UsuarioID, null, null), new System.Func<System.IAsyncResult, bool>(this.EndCierrePeriodo));
        }

        public virtual System.IAsyncResult BeginClasificacion(System.AsyncCallback @__Callback, object @__UserData)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "Clasificacion");
                @__LocalMessage.FinalizeMessage();
                return ClientChannel.AsyncDispatch(@__LocalMessage, @__Callback, @__UserData);
            }
            catch (System.Exception ex)
            {
                this.@__ClearMessage(@__LocalMessage);
                throw ex;
            }
        }

        public virtual double EndClasificacion(System.IAsyncResult @__AsyncResult)
        {
            RemObjects.SDK.IMessage @__LocalMessage = ((RemObjects.SDK.IClientAsyncResult)(@__AsyncResult)).Message;
            try
            {
                double Result = @__LocalMessage.ReadDouble("Result");
                return Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual System.Threading.Tasks.Task<double> ClasificacionAsync()
        {
            return System.Threading.Tasks.Task<double>.Factory.FromAsync(this.BeginClasificacion(null, null), new System.Func<System.IAsyncResult, double>(this.EndClasificacion));
        }

        public virtual System.IAsyncResult BeginClasificacionCliente(int ClienteID, double Clasificacion, System.AsyncCallback @__Callback, object @__UserData)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "ClasificacionCliente");
                @__LocalMessage.WriteInt32("ClienteID", ClienteID);
                @__LocalMessage.WriteDouble("Clasificacion", Clasificacion);
                @__LocalMessage.FinalizeMessage();
                return ClientChannel.AsyncDispatch(@__LocalMessage, @__Callback, @__UserData);
            }
            catch (System.Exception ex)
            {
                this.@__ClearMessage(@__LocalMessage);
                throw ex;
            }
        }

        public virtual void EndClasificacionCliente(System.IAsyncResult @__AsyncResult)
        {
            RemObjects.SDK.IMessage @__LocalMessage = ((RemObjects.SDK.IClientAsyncResult)(@__AsyncResult)).Message;
            try
            {
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual System.Threading.Tasks.Task ClasificacionClienteAsync(int ClienteID, double Clasificacion)
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(this.BeginClasificacionCliente(ClienteID, Clasificacion, null, null), new System.Action<System.IAsyncResult>(this.EndClasificacionCliente));
        }

        public virtual System.IAsyncResult BeginClasificacionVehiculo(int VehiculoID, double Clasificacion, System.AsyncCallback @__Callback, object @__UserData)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "ClasificacionVehiculo");
                @__LocalMessage.WriteInt32("VehiculoID", VehiculoID);
                @__LocalMessage.WriteDouble("Clasificacion", Clasificacion);
                @__LocalMessage.FinalizeMessage();
                return ClientChannel.AsyncDispatch(@__LocalMessage, @__Callback, @__UserData);
            }
            catch (System.Exception ex)
            {
                this.@__ClearMessage(@__LocalMessage);
                throw ex;
            }
        }

        public virtual void EndClasificacionVehiculo(System.IAsyncResult @__AsyncResult)
        {
            RemObjects.SDK.IMessage @__LocalMessage = ((RemObjects.SDK.IClientAsyncResult)(@__AsyncResult)).Message;
            try
            {
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual System.Threading.Tasks.Task ClasificacionVehiculoAsync(int VehiculoID, double Clasificacion)
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(this.BeginClasificacionVehiculo(VehiculoID, Clasificacion, null, null), new System.Action<System.IAsyncResult>(this.EndClasificacionVehiculo));
        }

        public virtual System.IAsyncResult BeginClaveACupon(string Clave, System.AsyncCallback @__Callback, object @__UserData)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "ClaveACupon");
                @__LocalMessage.WriteAnsiString("Clave", Clave);
                @__LocalMessage.FinalizeMessage();
                return ClientChannel.AsyncDispatch(@__LocalMessage, @__Callback, @__UserData);
            }
            catch (System.Exception ex)
            {
                this.@__ClearMessage(@__LocalMessage);
                throw ex;
            }
        }

        public virtual int EndClaveACupon(System.IAsyncResult @__AsyncResult)
        {
            RemObjects.SDK.IMessage @__LocalMessage = ((RemObjects.SDK.IClientAsyncResult)(@__AsyncResult)).Message;
            try
            {
                int Result = @__LocalMessage.ReadInt32("Result");
                return Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual System.Threading.Tasks.Task<int> ClaveACuponAsync(string Clave)
        {
            return System.Threading.Tasks.Task<int>.Factory.FromAsync(this.BeginClaveACupon(Clave, null, null), new System.Func<System.IAsyncResult, int>(this.EndClaveACupon));
        }

        public virtual System.IAsyncResult BeginCuponManual(int EstacionID, int TurnoID, int BombaID, string Barras, System.AsyncCallback @__Callback, object @__UserData)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "CuponManual");
                @__LocalMessage.WriteInt32("EstacionID", EstacionID);
                @__LocalMessage.WriteInt32("TurnoID", TurnoID);
                @__LocalMessage.WriteInt32("BombaID", BombaID);
                @__LocalMessage.WriteAnsiString("Barras", Barras);
                @__LocalMessage.FinalizeMessage();
                return ClientChannel.AsyncDispatch(@__LocalMessage, @__Callback, @__UserData);
            }
            catch (System.Exception ex)
            {
                this.@__ClearMessage(@__LocalMessage);
                throw ex;
            }
        }

        public virtual TCuponValido EndCuponManual(System.IAsyncResult @__AsyncResult)
        {
            RemObjects.SDK.IMessage @__LocalMessage = ((RemObjects.SDK.IClientAsyncResult)(@__AsyncResult)).Message;
            try
            {
                TCuponValido Result = ((TCuponValido)(@__LocalMessage.Read("Result", typeof(TCuponValido), RemObjects.SDK.StreamingFormat.Default)));
                return Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual System.Threading.Tasks.Task<TCuponValido> CuponManualAsync(int EstacionID, int TurnoID, int BombaID, string Barras)
        {
            return System.Threading.Tasks.Task<TCuponValido>.Factory.FromAsync(this.BeginCuponManual(EstacionID, TurnoID, BombaID, Barras, null, null), new System.Func<System.IAsyncResult, TCuponValido>(this.EndCuponManual));
        }

        public virtual System.IAsyncResult BeginDatosCliente(int ClienteID, System.AsyncCallback @__Callback, object @__UserData)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "DatosCliente");
                @__LocalMessage.WriteInt32("ClienteID", ClienteID);
                @__LocalMessage.FinalizeMessage();
                return ClientChannel.AsyncDispatch(@__LocalMessage, @__Callback, @__UserData);
            }
            catch (System.Exception ex)
            {
                this.@__ClearMessage(@__LocalMessage);
                throw ex;
            }
        }
        /*
        public virtual TCliente EndDatosCliente(System.IAsyncResult @__AsyncResult)
        {
            RemObjects.SDK.IMessage @__LocalMessage = ((RemObjects.SDK.IClientAsyncResult)(@__AsyncResult)).Message;
            try
            {
                TCliente Result = ((TCliente)(@__LocalMessage.Read("Result", typeof(TCliente), RemObjects.SDK.StreamingFormat.Default)));
                return Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }
        
        public virtual System.Threading.Tasks.Task<TCliente> DatosClienteAsync(int ClienteID)
        {
            return System.Threading.Tasks.Task<TCliente>.Factory.FromAsync(this.BeginDatosCliente(ClienteID, null, null), new System.Func<System.IAsyncResult, TCliente>(this.EndDatosCliente));
        }
        */
        public virtual System.IAsyncResult BeginDatosClienteOtros(string Tarjeta, int EstacionID, System.AsyncCallback @__Callback, object @__UserData)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "DatosClienteOtros");
                @__LocalMessage.WriteAnsiString("Tarjeta", Tarjeta);
                @__LocalMessage.WriteInt32("EstacionID", EstacionID);
                @__LocalMessage.FinalizeMessage();
                return ClientChannel.AsyncDispatch(@__LocalMessage, @__Callback, @__UserData);
            }
            catch (System.Exception ex)
            {
                this.@__ClearMessage(@__LocalMessage);
                throw ex;
            }
        }

        public virtual TDatosClienteOtros EndDatosClienteOtros(System.IAsyncResult @__AsyncResult)
        {
            RemObjects.SDK.IMessage @__LocalMessage = ((RemObjects.SDK.IClientAsyncResult)(@__AsyncResult)).Message;
            try
            {
                TDatosClienteOtros Result = ((TDatosClienteOtros)(@__LocalMessage.Read("Result", typeof(TDatosClienteOtros), RemObjects.SDK.StreamingFormat.Default)));
                return Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual System.Threading.Tasks.Task<TDatosClienteOtros> DatosClienteOtrosAsync(string Tarjeta, int EstacionID)
        {
            return System.Threading.Tasks.Task<TDatosClienteOtros>.Factory.FromAsync(this.BeginDatosClienteOtros(Tarjeta, EstacionID, null, null), new System.Func<System.IAsyncResult, TDatosClienteOtros>(this.EndDatosClienteOtros));
        }

        public virtual System.IAsyncResult BeginDatosFactura(int Folio, string Serie, System.AsyncCallback @__Callback, object @__UserData)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "DatosFactura");
                @__LocalMessage.WriteInt32("Folio", Folio);
                @__LocalMessage.WriteAnsiString("Serie", Serie);
                @__LocalMessage.FinalizeMessage();
                return ClientChannel.AsyncDispatch(@__LocalMessage, @__Callback, @__UserData);
            }
            catch (System.Exception ex)
            {
                this.@__ClearMessage(@__LocalMessage);
                throw ex;
            }
        }

        public virtual bool EndDatosFactura(System.IAsyncResult @__AsyncResult)
        {
            RemObjects.SDK.IMessage @__LocalMessage = ((RemObjects.SDK.IClientAsyncResult)(@__AsyncResult)).Message;
            try
            {
                bool Result = @__LocalMessage.ReadBoolean("Result");
                return Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual System.Threading.Tasks.Task<bool> DatosFacturaAsync(int Folio, string Serie)
        {
            return System.Threading.Tasks.Task<bool>.Factory.FromAsync(this.BeginDatosFactura(Folio, Serie, null, null), new System.Func<System.IAsyncResult, bool>(this.EndDatosFactura));
        }

        public virtual System.IAsyncResult BeginDatosProducto(int ID, System.AsyncCallback @__Callback, object @__UserData)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "DatosProducto");
                @__LocalMessage.WriteInt32("ID", ID);
                @__LocalMessage.FinalizeMessage();
                return ClientChannel.AsyncDispatch(@__LocalMessage, @__Callback, @__UserData);
            }
            catch (System.Exception ex)
            {
                this.@__ClearMessage(@__LocalMessage);
                throw ex;
            }
        }

        public virtual TProductoF EndDatosProducto(System.IAsyncResult @__AsyncResult)
        {
            RemObjects.SDK.IMessage @__LocalMessage = ((RemObjects.SDK.IClientAsyncResult)(@__AsyncResult)).Message;
            try
            {
                TProductoF Result = ((TProductoF)(@__LocalMessage.Read("Result", typeof(TProductoF), RemObjects.SDK.StreamingFormat.Default)));
                return Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual System.Threading.Tasks.Task<TProductoF> DatosProductoAsync(int ID)
        {
            return System.Threading.Tasks.Task<TProductoF>.Factory.FromAsync(this.BeginDatosProducto(ID, null, null), new System.Func<System.IAsyncResult, TProductoF>(this.EndDatosProducto));
        }

        public virtual System.IAsyncResult BeginDatosServicio(int ServicioID, string Referencia, System.AsyncCallback @__Callback, object @__UserData)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "DatosServicio");
                @__LocalMessage.WriteInt32("ServicioID", ServicioID);
                @__LocalMessage.WriteAnsiString("Referencia", Referencia);
                @__LocalMessage.FinalizeMessage();
                return ClientChannel.AsyncDispatch(@__LocalMessage, @__Callback, @__UserData);
            }
            catch (System.Exception ex)
            {
                this.@__ClearMessage(@__LocalMessage);
                throw ex;
            }
        }

        public virtual TDatosServicio EndDatosServicio(System.IAsyncResult @__AsyncResult)
        {
            RemObjects.SDK.IMessage @__LocalMessage = ((RemObjects.SDK.IClientAsyncResult)(@__AsyncResult)).Message;
            try
            {
                TDatosServicio Result = ((TDatosServicio)(@__LocalMessage.Read("Result", typeof(TDatosServicio), RemObjects.SDK.StreamingFormat.Default)));
                return Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual System.Threading.Tasks.Task<TDatosServicio> DatosServicioAsync(int ServicioID, string Referencia)
        {
            return System.Threading.Tasks.Task<TDatosServicio>.Factory.FromAsync(this.BeginDatosServicio(ServicioID, Referencia, null, null), new System.Func<System.IAsyncResult, TDatosServicio>(this.EndDatosServicio));
        }

        public virtual System.IAsyncResult BeginDatosVehiculo(int VehiculoID, System.AsyncCallback @__Callback, object @__UserData)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "DatosVehiculo");
                @__LocalMessage.WriteInt32("VehiculoID", VehiculoID);
                @__LocalMessage.FinalizeMessage();
                return ClientChannel.AsyncDispatch(@__LocalMessage, @__Callback, @__UserData);
            }
            catch (System.Exception ex)
            {
                this.@__ClearMessage(@__LocalMessage);
                throw ex;
            }
        }

        public virtual TDatosVehiculo EndDatosVehiculo(System.IAsyncResult @__AsyncResult)
        {
            RemObjects.SDK.IMessage @__LocalMessage = ((RemObjects.SDK.IClientAsyncResult)(@__AsyncResult)).Message;
            try
            {
                TDatosVehiculo Result = ((TDatosVehiculo)(@__LocalMessage.Read("Result", typeof(TDatosVehiculo), RemObjects.SDK.StreamingFormat.Default)));
                return Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual System.Threading.Tasks.Task<TDatosVehiculo> DatosVehiculoAsync(int VehiculoID)
        {
            return System.Threading.Tasks.Task<TDatosVehiculo>.Factory.FromAsync(this.BeginDatosVehiculo(VehiculoID, null, null), new System.Func<System.IAsyncResult, TDatosVehiculo>(this.EndDatosVehiculo));
        }

        public virtual System.IAsyncResult BeginDatosVerifica(int VehiculoID, System.AsyncCallback @__Callback, object @__UserData)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "DatosVerifica");
                @__LocalMessage.WriteInt32("VehiculoID", VehiculoID);
                @__LocalMessage.FinalizeMessage();
                return ClientChannel.AsyncDispatch(@__LocalMessage, @__Callback, @__UserData);
            }
            catch (System.Exception ex)
            {
                this.@__ClearMessage(@__LocalMessage);
                throw ex;
            }
        }

        public virtual TDatosVerifica EndDatosVerifica(System.IAsyncResult @__AsyncResult)
        {
            RemObjects.SDK.IMessage @__LocalMessage = ((RemObjects.SDK.IClientAsyncResult)(@__AsyncResult)).Message;
            try
            {
                TDatosVerifica Result = ((TDatosVerifica)(@__LocalMessage.Read("Result", typeof(TDatosVerifica), RemObjects.SDK.StreamingFormat.Default)));
                return Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual System.Threading.Tasks.Task<TDatosVerifica> DatosVerificaAsync(int VehiculoID)
        {
            return System.Threading.Tasks.Task<TDatosVerifica>.Factory.FromAsync(this.BeginDatosVerifica(VehiculoID, null, null), new System.Func<System.IAsyncResult, TDatosVerifica>(this.EndDatosVerifica));
        }

        public virtual System.IAsyncResult BeginDatosVerificaReferencia(string Referencia, System.AsyncCallback @__Callback, object @__UserData)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "DatosVerificaReferencia");
                @__LocalMessage.WriteAnsiString("Referencia", Referencia);
                @__LocalMessage.FinalizeMessage();
                return ClientChannel.AsyncDispatch(@__LocalMessage, @__Callback, @__UserData);
            }
            catch (System.Exception ex)
            {
                this.@__ClearMessage(@__LocalMessage);
                throw ex;
            }
        }

        public virtual TDatosVerifica EndDatosVerificaReferencia(System.IAsyncResult @__AsyncResult)
        {
            RemObjects.SDK.IMessage @__LocalMessage = ((RemObjects.SDK.IClientAsyncResult)(@__AsyncResult)).Message;
            try
            {
                TDatosVerifica Result = ((TDatosVerifica)(@__LocalMessage.Read("Result", typeof(TDatosVerifica), RemObjects.SDK.StreamingFormat.Default)));
                return Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual System.Threading.Tasks.Task<TDatosVerifica> DatosVerificaReferenciaAsync(string Referencia)
        {
            return System.Threading.Tasks.Task<TDatosVerifica>.Factory.FromAsync(this.BeginDatosVerificaReferencia(Referencia, null, null), new System.Func<System.IAsyncResult, TDatosVerifica>(this.EndDatosVerificaReferencia));
        }

        public virtual System.IAsyncResult BeginDatosVerifone(int VehiculoID, string Referencia, System.AsyncCallback @__Callback, object @__UserData)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "DatosVerifone");
                @__LocalMessage.WriteInt32("VehiculoID", VehiculoID);
                @__LocalMessage.WriteAnsiString("Referencia", Referencia);
                @__LocalMessage.FinalizeMessage();
                return ClientChannel.AsyncDispatch(@__LocalMessage, @__Callback, @__UserData);
            }
            catch (System.Exception ex)
            {
                this.@__ClearMessage(@__LocalMessage);
                throw ex;
            }
        }

        public virtual TDatosVerifoneF EndDatosVerifone(System.IAsyncResult @__AsyncResult)
        {
            RemObjects.SDK.IMessage @__LocalMessage = ((RemObjects.SDK.IClientAsyncResult)(@__AsyncResult)).Message;
            try
            {
                TDatosVerifoneF Result = ((TDatosVerifoneF)(@__LocalMessage.Read("Result", typeof(TDatosVerifoneF), RemObjects.SDK.StreamingFormat.Default)));
                return Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual System.Threading.Tasks.Task<TDatosVerifoneF> DatosVerifoneAsync(int VehiculoID, string Referencia)
        {
            return System.Threading.Tasks.Task<TDatosVerifoneF>.Factory.FromAsync(this.BeginDatosVerifone(VehiculoID, Referencia, null, null), new System.Func<System.IAsyncResult, TDatosVerifoneF>(this.EndDatosVerifone));
        }

        public virtual System.IAsyncResult BeginDocumentosConSaldo(int ClienteID, System.AsyncCallback @__Callback, object @__UserData)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "DocumentosConSaldo");
                @__LocalMessage.WriteInt32("ClienteID", ClienteID);
                @__LocalMessage.FinalizeMessage();
                return ClientChannel.AsyncDispatch(@__LocalMessage, @__Callback, @__UserData);
            }
            catch (System.Exception ex)
            {
                this.@__ClearMessage(@__LocalMessage);
                throw ex;
            }
        }

        public virtual TDocumentosConSaldo[] EndDocumentosConSaldo(System.IAsyncResult @__AsyncResult)
        {
            RemObjects.SDK.IMessage @__LocalMessage = ((RemObjects.SDK.IClientAsyncResult)(@__AsyncResult)).Message;
            try
            {
                TDocumentosConSaldo[] Result = ((TDocumentosConSaldo[])(@__LocalMessage.Read("Result", typeof(TDocumentosConSaldo[]), RemObjects.SDK.StreamingFormat.Default)));
                return Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual System.Threading.Tasks.Task<TDocumentosConSaldo[]> DocumentosConSaldoAsync(int ClienteID)
        {
            return System.Threading.Tasks.Task<TDocumentosConSaldo[]>.Factory.FromAsync(this.BeginDocumentosConSaldo(ClienteID, null, null), new System.Func<System.IAsyncResult, TDocumentosConSaldo[]>(this.EndDocumentosConSaldo));
        }

        public virtual System.IAsyncResult BeginEliminaAutorizacion(int AutorizacionID, System.AsyncCallback @__Callback, object @__UserData)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "EliminaAutorizacion");
                @__LocalMessage.WriteInt32("AutorizacionID", AutorizacionID);
                @__LocalMessage.FinalizeMessage();
                return ClientChannel.AsyncDispatch(@__LocalMessage, @__Callback, @__UserData);
            }
            catch (System.Exception ex)
            {
                this.@__ClearMessage(@__LocalMessage);
                throw ex;
            }
        }

        public virtual void EndEliminaAutorizacion(System.IAsyncResult @__AsyncResult)
        {
            RemObjects.SDK.IMessage @__LocalMessage = ((RemObjects.SDK.IClientAsyncResult)(@__AsyncResult)).Message;
            try
            {
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual System.Threading.Tasks.Task EliminaAutorizacionAsync(int AutorizacionID)
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(this.BeginEliminaAutorizacion(AutorizacionID, null, null), new System.Action<System.IAsyncResult>(this.EndEliminaAutorizacion));
        }

        public virtual System.IAsyncResult BeginEliminaAutorizacionVehiculo(int ClienteID, int VehiculoID, int GasolineroID, System.AsyncCallback @__Callback, object @__UserData)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "EliminaAutorizacionVehiculo");
                @__LocalMessage.WriteInt32("ClienteID", ClienteID);
                @__LocalMessage.WriteInt32("VehiculoID", VehiculoID);
                @__LocalMessage.WriteInt32("GasolineroID", GasolineroID);
                @__LocalMessage.FinalizeMessage();
                return ClientChannel.AsyncDispatch(@__LocalMessage, @__Callback, @__UserData);
            }
            catch (System.Exception ex)
            {
                this.@__ClearMessage(@__LocalMessage);
                throw ex;
            }
        }

        public virtual bool EndEliminaAutorizacionVehiculo(System.IAsyncResult @__AsyncResult)
        {
            RemObjects.SDK.IMessage @__LocalMessage = ((RemObjects.SDK.IClientAsyncResult)(@__AsyncResult)).Message;
            try
            {
                bool Result = @__LocalMessage.ReadBoolean("Result");
                return Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual System.Threading.Tasks.Task<bool> EliminaAutorizacionVehiculoAsync(int ClienteID, int VehiculoID, int GasolineroID)
        {
            return System.Threading.Tasks.Task<bool>.Factory.FromAsync(this.BeginEliminaAutorizacionVehiculo(ClienteID, VehiculoID, GasolineroID, null, null), new System.Func<System.IAsyncResult, bool>(this.EndEliminaAutorizacionVehiculo));
        }

        public virtual System.IAsyncResult BeginEliminaFactura(int Folio, string Serie, System.AsyncCallback @__Callback, object @__UserData)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "EliminaFactura");
                @__LocalMessage.WriteInt32("Folio", Folio);
                @__LocalMessage.WriteAnsiString("Serie", Serie);
                @__LocalMessage.FinalizeMessage();
                return ClientChannel.AsyncDispatch(@__LocalMessage, @__Callback, @__UserData);
            }
            catch (System.Exception ex)
            {
                this.@__ClearMessage(@__LocalMessage);
                throw ex;
            }
        }

        public virtual bool EndEliminaFactura(System.IAsyncResult @__AsyncResult)
        {
            RemObjects.SDK.IMessage @__LocalMessage = ((RemObjects.SDK.IClientAsyncResult)(@__AsyncResult)).Message;
            try
            {
                bool Result = @__LocalMessage.ReadBoolean("Result");
                return Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual System.Threading.Tasks.Task<bool> EliminaFacturaAsync(int Folio, string Serie)
        {
            return System.Threading.Tasks.Task<bool>.Factory.FromAsync(this.BeginEliminaFactura(Folio, Serie, null, null), new System.Func<System.IAsyncResult, bool>(this.EndEliminaFactura));
        }

        public virtual System.IAsyncResult BeginEliminaRecibo(int ReciboID, int UsuarioID, System.AsyncCallback @__Callback, object @__UserData)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "EliminaRecibo");
                @__LocalMessage.WriteInt32("ReciboID", ReciboID);
                @__LocalMessage.WriteInt32("UsuarioID", UsuarioID);
                @__LocalMessage.FinalizeMessage();
                return ClientChannel.AsyncDispatch(@__LocalMessage, @__Callback, @__UserData);
            }
            catch (System.Exception ex)
            {
                this.@__ClearMessage(@__LocalMessage);
                throw ex;
            }
        }

        public virtual string EndEliminaRecibo(System.IAsyncResult @__AsyncResult)
        {
            RemObjects.SDK.IMessage @__LocalMessage = ((RemObjects.SDK.IClientAsyncResult)(@__AsyncResult)).Message;
            try
            {
                string Result = @__LocalMessage.ReadAnsiString("Result");
                return Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual System.Threading.Tasks.Task<string> EliminaReciboAsync(int ReciboID, int UsuarioID)
        {
            return System.Threading.Tasks.Task<string>.Factory.FromAsync(this.BeginEliminaRecibo(ReciboID, UsuarioID, null, null), new System.Func<System.IAsyncResult, string>(this.EndEliminaRecibo));
        }

        public virtual System.IAsyncResult BeginEliminaReferencia(int VehiculoID, int Tipo, System.AsyncCallback @__Callback, object @__UserData)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "EliminaReferencia");
                @__LocalMessage.WriteInt32("VehiculoID", VehiculoID);
                @__LocalMessage.WriteInt32("Tipo", Tipo);
                @__LocalMessage.FinalizeMessage();
                return ClientChannel.AsyncDispatch(@__LocalMessage, @__Callback, @__UserData);
            }
            catch (System.Exception ex)
            {
                this.@__ClearMessage(@__LocalMessage);
                throw ex;
            }
        }

        public virtual void EndEliminaReferencia(System.IAsyncResult @__AsyncResult)
        {
            RemObjects.SDK.IMessage @__LocalMessage = ((RemObjects.SDK.IClientAsyncResult)(@__AsyncResult)).Message;
            try
            {
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual System.Threading.Tasks.Task EliminaReferenciaAsync(int VehiculoID, int Tipo)
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(this.BeginEliminaReferencia(VehiculoID, Tipo, null, null), new System.Action<System.IAsyncResult>(this.EndEliminaReferencia));
        }

        public virtual System.IAsyncResult BeginEliminaVehiculoProducto(int VehiculoID, int ProductoID, System.AsyncCallback @__Callback, object @__UserData)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "EliminaVehiculoProducto");
                @__LocalMessage.WriteInt32("VehiculoID", VehiculoID);
                @__LocalMessage.WriteInt32("ProductoID", ProductoID);
                @__LocalMessage.FinalizeMessage();
                return ClientChannel.AsyncDispatch(@__LocalMessage, @__Callback, @__UserData);
            }
            catch (System.Exception ex)
            {
                this.@__ClearMessage(@__LocalMessage);
                throw ex;
            }
        }

        public virtual void EndEliminaVehiculoProducto(System.IAsyncResult @__AsyncResult)
        {
            RemObjects.SDK.IMessage @__LocalMessage = ((RemObjects.SDK.IClientAsyncResult)(@__AsyncResult)).Message;
            try
            {
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual System.Threading.Tasks.Task EliminaVehiculoProductoAsync(int VehiculoID, int ProductoID)
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(this.BeginEliminaVehiculoProducto(VehiculoID, ProductoID, null, null), new System.Action<System.IAsyncResult>(this.EndEliminaVehiculoProducto));
        }

        public virtual System.IAsyncResult BeginFacturaElectronica(string Serie, int Folio, bool ConIEPS, System.AsyncCallback @__Callback, object @__UserData)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "FacturaElectronica");
                @__LocalMessage.WriteAnsiString("Serie", Serie);
                @__LocalMessage.WriteInt32("Folio", Folio);
                @__LocalMessage.WriteBoolean("ConIEPS", ConIEPS);
                @__LocalMessage.FinalizeMessage();
                return ClientChannel.AsyncDispatch(@__LocalMessage, @__Callback, @__UserData);
            }
            catch (System.Exception ex)
            {
                this.@__ClearMessage(@__LocalMessage);
                throw ex;
            }
        }

        public virtual TDatosFacturaEF EndFacturaElectronica(System.IAsyncResult @__AsyncResult)
        {
            RemObjects.SDK.IMessage @__LocalMessage = ((RemObjects.SDK.IClientAsyncResult)(@__AsyncResult)).Message;
            try
            {
                TDatosFacturaEF Result = ((TDatosFacturaEF)(@__LocalMessage.Read("Result", typeof(TDatosFacturaEF), RemObjects.SDK.StreamingFormat.Default)));
                return Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual System.Threading.Tasks.Task<TDatosFacturaEF> FacturaElectronicaAsync(string Serie, int Folio, bool ConIEPS)
        {
            return System.Threading.Tasks.Task<TDatosFacturaEF>.Factory.FromAsync(this.BeginFacturaElectronica(Serie, Folio, ConIEPS, null, null), new System.Func<System.IAsyncResult, TDatosFacturaEF>(this.EndFacturaElectronica));
        }

        public virtual System.IAsyncResult BeginFacturaRecibo(int Cliente, double Importe, int EstacionID, int EmpleadoID, string SerieFactura, int ProductoID, double Precio, int ReciboID, System.DateTime FechaFactura, System.AsyncCallback @__Callback, object @__UserData)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "FacturaRecibo");
                @__LocalMessage.WriteInt32("Cliente", Cliente);
                @__LocalMessage.WriteDouble("Importe", Importe);
                @__LocalMessage.WriteInt32("EstacionID", EstacionID);
                @__LocalMessage.WriteInt32("EmpleadoID", EmpleadoID);
                @__LocalMessage.WriteAnsiString("SerieFactura", SerieFactura);
                @__LocalMessage.WriteInt32("ProductoID", ProductoID);
                @__LocalMessage.WriteDouble("Precio", Precio);
                @__LocalMessage.WriteInt32("ReciboID", ReciboID);
                @__LocalMessage.WriteDateTime("FechaFactura", FechaFactura);
                @__LocalMessage.FinalizeMessage();
                return ClientChannel.AsyncDispatch(@__LocalMessage, @__Callback, @__UserData);
            }
            catch (System.Exception ex)
            {
                this.@__ClearMessage(@__LocalMessage);
                throw ex;
            }
        }

        public virtual int EndFacturaRecibo(System.IAsyncResult @__AsyncResult)
        {
            RemObjects.SDK.IMessage @__LocalMessage = ((RemObjects.SDK.IClientAsyncResult)(@__AsyncResult)).Message;
            try
            {
                int Result = @__LocalMessage.ReadInt32("Result");
                return Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual System.Threading.Tasks.Task<int> FacturaReciboAsync(int Cliente, double Importe, int EstacionID, int EmpleadoID, string SerieFactura, int ProductoID, double Precio, int ReciboID, System.DateTime FechaFactura)
        {
            return System.Threading.Tasks.Task<int>.Factory.FromAsync(this.BeginFacturaRecibo(Cliente, Importe, EstacionID, EmpleadoID, SerieFactura, ProductoID, Precio, ReciboID, FechaFactura, null, null), new System.Func<System.IAsyncResult, int>(this.EndFacturaRecibo));
        }

        public virtual System.IAsyncResult BeginFecha(System.AsyncCallback @__Callback, object @__UserData)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "Fecha");
                @__LocalMessage.FinalizeMessage();
                return ClientChannel.AsyncDispatch(@__LocalMessage, @__Callback, @__UserData);
            }
            catch (System.Exception ex)
            {
                this.@__ClearMessage(@__LocalMessage);
                throw ex;
            }
        }

        public virtual System.DateTime EndFecha(System.IAsyncResult @__AsyncResult)
        {
            RemObjects.SDK.IMessage @__LocalMessage = ((RemObjects.SDK.IClientAsyncResult)(@__AsyncResult)).Message;
            try
            {
                System.DateTime Result = @__LocalMessage.ReadDateTime("Result");
                return Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual System.Threading.Tasks.Task<System.DateTime> FechaAsync()
        {
            return System.Threading.Tasks.Task<System.DateTime>.Factory.FromAsync(this.BeginFecha(null, null), new System.Func<System.IAsyncResult, System.DateTime>(this.EndFecha));
        }

        public virtual System.IAsyncResult BeginFechaCierre(System.AsyncCallback @__Callback, object @__UserData)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "FechaCierre");
                @__LocalMessage.FinalizeMessage();
                return ClientChannel.AsyncDispatch(@__LocalMessage, @__Callback, @__UserData);
            }
            catch (System.Exception ex)
            {
                this.@__ClearMessage(@__LocalMessage);
                throw ex;
            }
        }

        public virtual System.DateTime EndFechaCierre(System.IAsyncResult @__AsyncResult)
        {
            RemObjects.SDK.IMessage @__LocalMessage = ((RemObjects.SDK.IClientAsyncResult)(@__AsyncResult)).Message;
            try
            {
                System.DateTime Result = @__LocalMessage.ReadDateTime("Result");
                return Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual System.Threading.Tasks.Task<System.DateTime> FechaCierreAsync()
        {
            return System.Threading.Tasks.Task<System.DateTime>.Factory.FromAsync(this.BeginFechaCierre(null, null), new System.Func<System.IAsyncResult, System.DateTime>(this.EndFechaCierre));
        }

        public virtual System.IAsyncResult BeginFechaValida(System.DateTime Fecha, System.AsyncCallback @__Callback, object @__UserData)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "FechaValida");
                @__LocalMessage.WriteDateTime("Fecha", Fecha);
                @__LocalMessage.FinalizeMessage();
                return ClientChannel.AsyncDispatch(@__LocalMessage, @__Callback, @__UserData);
            }
            catch (System.Exception ex)
            {
                this.@__ClearMessage(@__LocalMessage);
                throw ex;
            }
        }

        public virtual bool EndFechaValida(System.IAsyncResult @__AsyncResult)
        {
            RemObjects.SDK.IMessage @__LocalMessage = ((RemObjects.SDK.IClientAsyncResult)(@__AsyncResult)).Message;
            try
            {
                bool Result = @__LocalMessage.ReadBoolean("Result");
                return Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual System.Threading.Tasks.Task<bool> FechaValidaAsync(System.DateTime Fecha)
        {
            return System.Threading.Tasks.Task<bool>.Factory.FromAsync(this.BeginFechaValida(Fecha, null, null), new System.Func<System.IAsyncResult, bool>(this.EndFechaValida));
        }

        public virtual System.IAsyncResult BeginFolio(string Campo, string Serie, System.AsyncCallback @__Callback, object @__UserData)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "Folio");
                @__LocalMessage.WriteAnsiString("Campo", Campo);
                @__LocalMessage.WriteAnsiString("Serie", Serie);
                @__LocalMessage.FinalizeMessage();
                return ClientChannel.AsyncDispatch(@__LocalMessage, @__Callback, @__UserData);
            }
            catch (System.Exception ex)
            {
                this.@__ClearMessage(@__LocalMessage);
                throw ex;
            }
        }

        public virtual int EndFolio(System.IAsyncResult @__AsyncResult)
        {
            RemObjects.SDK.IMessage @__LocalMessage = ((RemObjects.SDK.IClientAsyncResult)(@__AsyncResult)).Message;
            try
            {
                int Result = @__LocalMessage.ReadInt32("Result");
                return Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual System.Threading.Tasks.Task<int> FolioAsync(string Campo, string Serie)
        {
            return System.Threading.Tasks.Task<int>.Factory.FromAsync(this.BeginFolio(Campo, Serie, null, null), new System.Func<System.IAsyncResult, int>(this.EndFolio));
        }

        public virtual System.IAsyncResult BeginGasolineroID(System.AsyncCallback @__Callback, object @__UserData)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "GasolineroID");
                @__LocalMessage.FinalizeMessage();
                return ClientChannel.AsyncDispatch(@__LocalMessage, @__Callback, @__UserData);
            }
            catch (System.Exception ex)
            {
                this.@__ClearMessage(@__LocalMessage);
                throw ex;
            }
        }

        public virtual int EndGasolineroID(System.IAsyncResult @__AsyncResult)
        {
            RemObjects.SDK.IMessage @__LocalMessage = ((RemObjects.SDK.IClientAsyncResult)(@__AsyncResult)).Message;
            try
            {
                int Result = @__LocalMessage.ReadInt32("Result");
                return Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual System.Threading.Tasks.Task<int> GasolineroIDAsync()
        {
            return System.Threading.Tasks.Task<int>.Factory.FromAsync(this.BeginGasolineroID(null, null), new System.Func<System.IAsyncResult, int>(this.EndGasolineroID));
        }

        public virtual System.IAsyncResult BeginGasolineroNombre(System.AsyncCallback @__Callback, object @__UserData)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "GasolineroNombre");
                @__LocalMessage.FinalizeMessage();
                return ClientChannel.AsyncDispatch(@__LocalMessage, @__Callback, @__UserData);
            }
            catch (System.Exception ex)
            {
                this.@__ClearMessage(@__LocalMessage);
                throw ex;
            }
        }

        public virtual string EndGasolineroNombre(System.IAsyncResult @__AsyncResult)
        {
            RemObjects.SDK.IMessage @__LocalMessage = ((RemObjects.SDK.IClientAsyncResult)(@__AsyncResult)).Message;
            try
            {
                string Result = @__LocalMessage.ReadAnsiString("Result");
                return Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual System.Threading.Tasks.Task<string> GasolineroNombreAsync()
        {
            return System.Threading.Tasks.Task<string>.Factory.FromAsync(this.BeginGasolineroNombre(null, null), new System.Func<System.IAsyncResult, string>(this.EndGasolineroNombre));
        }

        public virtual System.IAsyncResult BeginGeneraCupones(int LoteCuponID, int ClienteID, int EstacionID, int Identificador, TGeneraCupon[] Cupones, int ProductoID, int EmpleadoID, string Serie, System.AsyncCallback @__Callback, object @__UserData)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "GeneraCupones");
                @__LocalMessage.WriteInt32("LoteCuponID", LoteCuponID);
                @__LocalMessage.WriteInt32("ClienteID", ClienteID);
                @__LocalMessage.WriteInt32("EstacionID", EstacionID);
                @__LocalMessage.WriteInt32("Identificador", Identificador);
                @__LocalMessage.Write("Cupones", Cupones, typeof(TGeneraCupon[]), RemObjects.SDK.StreamingFormat.Default);
                @__LocalMessage.WriteInt32("ProductoID", ProductoID);
                @__LocalMessage.WriteInt32("EmpleadoID", EmpleadoID);
                @__LocalMessage.WriteAnsiString("Serie", Serie);
                @__LocalMessage.FinalizeMessage();
                return ClientChannel.AsyncDispatch(@__LocalMessage, @__Callback, @__UserData);
            }
            catch (System.Exception ex)
            {
                this.@__ClearMessage(@__LocalMessage);
                throw ex;
            }
        }

        public virtual int EndGeneraCupones(System.IAsyncResult @__AsyncResult)
        {
            RemObjects.SDK.IMessage @__LocalMessage = ((RemObjects.SDK.IClientAsyncResult)(@__AsyncResult)).Message;
            try
            {
                int Result = @__LocalMessage.ReadInt32("Result");
                return Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual System.Threading.Tasks.Task<int> GeneraCuponesAsync(int LoteCuponID, int ClienteID, int EstacionID, int Identificador, TGeneraCupon[] Cupones, int ProductoID, int EmpleadoID, string Serie)
        {
            return System.Threading.Tasks.Task<int>.Factory.FromAsync(this.BeginGeneraCupones(LoteCuponID, ClienteID, EstacionID, Identificador, Cupones, ProductoID, EmpleadoID, Serie, null, null), new System.Func<System.IAsyncResult, int>(this.EndGeneraCupones));
        }

        public virtual System.IAsyncResult BeginGeneraFacturasXCliente(int ClienteID, string Productos, System.DateTime FechaCorte, System.DateTime FechaContable, string Serie, int aFolio, int EmpleadoID, System.AsyncCallback @__Callback, object @__UserData)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "GeneraFacturasXCliente");
                @__LocalMessage.WriteInt32("ClienteID", ClienteID);
                @__LocalMessage.WriteAnsiString("Productos", Productos);
                @__LocalMessage.WriteDateTime("FechaCorte", FechaCorte);
                @__LocalMessage.WriteDateTime("FechaContable", FechaContable);
                @__LocalMessage.WriteAnsiString("Serie", Serie);
                @__LocalMessage.WriteInt32("aFolio", aFolio);
                @__LocalMessage.WriteInt32("EmpleadoID", EmpleadoID);
                @__LocalMessage.FinalizeMessage();
                return ClientChannel.AsyncDispatch(@__LocalMessage, @__Callback, @__UserData);
            }
            catch (System.Exception ex)
            {
                this.@__ClearMessage(@__LocalMessage);
                throw ex;
            }
        }

        public virtual int EndGeneraFacturasXCliente(System.IAsyncResult @__AsyncResult)
        {
            RemObjects.SDK.IMessage @__LocalMessage = ((RemObjects.SDK.IClientAsyncResult)(@__AsyncResult)).Message;
            try
            {
                int Result = @__LocalMessage.ReadInt32("Result");
                return Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual System.Threading.Tasks.Task<int> GeneraFacturasXClienteAsync(int ClienteID, string Productos, System.DateTime FechaCorte, System.DateTime FechaContable, string Serie, int aFolio, int EmpleadoID)
        {
            return System.Threading.Tasks.Task<int>.Factory.FromAsync(this.BeginGeneraFacturasXCliente(ClienteID, Productos, FechaCorte, FechaContable, Serie, aFolio, EmpleadoID, null, null), new System.Func<System.IAsyncResult, int>(this.EndGeneraFacturasXCliente));
        }

        public virtual System.IAsyncResult BeginGeneraFacturasxConsumo(string Serie, int EmpleadoID, int EstacionID, int[] Consumos, System.DateTime FechaFactura, System.AsyncCallback @__Callback, object @__UserData)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "GeneraFacturasxConsumo");
                @__LocalMessage.WriteAnsiString("Serie", Serie);
                @__LocalMessage.WriteInt32("EmpleadoID", EmpleadoID);
                @__LocalMessage.WriteInt32("EstacionID", EstacionID);
                @__LocalMessage.Write("Consumos", Consumos, typeof(int[]), RemObjects.SDK.StreamingFormat.Default);
                @__LocalMessage.WriteDateTime("FechaFactura", FechaFactura);
                @__LocalMessage.FinalizeMessage();
                return ClientChannel.AsyncDispatch(@__LocalMessage, @__Callback, @__UserData);
            }
            catch (System.Exception ex)
            {
                this.@__ClearMessage(@__LocalMessage);
                throw ex;
            }
        }

        public virtual TFoliosGenerados EndGeneraFacturasxConsumo(System.IAsyncResult @__AsyncResult)
        {
            RemObjects.SDK.IMessage @__LocalMessage = ((RemObjects.SDK.IClientAsyncResult)(@__AsyncResult)).Message;
            try
            {
                TFoliosGenerados Result = ((TFoliosGenerados)(@__LocalMessage.Read("Result", typeof(TFoliosGenerados), RemObjects.SDK.StreamingFormat.Default)));
                return Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual System.Threading.Tasks.Task<TFoliosGenerados> GeneraFacturasxConsumoAsync(string Serie, int EmpleadoID, int EstacionID, int[] Consumos, System.DateTime FechaFactura)
        {
            return System.Threading.Tasks.Task<TFoliosGenerados>.Factory.FromAsync(this.BeginGeneraFacturasxConsumo(Serie, EmpleadoID, EstacionID, Consumos, FechaFactura, null, null), new System.Func<System.IAsyncResult, TFoliosGenerados>(this.EndGeneraFacturasxConsumo));
        }

        public virtual System.IAsyncResult BeginGeneraFacturasxConsumo2(string Serie, int EmpleadoID, int EstacionID, int[] Consumos, System.DateTime FechaFactura, string Observaciones, double Descuento, System.AsyncCallback @__Callback, object @__UserData)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "GeneraFacturasxConsumo2");
                @__LocalMessage.WriteAnsiString("Serie", Serie);
                @__LocalMessage.WriteInt32("EmpleadoID", EmpleadoID);
                @__LocalMessage.WriteInt32("EstacionID", EstacionID);
                @__LocalMessage.Write("Consumos", Consumos, typeof(int[]), RemObjects.SDK.StreamingFormat.Default);
                @__LocalMessage.WriteDateTime("FechaFactura", FechaFactura);
                @__LocalMessage.WriteAnsiString("Observaciones", Observaciones);
                @__LocalMessage.WriteDouble("Descuento", Descuento);
                @__LocalMessage.FinalizeMessage();
                return ClientChannel.AsyncDispatch(@__LocalMessage, @__Callback, @__UserData);
            }
            catch (System.Exception ex)
            {
                this.@__ClearMessage(@__LocalMessage);
                throw ex;
            }
        }

        public virtual TFoliosGenerados EndGeneraFacturasxConsumo2(System.IAsyncResult @__AsyncResult)
        {
            RemObjects.SDK.IMessage @__LocalMessage = ((RemObjects.SDK.IClientAsyncResult)(@__AsyncResult)).Message;
            try
            {
                TFoliosGenerados Result = ((TFoliosGenerados)(@__LocalMessage.Read("Result", typeof(TFoliosGenerados), RemObjects.SDK.StreamingFormat.Default)));
                return Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual System.Threading.Tasks.Task<TFoliosGenerados> GeneraFacturasxConsumo2Async(string Serie, int EmpleadoID, int EstacionID, int[] Consumos, System.DateTime FechaFactura, string Observaciones, double Descuento)
        {
            return System.Threading.Tasks.Task<TFoliosGenerados>.Factory.FromAsync(this.BeginGeneraFacturasxConsumo2(Serie, EmpleadoID, EstacionID, Consumos, FechaFactura, Observaciones, Descuento, null, null), new System.Func<System.IAsyncResult, TFoliosGenerados>(this.EndGeneraFacturasxConsumo2));
        }

        public virtual System.IAsyncResult BeginGenerarFacturas(string Serie, System.DateTime FechaCorte, System.DateTime FechaFactura, int DiaFacturar, int Productos, int EmpleadoID, int EstacionID, System.AsyncCallback @__Callback, object @__UserData)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "GenerarFacturas");
                @__LocalMessage.WriteAnsiString("Serie", Serie);
                @__LocalMessage.WriteDateTime("FechaCorte", FechaCorte);
                @__LocalMessage.WriteDateTime("FechaFactura", FechaFactura);
                @__LocalMessage.WriteInt32("DiaFacturar", DiaFacturar);
                @__LocalMessage.WriteInt32("Productos", Productos);
                @__LocalMessage.WriteInt32("EmpleadoID", EmpleadoID);
                @__LocalMessage.WriteInt32("EstacionID", EstacionID);
                @__LocalMessage.FinalizeMessage();
                return ClientChannel.AsyncDispatch(@__LocalMessage, @__Callback, @__UserData);
            }
            catch (System.Exception ex)
            {
                this.@__ClearMessage(@__LocalMessage);
                throw ex;
            }
        }

        public virtual TFoliosGenerados EndGenerarFacturas(System.IAsyncResult @__AsyncResult)
        {
            RemObjects.SDK.IMessage @__LocalMessage = ((RemObjects.SDK.IClientAsyncResult)(@__AsyncResult)).Message;
            try
            {
                TFoliosGenerados Result = ((TFoliosGenerados)(@__LocalMessage.Read("Result", typeof(TFoliosGenerados), RemObjects.SDK.StreamingFormat.Default)));
                return Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual System.Threading.Tasks.Task<TFoliosGenerados> GenerarFacturasAsync(string Serie, System.DateTime FechaCorte, System.DateTime FechaFactura, int DiaFacturar, int Productos, int EmpleadoID, int EstacionID)
        {
            return System.Threading.Tasks.Task<TFoliosGenerados>.Factory.FromAsync(this.BeginGenerarFacturas(Serie, FechaCorte, FechaFactura, DiaFacturar, Productos, EmpleadoID, EstacionID, null, null), new System.Func<System.IAsyncResult, TFoliosGenerados>(this.EndGenerarFacturas));
        }

        public virtual System.IAsyncResult BeginGuardaAccesos(int UsuarioID, string Lista, System.AsyncCallback @__Callback, object @__UserData)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "GuardaAccesos");
                @__LocalMessage.WriteInt32("UsuarioID", UsuarioID);
                @__LocalMessage.WriteAnsiString("Lista", Lista);
                @__LocalMessage.FinalizeMessage();
                return ClientChannel.AsyncDispatch(@__LocalMessage, @__Callback, @__UserData);
            }
            catch (System.Exception ex)
            {
                this.@__ClearMessage(@__LocalMessage);
                throw ex;
            }
        }

        public virtual void EndGuardaAccesos(System.IAsyncResult @__AsyncResult)
        {
            RemObjects.SDK.IMessage @__LocalMessage = ((RemObjects.SDK.IClientAsyncResult)(@__AsyncResult)).Message;
            try
            {
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual System.Threading.Tasks.Task GuardaAccesosAsync(int UsuarioID, string Lista)
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(this.BeginGuardaAccesos(UsuarioID, Lista, null, null), new System.Action<System.IAsyncResult>(this.EndGuardaAccesos));
        }

        public virtual System.IAsyncResult BeginGuardaAutorizacion(TAutoriza Autorizacion, System.AsyncCallback @__Callback, object @__UserData)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "GuardaAutorizacion");
                @__LocalMessage.Write("Autorizacion", Autorizacion, typeof(TAutoriza), RemObjects.SDK.StreamingFormat.Default);
                @__LocalMessage.FinalizeMessage();
                return ClientChannel.AsyncDispatch(@__LocalMessage, @__Callback, @__UserData);
            }
            catch (System.Exception ex)
            {
                this.@__ClearMessage(@__LocalMessage);
                throw ex;
            }
        }

        public virtual bool EndGuardaAutorizacion(System.IAsyncResult @__AsyncResult)
        {
            RemObjects.SDK.IMessage @__LocalMessage = ((RemObjects.SDK.IClientAsyncResult)(@__AsyncResult)).Message;
            try
            {
                bool Result = @__LocalMessage.ReadBoolean("Result");
                return Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual System.Threading.Tasks.Task<bool> GuardaAutorizacionAsync(TAutoriza Autorizacion)
        {
            return System.Threading.Tasks.Task<bool>.Factory.FromAsync(this.BeginGuardaAutorizacion(Autorizacion, null, null), new System.Func<System.IAsyncResult, bool>(this.EndGuardaAutorizacion));
        }

        public virtual System.IAsyncResult BeginGuardaDatosFactura(TDatosFactura DatosFactura, System.AsyncCallback @__Callback, object @__UserData)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "GuardaDatosFactura");
                @__LocalMessage.Write("DatosFactura", DatosFactura, typeof(TDatosFactura), RemObjects.SDK.StreamingFormat.Default);
                @__LocalMessage.FinalizeMessage();
                return ClientChannel.AsyncDispatch(@__LocalMessage, @__Callback, @__UserData);
            }
            catch (System.Exception ex)
            {
                this.@__ClearMessage(@__LocalMessage);
                throw ex;
            }
        }

        public virtual void EndGuardaDatosFactura(System.IAsyncResult @__AsyncResult)
        {
            RemObjects.SDK.IMessage @__LocalMessage = ((RemObjects.SDK.IClientAsyncResult)(@__AsyncResult)).Message;
            try
            {
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual System.Threading.Tasks.Task GuardaDatosFacturaAsync(TDatosFactura DatosFactura)
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(this.BeginGuardaDatosFactura(DatosFactura, null, null), new System.Action<System.IAsyncResult>(this.EndGuardaDatosFactura));
        }

        public virtual System.IAsyncResult BeginGuardarConsumo(TConsumo Consumo, System.AsyncCallback @__Callback, object @__UserData)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "GuardarConsumo");
                @__LocalMessage.Write("Consumo", Consumo, typeof(TConsumo), RemObjects.SDK.StreamingFormat.Default);
                @__LocalMessage.FinalizeMessage();
                return ClientChannel.AsyncDispatch(@__LocalMessage, @__Callback, @__UserData);
            }
            catch (System.Exception ex)
            {
                this.@__ClearMessage(@__LocalMessage);
                throw ex;
            }
        }

        public virtual bool EndGuardarConsumo(System.IAsyncResult @__AsyncResult)
        {
            RemObjects.SDK.IMessage @__LocalMessage = ((RemObjects.SDK.IClientAsyncResult)(@__AsyncResult)).Message;
            try
            {
                bool Result = @__LocalMessage.ReadBoolean("Result");
                return Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual System.Threading.Tasks.Task<bool> GuardarConsumoAsync(TConsumo Consumo)
        {
            return System.Threading.Tasks.Task<bool>.Factory.FromAsync(this.BeginGuardarConsumo(Consumo, null, null), new System.Func<System.IAsyncResult, bool>(this.EndGuardarConsumo));
        }

        public virtual System.IAsyncResult BeginGuardaRecibo(TRecibo Recibo, System.AsyncCallback @__Callback, object @__UserData)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "GuardaRecibo");
                @__LocalMessage.Write("Recibo", Recibo, typeof(TRecibo), RemObjects.SDK.StreamingFormat.Default);
                @__LocalMessage.FinalizeMessage();
                return ClientChannel.AsyncDispatch(@__LocalMessage, @__Callback, @__UserData);
            }
            catch (System.Exception ex)
            {
                this.@__ClearMessage(@__LocalMessage);
                throw ex;
            }
        }

        public virtual bool EndGuardaRecibo(System.IAsyncResult @__AsyncResult)
        {
            RemObjects.SDK.IMessage @__LocalMessage = ((RemObjects.SDK.IClientAsyncResult)(@__AsyncResult)).Message;
            try
            {
                bool Result = @__LocalMessage.ReadBoolean("Result");
                return Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual System.Threading.Tasks.Task<bool> GuardaReciboAsync(TRecibo Recibo)
        {
            return System.Threading.Tasks.Task<bool>.Factory.FromAsync(this.BeginGuardaRecibo(Recibo, null, null), new System.Func<System.IAsyncResult, bool>(this.EndGuardaRecibo));
        }

        public virtual System.IAsyncResult BeginImportesTiempoAire(int ProveedorID, System.AsyncCallback @__Callback, object @__UserData)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "ImportesTiempoAire");
                @__LocalMessage.WriteInt32("ProveedorID", ProveedorID);
                @__LocalMessage.FinalizeMessage();
                return ClientChannel.AsyncDispatch(@__LocalMessage, @__Callback, @__UserData);
            }
            catch (System.Exception ex)
            {
                this.@__ClearMessage(@__LocalMessage);
                throw ex;
            }
        }

        public virtual double[] EndImportesTiempoAire(System.IAsyncResult @__AsyncResult)
        {
            RemObjects.SDK.IMessage @__LocalMessage = ((RemObjects.SDK.IClientAsyncResult)(@__AsyncResult)).Message;
            try
            {
                double[] Result = ((double[])(@__LocalMessage.Read("Result", typeof(double[]), RemObjects.SDK.StreamingFormat.Default)));
                return Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual System.Threading.Tasks.Task<double[]> ImportesTiempoAireAsync(int ProveedorID)
        {
            return System.Threading.Tasks.Task<double[]>.Factory.FromAsync(this.BeginImportesTiempoAire(ProveedorID, null, null), new System.Func<System.IAsyncResult, double[]>(this.EndImportesTiempoAire));
        }

        public virtual System.IAsyncResult BeginInsertaBitacora(int ClienteID, int UsuarioID, string Tabla, string Campo, string ValorAnterior, string ValorNuevo, System.AsyncCallback @__Callback, object @__UserData)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "InsertaBitacora");
                @__LocalMessage.WriteInt32("ClienteID", ClienteID);
                @__LocalMessage.WriteInt32("UsuarioID", UsuarioID);
                @__LocalMessage.WriteAnsiString("Tabla", Tabla);
                @__LocalMessage.WriteAnsiString("Campo", Campo);
                @__LocalMessage.WriteAnsiString("ValorAnterior", ValorAnterior);
                @__LocalMessage.WriteAnsiString("ValorNuevo", ValorNuevo);
                @__LocalMessage.FinalizeMessage();
                return ClientChannel.AsyncDispatch(@__LocalMessage, @__Callback, @__UserData);
            }
            catch (System.Exception ex)
            {
                this.@__ClearMessage(@__LocalMessage);
                throw ex;
            }
        }

        public virtual bool EndInsertaBitacora(System.IAsyncResult @__AsyncResult)
        {
            RemObjects.SDK.IMessage @__LocalMessage = ((RemObjects.SDK.IClientAsyncResult)(@__AsyncResult)).Message;
            try
            {
                bool Result = @__LocalMessage.ReadBoolean("Result");
                return Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual System.Threading.Tasks.Task<bool> InsertaBitacoraAsync(int ClienteID, int UsuarioID, string Tabla, string Campo, string ValorAnterior, string ValorNuevo)
        {
            return System.Threading.Tasks.Task<bool>.Factory.FromAsync(this.BeginInsertaBitacora(ClienteID, UsuarioID, Tabla, Campo, ValorAnterior, ValorNuevo, null, null), new System.Func<System.IAsyncResult, bool>(this.EndInsertaBitacora));
        }

        public virtual System.IAsyncResult BeginIVAEstacion(int EstacionID, System.AsyncCallback @__Callback, object @__UserData)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "IVAEstacion");
                @__LocalMessage.WriteInt32("EstacionID", EstacionID);
                @__LocalMessage.FinalizeMessage();
                return ClientChannel.AsyncDispatch(@__LocalMessage, @__Callback, @__UserData);
            }
            catch (System.Exception ex)
            {
                this.@__ClearMessage(@__LocalMessage);
                throw ex;
            }
        }

        public virtual double EndIVAEstacion(System.IAsyncResult @__AsyncResult)
        {
            RemObjects.SDK.IMessage @__LocalMessage = ((RemObjects.SDK.IClientAsyncResult)(@__AsyncResult)).Message;
            try
            {
                double Result = @__LocalMessage.ReadDouble("Result");
                return Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual System.Threading.Tasks.Task<double> IVAEstacionAsync(int EstacionID)
        {
            return System.Threading.Tasks.Task<double>.Factory.FromAsync(this.BeginIVAEstacion(EstacionID, null, null), new System.Func<System.IAsyncResult, double>(this.EndIVAEstacion));
        }

        public virtual System.IAsyncResult BeginLogin(string Usuario, string Clave, System.AsyncCallback @__Callback, object @__UserData)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "Login");
                @__LocalMessage.WriteAnsiString("Usuario", Usuario);
                @__LocalMessage.WriteAnsiString("Clave", Clave);
                @__LocalMessage.FinalizeMessage();
                return ClientChannel.AsyncDispatch(@__LocalMessage, @__Callback, @__UserData);
            }
            catch (System.Exception ex)
            {
                this.@__ClearMessage(@__LocalMessage);
                throw ex;
            }
        }

        public virtual TLoginInfoF EndLogin(System.IAsyncResult @__AsyncResult)
        {
            RemObjects.SDK.IMessage @__LocalMessage = ((RemObjects.SDK.IClientAsyncResult)(@__AsyncResult)).Message;
            try
            {
                TLoginInfoF Result = ((TLoginInfoF)(@__LocalMessage.Read("Result", typeof(TLoginInfoF), RemObjects.SDK.StreamingFormat.Default)));
                return Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual System.Threading.Tasks.Task<TLoginInfoF> LoginAsync(string Usuario, string Clave)
        {
            return System.Threading.Tasks.Task<TLoginInfoF>.Factory.FromAsync(this.BeginLogin(Usuario, Clave, null, null), new System.Func<System.IAsyncResult, TLoginInfoF>(this.EndLogin));
        }

        public virtual System.IAsyncResult BeginModificarFolioActual(string Campo, string Serie, int FolioNew, System.AsyncCallback @__Callback, object @__UserData)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "ModificarFolioActual");
                @__LocalMessage.WriteAnsiString("Campo", Campo);
                @__LocalMessage.WriteAnsiString("Serie", Serie);
                @__LocalMessage.WriteInt32("FolioNew", FolioNew);
                @__LocalMessage.FinalizeMessage();
                return ClientChannel.AsyncDispatch(@__LocalMessage, @__Callback, @__UserData);
            }
            catch (System.Exception ex)
            {
                this.@__ClearMessage(@__LocalMessage);
                throw ex;
            }
        }

        public virtual string EndModificarFolioActual(System.IAsyncResult @__AsyncResult)
        {
            RemObjects.SDK.IMessage @__LocalMessage = ((RemObjects.SDK.IClientAsyncResult)(@__AsyncResult)).Message;
            try
            {
                string Result = @__LocalMessage.ReadAnsiString("Result");
                return Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual System.Threading.Tasks.Task<string> ModificarFolioActualAsync(string Campo, string Serie, int FolioNew)
        {
            return System.Threading.Tasks.Task<string>.Factory.FromAsync(this.BeginModificarFolioActual(Campo, Serie, FolioNew, null, null), new System.Func<System.IAsyncResult, string>(this.EndModificarFolioActual));
        }

        public virtual System.IAsyncResult BeginObtenCuponValido(string Barras, int Grupo, TAutoriza Autoriza, System.AsyncCallback @__Callback, object @__UserData)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "ObtenCuponValido");
                @__LocalMessage.WriteAnsiString("Barras", Barras);
                @__LocalMessage.WriteInt32("Grupo", Grupo);
                @__LocalMessage.Write("Autoriza", Autoriza, typeof(TAutoriza), RemObjects.SDK.StreamingFormat.Default);
                @__LocalMessage.FinalizeMessage();
                return ClientChannel.AsyncDispatch(@__LocalMessage, @__Callback, @__UserData);
            }
            catch (System.Exception ex)
            {
                this.@__ClearMessage(@__LocalMessage);
                throw ex;
            }
        }

        public virtual TCuponValido EndObtenCuponValido(System.IAsyncResult @__AsyncResult)
        {
            RemObjects.SDK.IMessage @__LocalMessage = ((RemObjects.SDK.IClientAsyncResult)(@__AsyncResult)).Message;
            try
            {
                TCuponValido Result = ((TCuponValido)(@__LocalMessage.Read("Result", typeof(TCuponValido), RemObjects.SDK.StreamingFormat.Default)));
                return Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual System.Threading.Tasks.Task<TCuponValido> ObtenCuponValidoAsync(string Barras, int Grupo, TAutoriza Autoriza)
        {
            return System.Threading.Tasks.Task<TCuponValido>.Factory.FromAsync(this.BeginObtenCuponValido(Barras, Grupo, Autoriza, null, null), new System.Func<System.IAsyncResult, TCuponValido>(this.EndObtenCuponValido));
        }

        public virtual System.IAsyncResult BeginPagoServicio(int ServicioID, TDatosServicio Datos, System.AsyncCallback @__Callback, object @__UserData)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "PagoServicio");
                @__LocalMessage.WriteInt32("ServicioID", ServicioID);
                @__LocalMessage.Write("Datos", Datos, typeof(TDatosServicio), RemObjects.SDK.StreamingFormat.Default);
                @__LocalMessage.FinalizeMessage();
                return ClientChannel.AsyncDispatch(@__LocalMessage, @__Callback, @__UserData);
            }
            catch (System.Exception ex)
            {
                this.@__ClearMessage(@__LocalMessage);
                throw ex;
            }
        }

        public virtual TDatosServicio EndPagoServicio(System.IAsyncResult @__AsyncResult)
        {
            RemObjects.SDK.IMessage @__LocalMessage = ((RemObjects.SDK.IClientAsyncResult)(@__AsyncResult)).Message;
            try
            {
                TDatosServicio Result = ((TDatosServicio)(@__LocalMessage.Read("Result", typeof(TDatosServicio), RemObjects.SDK.StreamingFormat.Default)));
                return Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual System.Threading.Tasks.Task<TDatosServicio> PagoServicioAsync(int ServicioID, TDatosServicio Datos)
        {
            return System.Threading.Tasks.Task<TDatosServicio>.Factory.FromAsync(this.BeginPagoServicio(ServicioID, Datos, null, null), new System.Func<System.IAsyncResult, TDatosServicio>(this.EndPagoServicio));
        }

        public virtual System.IAsyncResult BeginPrecioProducto(int ProductoID, System.AsyncCallback @__Callback, object @__UserData)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "PrecioProducto");
                @__LocalMessage.WriteInt32("ProductoID", ProductoID);
                @__LocalMessage.FinalizeMessage();
                return ClientChannel.AsyncDispatch(@__LocalMessage, @__Callback, @__UserData);
            }
            catch (System.Exception ex)
            {
                this.@__ClearMessage(@__LocalMessage);
                throw ex;
            }
        }

        public virtual double EndPrecioProducto(System.IAsyncResult @__AsyncResult)
        {
            RemObjects.SDK.IMessage @__LocalMessage = ((RemObjects.SDK.IClientAsyncResult)(@__AsyncResult)).Message;
            try
            {
                double Result = @__LocalMessage.ReadDouble("Result");
                return Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual System.Threading.Tasks.Task<double> PrecioProductoAsync(int ProductoID)
        {
            return System.Threading.Tasks.Task<double>.Factory.FromAsync(this.BeginPrecioProducto(ProductoID, null, null), new System.Func<System.IAsyncResult, double>(this.EndPrecioProducto));
        }

        public virtual System.IAsyncResult BeginQuemarCupon(TConsumo Consumo, string Barras, System.AsyncCallback @__Callback, object @__UserData)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "QuemarCupon");
                @__LocalMessage.Write("Consumo", Consumo, typeof(TConsumo), RemObjects.SDK.StreamingFormat.Default);
                @__LocalMessage.WriteAnsiString("Barras", Barras);
                @__LocalMessage.FinalizeMessage();
                return ClientChannel.AsyncDispatch(@__LocalMessage, @__Callback, @__UserData);
            }
            catch (System.Exception ex)
            {
                this.@__ClearMessage(@__LocalMessage);
                throw ex;
            }
        }

        public virtual bool EndQuemarCupon(System.IAsyncResult @__AsyncResult)
        {
            RemObjects.SDK.IMessage @__LocalMessage = ((RemObjects.SDK.IClientAsyncResult)(@__AsyncResult)).Message;
            try
            {
                bool Result = @__LocalMessage.ReadBoolean("Result");
                return Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual System.Threading.Tasks.Task<bool> QuemarCuponAsync(TConsumo Consumo, string Barras)
        {
            return System.Threading.Tasks.Task<bool>.Factory.FromAsync(this.BeginQuemarCupon(Consumo, Barras, null, null), new System.Func<System.IAsyncResult, bool>(this.EndQuemarCupon));
        }

        public virtual System.IAsyncResult BeginREDAutorizaciones(int EstacionID, int BombaID, System.AsyncCallback @__Callback, object @__UserData)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "REDAutorizaciones");
                @__LocalMessage.WriteInt32("EstacionID", EstacionID);
                @__LocalMessage.WriteInt32("BombaID", BombaID);
                @__LocalMessage.FinalizeMessage();
                return ClientChannel.AsyncDispatch(@__LocalMessage, @__Callback, @__UserData);
            }
            catch (System.Exception ex)
            {
                this.@__ClearMessage(@__LocalMessage);
                throw ex;
            }
        }

        public virtual TAutorizacion[] EndREDAutorizaciones(System.IAsyncResult @__AsyncResult)
        {
            RemObjects.SDK.IMessage @__LocalMessage = ((RemObjects.SDK.IClientAsyncResult)(@__AsyncResult)).Message;
            try
            {
                TAutorizacion[] Result = ((TAutorizacion[])(@__LocalMessage.Read("Result", typeof(TAutorizacion[]), RemObjects.SDK.StreamingFormat.Default)));
                return Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual System.Threading.Tasks.Task<TAutorizacion[]> REDAutorizacionesAsync(int EstacionID, int BombaID)
        {
            return System.Threading.Tasks.Task<TAutorizacion[]>.Factory.FromAsync(this.BeginREDAutorizaciones(EstacionID, BombaID, null, null), new System.Func<System.IAsyncResult, TAutorizacion[]>(this.EndREDAutorizaciones));
        }

        public virtual System.IAsyncResult BeginREDConsumo(int EstacionID, string Serie, int TicketID, int AutorizacionID, double Importe, int ProductoID, System.AsyncCallback @__Callback, object @__UserData)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "REDConsumo");
                @__LocalMessage.WriteInt32("EstacionID", EstacionID);
                @__LocalMessage.WriteAnsiString("Serie", Serie);
                @__LocalMessage.WriteInt32("TicketID", TicketID);
                @__LocalMessage.WriteInt32("AutorizacionID", AutorizacionID);
                @__LocalMessage.WriteDouble("Importe", Importe);
                @__LocalMessage.WriteInt32("ProductoID", ProductoID);
                @__LocalMessage.FinalizeMessage();
                return ClientChannel.AsyncDispatch(@__LocalMessage, @__Callback, @__UserData);
            }
            catch (System.Exception ex)
            {
                this.@__ClearMessage(@__LocalMessage);
                throw ex;
            }
        }

        public virtual TDatosTicketConsumo EndREDConsumo(System.IAsyncResult @__AsyncResult)
        {
            RemObjects.SDK.IMessage @__LocalMessage = ((RemObjects.SDK.IClientAsyncResult)(@__AsyncResult)).Message;
            try
            {
                TDatosTicketConsumo Result = ((TDatosTicketConsumo)(@__LocalMessage.Read("Result", typeof(TDatosTicketConsumo), RemObjects.SDK.StreamingFormat.Default)));
                return Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual System.Threading.Tasks.Task<TDatosTicketConsumo> REDConsumoAsync(int EstacionID, string Serie, int TicketID, int AutorizacionID, double Importe, int ProductoID)
        {
            return System.Threading.Tasks.Task<TDatosTicketConsumo>.Factory.FromAsync(this.BeginREDConsumo(EstacionID, Serie, TicketID, AutorizacionID, Importe, ProductoID, null, null), new System.Func<System.IAsyncResult, TDatosTicketConsumo>(this.EndREDConsumo));
        }

        public virtual System.IAsyncResult BeginReferenciaTarjeta(int VehiculoID, System.AsyncCallback @__Callback, object @__UserData)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "ReferenciaTarjeta");
                @__LocalMessage.WriteInt32("VehiculoID", VehiculoID);
                @__LocalMessage.FinalizeMessage();
                return ClientChannel.AsyncDispatch(@__LocalMessage, @__Callback, @__UserData);
            }
            catch (System.Exception ex)
            {
                this.@__ClearMessage(@__LocalMessage);
                throw ex;
            }
        }

        public virtual string EndReferenciaTarjeta(System.IAsyncResult @__AsyncResult)
        {
            RemObjects.SDK.IMessage @__LocalMessage = ((RemObjects.SDK.IClientAsyncResult)(@__AsyncResult)).Message;
            try
            {
                string Result = @__LocalMessage.ReadAnsiString("Result");
                return Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual System.Threading.Tasks.Task<string> ReferenciaTarjetaAsync(int VehiculoID)
        {
            return System.Threading.Tasks.Task<string>.Factory.FromAsync(this.BeginReferenciaTarjeta(VehiculoID, null, null), new System.Func<System.IAsyncResult, string>(this.EndReferenciaTarjeta));
        }

        public virtual System.IAsyncResult BeginRendimiento(int EstacionID, int TicketID, System.AsyncCallback @__Callback, object @__UserData)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "Rendimiento");
                @__LocalMessage.WriteInt32("EstacionID", EstacionID);
                @__LocalMessage.WriteInt32("TicketID", TicketID);
                @__LocalMessage.FinalizeMessage();
                return ClientChannel.AsyncDispatch(@__LocalMessage, @__Callback, @__UserData);
            }
            catch (System.Exception ex)
            {
                this.@__ClearMessage(@__LocalMessage);
                throw ex;
            }
        }

        public virtual double EndRendimiento(System.IAsyncResult @__AsyncResult)
        {
            RemObjects.SDK.IMessage @__LocalMessage = ((RemObjects.SDK.IClientAsyncResult)(@__AsyncResult)).Message;
            try
            {
                double Result = @__LocalMessage.ReadDouble("Result");
                return Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual System.Threading.Tasks.Task<double> RendimientoAsync(int EstacionID, int TicketID)
        {
            return System.Threading.Tasks.Task<double>.Factory.FromAsync(this.BeginRendimiento(EstacionID, TicketID, null, null), new System.Func<System.IAsyncResult, double>(this.EndRendimiento));
        }

        public virtual System.IAsyncResult BeginSaldoVehiculo(string Referencia, int EstacionID, System.AsyncCallback @__Callback, object @__UserData)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "SaldoVehiculo");
                @__LocalMessage.WriteAnsiString("Referencia", Referencia);
                @__LocalMessage.WriteInt32("EstacionID", EstacionID);
                @__LocalMessage.FinalizeMessage();
                return ClientChannel.AsyncDispatch(@__LocalMessage, @__Callback, @__UserData);
            }
            catch (System.Exception ex)
            {
                this.@__ClearMessage(@__LocalMessage);
                throw ex;
            }
        }

        public virtual string EndSaldoVehiculo(System.IAsyncResult @__AsyncResult)
        {
            RemObjects.SDK.IMessage @__LocalMessage = ((RemObjects.SDK.IClientAsyncResult)(@__AsyncResult)).Message;
            try
            {
                string Result = @__LocalMessage.ReadAnsiString("Result");
                return Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual System.Threading.Tasks.Task<string> SaldoVehiculoAsync(string Referencia, int EstacionID)
        {
            return System.Threading.Tasks.Task<string>.Factory.FromAsync(this.BeginSaldoVehiculo(Referencia, EstacionID, null, null), new System.Func<System.IAsyncResult, string>(this.EndSaldoVehiculo));
        }

        public virtual System.IAsyncResult BeginSeries(string Campo, System.AsyncCallback @__Callback, object @__UserData)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "Series");
                @__LocalMessage.WriteAnsiString("Campo", Campo);
                @__LocalMessage.FinalizeMessage();
                return ClientChannel.AsyncDispatch(@__LocalMessage, @__Callback, @__UserData);
            }
            catch (System.Exception ex)
            {
                this.@__ClearMessage(@__LocalMessage);
                throw ex;
            }
        }

        public virtual string EndSeries(System.IAsyncResult @__AsyncResult)
        {
            RemObjects.SDK.IMessage @__LocalMessage = ((RemObjects.SDK.IClientAsyncResult)(@__AsyncResult)).Message;
            try
            {
                string Result = @__LocalMessage.ReadAnsiString("Result");
                return Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual System.Threading.Tasks.Task<string> SeriesAsync(string Campo)
        {
            return System.Threading.Tasks.Task<string>.Factory.FromAsync(this.BeginSeries(Campo, null, null), new System.Func<System.IAsyncResult, string>(this.EndSeries));
        }

        public virtual System.IAsyncResult BeginStatusCupon(string Codigo, System.AsyncCallback @__Callback, object @__UserData)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "StatusCupon");
                @__LocalMessage.WriteAnsiString("Codigo", Codigo);
                @__LocalMessage.FinalizeMessage();
                return ClientChannel.AsyncDispatch(@__LocalMessage, @__Callback, @__UserData);
            }
            catch (System.Exception ex)
            {
                this.@__ClearMessage(@__LocalMessage);
                throw ex;
            }
        }

        public virtual string EndStatusCupon(System.IAsyncResult @__AsyncResult)
        {
            RemObjects.SDK.IMessage @__LocalMessage = ((RemObjects.SDK.IClientAsyncResult)(@__AsyncResult)).Message;
            try
            {
                string Result = @__LocalMessage.ReadAnsiString("Result");
                return Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual System.Threading.Tasks.Task<string> StatusCuponAsync(string Codigo)
        {
            return System.Threading.Tasks.Task<string>.Factory.FromAsync(this.BeginStatusCupon(Codigo, null, null), new System.Func<System.IAsyncResult, string>(this.EndStatusCupon));
        }

        public virtual System.IAsyncResult BeginTarjetaConsumo(string Tarjeta, TConsumo Consumo, System.AsyncCallback @__Callback, object @__UserData)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "TarjetaConsumo");
                @__LocalMessage.WriteAnsiString("Tarjeta", Tarjeta);
                @__LocalMessage.Write("Consumo", Consumo, typeof(TConsumo), RemObjects.SDK.StreamingFormat.Default);
                @__LocalMessage.FinalizeMessage();
                return ClientChannel.AsyncDispatch(@__LocalMessage, @__Callback, @__UserData);
            }
            catch (System.Exception ex)
            {
                this.@__ClearMessage(@__LocalMessage);
                throw ex;
            }
        }

        public virtual bool EndTarjetaConsumo(System.IAsyncResult @__AsyncResult)
        {
            RemObjects.SDK.IMessage @__LocalMessage = ((RemObjects.SDK.IClientAsyncResult)(@__AsyncResult)).Message;
            try
            {
                bool Result = @__LocalMessage.ReadBoolean("Result");
                return Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual System.Threading.Tasks.Task<bool> TarjetaConsumoAsync(string Tarjeta, TConsumo Consumo)
        {
            return System.Threading.Tasks.Task<bool>.Factory.FromAsync(this.BeginTarjetaConsumo(Tarjeta, Consumo, null, null), new System.Func<System.IAsyncResult, bool>(this.EndTarjetaConsumo));
        }

        public virtual System.IAsyncResult BeginTarjetasLLave(System.AsyncCallback @__Callback, object @__UserData)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "TarjetasLLave");
                @__LocalMessage.FinalizeMessage();
                return ClientChannel.AsyncDispatch(@__LocalMessage, @__Callback, @__UserData);
            }
            catch (System.Exception ex)
            {
                this.@__ClearMessage(@__LocalMessage);
                throw ex;
            }
        }

        public virtual TTarjetaLLave[] EndTarjetasLLave(System.IAsyncResult @__AsyncResult)
        {
            RemObjects.SDK.IMessage @__LocalMessage = ((RemObjects.SDK.IClientAsyncResult)(@__AsyncResult)).Message;
            try
            {
                TTarjetaLLave[] Result = ((TTarjetaLLave[])(@__LocalMessage.Read("Result", typeof(TTarjetaLLave[]), RemObjects.SDK.StreamingFormat.Default)));
                return Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual System.Threading.Tasks.Task<TTarjetaLLave[]> TarjetasLLaveAsync()
        {
            return System.Threading.Tasks.Task<TTarjetaLLave[]>.Factory.FromAsync(this.BeginTarjetasLLave(null, null), new System.Func<System.IAsyncResult, TTarjetaLLave[]>(this.EndTarjetasLLave));
        }

        public virtual System.IAsyncResult BeginTiempoAire(int EstacionID, int BombaID, string Telefono, int ProveedorID, double Importe, int CajaID, string LLave, int TurnoID, System.AsyncCallback @__Callback, object @__UserData)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "TiempoAire");
                @__LocalMessage.WriteInt32("EstacionID", EstacionID);
                @__LocalMessage.WriteInt32("BombaID", BombaID);
                @__LocalMessage.WriteAnsiString("Telefono", Telefono);
                @__LocalMessage.WriteInt32("ProveedorID", ProveedorID);
                @__LocalMessage.WriteDouble("Importe", Importe);
                @__LocalMessage.WriteInt32("CajaID", CajaID);
                @__LocalMessage.WriteAnsiString("LLave", LLave);
                @__LocalMessage.WriteInt32("TurnoID", TurnoID);
                @__LocalMessage.FinalizeMessage();
                return ClientChannel.AsyncDispatch(@__LocalMessage, @__Callback, @__UserData);
            }
            catch (System.Exception ex)
            {
                this.@__ClearMessage(@__LocalMessage);
                throw ex;
            }
        }

        public virtual TTiempoAire EndTiempoAire(System.IAsyncResult @__AsyncResult)
        {
            RemObjects.SDK.IMessage @__LocalMessage = ((RemObjects.SDK.IClientAsyncResult)(@__AsyncResult)).Message;
            try
            {
                TTiempoAire Result = ((TTiempoAire)(@__LocalMessage.Read("Result", typeof(TTiempoAire), RemObjects.SDK.StreamingFormat.Default)));
                return Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual System.Threading.Tasks.Task<TTiempoAire> TiempoAireAsync(int EstacionID, int BombaID, string Telefono, int ProveedorID, double Importe, int CajaID, string LLave, int TurnoID)
        {
            return System.Threading.Tasks.Task<TTiempoAire>.Factory.FromAsync(this.BeginTiempoAire(EstacionID, BombaID, Telefono, ProveedorID, Importe, CajaID, LLave, TurnoID, null, null), new System.Func<System.IAsyncResult, TTiempoAire>(this.EndTiempoAire));
        }

        public virtual System.IAsyncResult BeginValidaConsumo(TConsumo Consumo, System.AsyncCallback @__Callback, object @__UserData)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "ValidaConsumo");
                @__LocalMessage.Write("Consumo", Consumo, typeof(TConsumo), RemObjects.SDK.StreamingFormat.Default);
                @__LocalMessage.FinalizeMessage();
                return ClientChannel.AsyncDispatch(@__LocalMessage, @__Callback, @__UserData);
            }
            catch (System.Exception ex)
            {
                this.@__ClearMessage(@__LocalMessage);
                throw ex;
            }
        }

        public virtual int EndValidaConsumo(System.IAsyncResult @__AsyncResult)
        {
            RemObjects.SDK.IMessage @__LocalMessage = ((RemObjects.SDK.IClientAsyncResult)(@__AsyncResult)).Message;
            try
            {
                int Result = @__LocalMessage.ReadInt32("Result");
                return Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual System.Threading.Tasks.Task<int> ValidaConsumoAsync(TConsumo Consumo)
        {
            return System.Threading.Tasks.Task<int>.Factory.FromAsync(this.BeginValidaConsumo(Consumo, null, null), new System.Func<System.IAsyncResult, int>(this.EndValidaConsumo));
        }

        public virtual System.IAsyncResult BeginValidaSecuencias(int EstacionID, string Secuencias, System.AsyncCallback @__Callback, object @__UserData)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "ValidaSecuencias");
                @__LocalMessage.WriteInt32("EstacionID", EstacionID);
                @__LocalMessage.WriteAnsiString("Secuencias", Secuencias);
                @__LocalMessage.FinalizeMessage();
                return ClientChannel.AsyncDispatch(@__LocalMessage, @__Callback, @__UserData);
            }
            catch (System.Exception ex)
            {
                this.@__ClearMessage(@__LocalMessage);
                throw ex;
            }
        }

        public virtual string EndValidaSecuencias(System.IAsyncResult @__AsyncResult)
        {
            RemObjects.SDK.IMessage @__LocalMessage = ((RemObjects.SDK.IClientAsyncResult)(@__AsyncResult)).Message;
            try
            {
                string Result = @__LocalMessage.ReadAnsiString("Result");
                return Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual System.Threading.Tasks.Task<string> ValidaSecuenciasAsync(int EstacionID, string Secuencias)
        {
            return System.Threading.Tasks.Task<string>.Factory.FromAsync(this.BeginValidaSecuencias(EstacionID, Secuencias, null, null), new System.Func<System.IAsyncResult, string>(this.EndValidaSecuencias));
        }

        public virtual System.IAsyncResult BeginVehiculoProducto(int VehiculoID, int ProductoID, System.AsyncCallback @__Callback, object @__UserData)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "VehiculoProducto");
                @__LocalMessage.WriteInt32("VehiculoID", VehiculoID);
                @__LocalMessage.WriteInt32("ProductoID", ProductoID);
                @__LocalMessage.FinalizeMessage();
                return ClientChannel.AsyncDispatch(@__LocalMessage, @__Callback, @__UserData);
            }
            catch (System.Exception ex)
            {
                this.@__ClearMessage(@__LocalMessage);
                throw ex;
            }
        }

        public virtual void EndVehiculoProducto(System.IAsyncResult @__AsyncResult)
        {
            RemObjects.SDK.IMessage @__LocalMessage = ((RemObjects.SDK.IClientAsyncResult)(@__AsyncResult)).Message;
            try
            {
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual System.Threading.Tasks.Task VehiculoProductoAsync(int VehiculoID, int ProductoID)
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(this.BeginVehiculoProducto(VehiculoID, ProductoID, null, null), new System.Action<System.IAsyncResult>(this.EndVehiculoProducto));
        }

        public virtual System.IAsyncResult BeginWebFactura(string Serie, int Folio, string Campo, System.AsyncCallback @__Callback, object @__UserData)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "WebFactura");
                @__LocalMessage.WriteAnsiString("Serie", Serie);
                @__LocalMessage.WriteInt32("Folio", Folio);
                @__LocalMessage.WriteAnsiString("Campo", Campo);
                @__LocalMessage.FinalizeMessage();
                return ClientChannel.AsyncDispatch(@__LocalMessage, @__Callback, @__UserData);
            }
            catch (System.Exception ex)
            {
                this.@__ClearMessage(@__LocalMessage);
                throw ex;
            }
        }

        public virtual TWebFacturaF EndWebFactura(System.IAsyncResult @__AsyncResult)
        {
            RemObjects.SDK.IMessage @__LocalMessage = ((RemObjects.SDK.IClientAsyncResult)(@__AsyncResult)).Message;
            try
            {
                TWebFacturaF Result = ((TWebFacturaF)(@__LocalMessage.Read("Result", typeof(TWebFacturaF), RemObjects.SDK.StreamingFormat.Default)));
                return Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual System.Threading.Tasks.Task<TWebFacturaF> WebFacturaAsync(string Serie, int Folio, string Campo)
        {
            return System.Threading.Tasks.Task<TWebFacturaF>.Factory.FromAsync(this.BeginWebFactura(Serie, Folio, Campo, null, null), new System.Func<System.IAsyncResult, TWebFacturaF>(this.EndWebFactura));
        }

        public virtual System.IAsyncResult BeginCambiaKilometraje(TCambiaDatosConsumo Datos, System.AsyncCallback @__Callback, object @__UserData)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "CambiaKilometraje");
                @__LocalMessage.Write("Datos", Datos, typeof(TCambiaDatosConsumo), RemObjects.SDK.StreamingFormat.Default);
                @__LocalMessage.FinalizeMessage();
                return ClientChannel.AsyncDispatch(@__LocalMessage, @__Callback, @__UserData);
            }
            catch (System.Exception ex)
            {
                this.@__ClearMessage(@__LocalMessage);
                throw ex;
            }
        }

        public virtual bool EndCambiaKilometraje(System.IAsyncResult @__AsyncResult)
        {
            RemObjects.SDK.IMessage @__LocalMessage = ((RemObjects.SDK.IClientAsyncResult)(@__AsyncResult)).Message;
            try
            {
                bool Result = @__LocalMessage.ReadBoolean("Result");
                return Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual System.Threading.Tasks.Task<bool> CambiaKilometrajeAsync(TCambiaDatosConsumo Datos)
        {
            return System.Threading.Tasks.Task<bool>.Factory.FromAsync(this.BeginCambiaKilometraje(Datos, null, null), new System.Func<System.IAsyncResult, bool>(this.EndCambiaKilometraje));
        }

        public virtual System.IAsyncResult BeginMailCliente(int ClienteID, int Tipo, System.AsyncCallback @__Callback, object @__UserData)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "MailCliente");
                @__LocalMessage.WriteInt32("ClienteID", ClienteID);
                @__LocalMessage.WriteInt32("Tipo", Tipo);
                @__LocalMessage.FinalizeMessage();
                return ClientChannel.AsyncDispatch(@__LocalMessage, @__Callback, @__UserData);
            }
            catch (System.Exception ex)
            {
                this.@__ClearMessage(@__LocalMessage);
                throw ex;
            }
        }

        public virtual string EndMailCliente(System.IAsyncResult @__AsyncResult)
        {
            RemObjects.SDK.IMessage @__LocalMessage = ((RemObjects.SDK.IClientAsyncResult)(@__AsyncResult)).Message;
            try
            {
                string Result = @__LocalMessage.ReadAnsiString("Result");
                return Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual System.Threading.Tasks.Task<string> MailClienteAsync(int ClienteID, int Tipo)
        {
            return System.Threading.Tasks.Task<string>.Factory.FromAsync(this.BeginMailCliente(ClienteID, Tipo, null, null), new System.Func<System.IAsyncResult, string>(this.EndMailCliente));
        }

        public virtual System.IAsyncResult BeginAgregarIButton(string iButton, string Referencia, System.AsyncCallback @__Callback, object @__UserData)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "AgregarIButton");
                @__LocalMessage.WriteAnsiString("iButton", iButton);
                @__LocalMessage.WriteAnsiString("Referencia", Referencia);
                @__LocalMessage.FinalizeMessage();
                return ClientChannel.AsyncDispatch(@__LocalMessage, @__Callback, @__UserData);
            }
            catch (System.Exception ex)
            {
                this.@__ClearMessage(@__LocalMessage);
                throw ex;
            }
        }

        public virtual bool EndAgregarIButton(System.IAsyncResult @__AsyncResult)
        {
            RemObjects.SDK.IMessage @__LocalMessage = ((RemObjects.SDK.IClientAsyncResult)(@__AsyncResult)).Message;
            try
            {
                bool Result = @__LocalMessage.ReadBoolean("Result");
                return Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual System.Threading.Tasks.Task<bool> AgregarIButtonAsync(string iButton, string Referencia)
        {
            return System.Threading.Tasks.Task<bool>.Factory.FromAsync(this.BeginAgregarIButton(iButton, Referencia, null, null), new System.Func<System.IAsyncResult, bool>(this.EndAgregarIButton));
        }

        public virtual System.IAsyncResult BeginiButtonToReferencia(string iButton, System.AsyncCallback @__Callback, object @__UserData)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "iButtonToReferencia");
                @__LocalMessage.WriteAnsiString("iButton", iButton);
                @__LocalMessage.FinalizeMessage();
                return ClientChannel.AsyncDispatch(@__LocalMessage, @__Callback, @__UserData);
            }
            catch (System.Exception ex)
            {
                this.@__ClearMessage(@__LocalMessage);
                throw ex;
            }
        }

        public virtual string EndiButtonToReferencia(System.IAsyncResult @__AsyncResult)
        {
            RemObjects.SDK.IMessage @__LocalMessage = ((RemObjects.SDK.IClientAsyncResult)(@__AsyncResult)).Message;
            try
            {
                string Result = @__LocalMessage.ReadAnsiString("Result");
                return Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual System.Threading.Tasks.Task<string> iButtonToReferenciaAsync(string iButton)
        {
            return System.Threading.Tasks.Task<string>.Factory.FromAsync(this.BeginiButtonToReferencia(iButton, null, null), new System.Func<System.IAsyncResult, string>(this.EndiButtonToReferencia));
        }

        public virtual System.IAsyncResult BeginReferenciaToIButton(string Referencia, System.AsyncCallback @__Callback, object @__UserData)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "ReferenciaToIButton");
                @__LocalMessage.WriteAnsiString("Referencia", Referencia);
                @__LocalMessage.FinalizeMessage();
                return ClientChannel.AsyncDispatch(@__LocalMessage, @__Callback, @__UserData);
            }
            catch (System.Exception ex)
            {
                this.@__ClearMessage(@__LocalMessage);
                throw ex;
            }
        }

        public virtual string EndReferenciaToIButton(System.IAsyncResult @__AsyncResult)
        {
            RemObjects.SDK.IMessage @__LocalMessage = ((RemObjects.SDK.IClientAsyncResult)(@__AsyncResult)).Message;
            try
            {
                string Result = @__LocalMessage.ReadAnsiString("Result");
                return Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual System.Threading.Tasks.Task<string> ReferenciaToIButtonAsync(string Referencia)
        {
            return System.Threading.Tasks.Task<string>.Factory.FromAsync(this.BeginReferenciaToIButton(Referencia, null, null), new System.Func<System.IAsyncResult, string>(this.EndReferenciaToIButton));
        }

        public virtual System.IAsyncResult BeginEnviaMail(string Serie, int Folio, System.AsyncCallback @__Callback, object @__UserData)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "EnviaMail");
                @__LocalMessage.WriteAnsiString("Serie", Serie);
                @__LocalMessage.WriteInt32("Folio", Folio);
                @__LocalMessage.FinalizeMessage();
                return ClientChannel.AsyncDispatch(@__LocalMessage, @__Callback, @__UserData);
            }
            catch (System.Exception ex)
            {
                this.@__ClearMessage(@__LocalMessage);
                throw ex;
            }
        }

        public virtual bool EndEnviaMail(System.IAsyncResult @__AsyncResult)
        {
            RemObjects.SDK.IMessage @__LocalMessage = ((RemObjects.SDK.IClientAsyncResult)(@__AsyncResult)).Message;
            try
            {
                bool Result = @__LocalMessage.ReadBoolean("Result");
                return Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual System.Threading.Tasks.Task<bool> EnviaMailAsync(string Serie, int Folio)
        {
            return System.Threading.Tasks.Task<bool>.Factory.FromAsync(this.BeginEnviaMail(Serie, Folio, null, null), new System.Func<System.IAsyncResult, bool>(this.EndEnviaMail));
        }

        public virtual System.IAsyncResult BeginEliminaAutorizacionReferencia(string Referencia, System.AsyncCallback @__Callback, object @__UserData)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "EliminaAutorizacionReferencia");
                @__LocalMessage.WriteAnsiString("Referencia", Referencia);
                @__LocalMessage.FinalizeMessage();
                return ClientChannel.AsyncDispatch(@__LocalMessage, @__Callback, @__UserData);
            }
            catch (System.Exception ex)
            {
                this.@__ClearMessage(@__LocalMessage);
                throw ex;
            }
        }

        public virtual void EndEliminaAutorizacionReferencia(System.IAsyncResult @__AsyncResult)
        {
            RemObjects.SDK.IMessage @__LocalMessage = ((RemObjects.SDK.IClientAsyncResult)(@__AsyncResult)).Message;
            try
            {
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual System.Threading.Tasks.Task EliminaAutorizacionReferenciaAsync(string Referencia)
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(this.BeginEliminaAutorizacionReferencia(Referencia, null, null), new System.Action<System.IAsyncResult>(this.EndEliminaAutorizacionReferencia));
        }

        public virtual System.IAsyncResult BeginFormatoFacturaWEB(string Serie, int Folio, System.AsyncCallback @__Callback, object @__UserData)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "FormatoFacturaWEB");
                @__LocalMessage.WriteAnsiString("Serie", Serie);
                @__LocalMessage.WriteInt32("Folio", Folio);
                @__LocalMessage.FinalizeMessage();
                return ClientChannel.AsyncDispatch(@__LocalMessage, @__Callback, @__UserData);
            }
            catch (System.Exception ex)
            {
                this.@__ClearMessage(@__LocalMessage);
                throw ex;
            }
        }

        public virtual string EndFormatoFacturaWEB(System.IAsyncResult @__AsyncResult)
        {
            RemObjects.SDK.IMessage @__LocalMessage = ((RemObjects.SDK.IClientAsyncResult)(@__AsyncResult)).Message;
            try
            {
                string Result = @__LocalMessage.ReadAnsiString("Result");
                return Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual System.Threading.Tasks.Task<string> FormatoFacturaWEBAsync(string Serie, int Folio)
        {
            return System.Threading.Tasks.Task<string>.Factory.FromAsync(this.BeginFormatoFacturaWEB(Serie, Folio, null, null), new System.Func<System.IAsyncResult, string>(this.EndFormatoFacturaWEB));
        }

        public virtual System.IAsyncResult BeginNotaCredito(string ASerie, int AFolio, string ASerieNota, double AImporte, int AUsuarioID, System.AsyncCallback @__Callback, object @__UserData)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "NotaCredito");
                @__LocalMessage.WriteAnsiString("ASerie", ASerie);
                @__LocalMessage.WriteInt32("AFolio", AFolio);
                @__LocalMessage.WriteAnsiString("ASerieNota", ASerieNota);
                @__LocalMessage.WriteDouble("AImporte", AImporte);
                @__LocalMessage.WriteInt32("AUsuarioID", AUsuarioID);
                @__LocalMessage.FinalizeMessage();
                return ClientChannel.AsyncDispatch(@__LocalMessage, @__Callback, @__UserData);
            }
            catch (System.Exception ex)
            {
                this.@__ClearMessage(@__LocalMessage);
                throw ex;
            }
        }

        public virtual TNotaCredito EndNotaCredito(System.IAsyncResult @__AsyncResult)
        {
            RemObjects.SDK.IMessage @__LocalMessage = ((RemObjects.SDK.IClientAsyncResult)(@__AsyncResult)).Message;
            try
            {
                TNotaCredito Result = ((TNotaCredito)(@__LocalMessage.Read("Result", typeof(TNotaCredito), RemObjects.SDK.StreamingFormat.Default)));
                return Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual System.Threading.Tasks.Task<TNotaCredito> NotaCreditoAsync(string ASerie, int AFolio, string ASerieNota, double AImporte, int AUsuarioID)
        {
            return System.Threading.Tasks.Task<TNotaCredito>.Factory.FromAsync(this.BeginNotaCredito(ASerie, AFolio, ASerieNota, AImporte, AUsuarioID, null, null), new System.Func<System.IAsyncResult, TNotaCredito>(this.EndNotaCredito));
        }

        public virtual System.IAsyncResult BeginTotalNotaCreditoEnFactura(string Serie, int Folio, System.AsyncCallback @__Callback, object @__UserData)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "TotalNotaCreditoEnFactura");
                @__LocalMessage.WriteAnsiString("Serie", Serie);
                @__LocalMessage.WriteInt32("Folio", Folio);
                @__LocalMessage.FinalizeMessage();
                return ClientChannel.AsyncDispatch(@__LocalMessage, @__Callback, @__UserData);
            }
            catch (System.Exception ex)
            {
                this.@__ClearMessage(@__LocalMessage);
                throw ex;
            }
        }

        public virtual double EndTotalNotaCreditoEnFactura(System.IAsyncResult @__AsyncResult)
        {
            RemObjects.SDK.IMessage @__LocalMessage = ((RemObjects.SDK.IClientAsyncResult)(@__AsyncResult)).Message;
            try
            {
                double Result = @__LocalMessage.ReadDouble("Result");
                return Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual System.Threading.Tasks.Task<double> TotalNotaCreditoEnFacturaAsync(string Serie, int Folio)
        {
            return System.Threading.Tasks.Task<double>.Factory.FromAsync(this.BeginTotalNotaCreditoEnFactura(Serie, Folio, null, null), new System.Func<System.IAsyncResult, double>(this.EndTotalNotaCreditoEnFactura));
        }

        public virtual System.IAsyncResult BeginPuedeEliminarFactura(string Serie, int Folio, System.DateTime Fecha, System.AsyncCallback @__Callback, object @__UserData)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "PuedeEliminarFactura");
                @__LocalMessage.WriteAnsiString("Serie", Serie);
                @__LocalMessage.WriteInt32("Folio", Folio);
                @__LocalMessage.WriteDateTime("Fecha", Fecha);
                @__LocalMessage.FinalizeMessage();
                return ClientChannel.AsyncDispatch(@__LocalMessage, @__Callback, @__UserData);
            }
            catch (System.Exception ex)
            {
                this.@__ClearMessage(@__LocalMessage);
                throw ex;
            }
        }

        public virtual string EndPuedeEliminarFactura(System.IAsyncResult @__AsyncResult)
        {
            RemObjects.SDK.IMessage @__LocalMessage = ((RemObjects.SDK.IClientAsyncResult)(@__AsyncResult)).Message;
            try
            {
                string Result = @__LocalMessage.ReadAnsiString("Result");
                return Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual System.Threading.Tasks.Task<string> PuedeEliminarFacturaAsync(string Serie, int Folio, System.DateTime Fecha)
        {
            return System.Threading.Tasks.Task<string>.Factory.FromAsync(this.BeginPuedeEliminarFactura(Serie, Folio, Fecha, null, null), new System.Func<System.IAsyncResult, string>(this.EndPuedeEliminarFactura));
        }

        public virtual System.IAsyncResult BeginConsultaObservacionesFactura(string Serie, int Folio, System.AsyncCallback @__Callback, object @__UserData)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "ConsultaObservacionesFactura");
                @__LocalMessage.WriteAnsiString("Serie", Serie);
                @__LocalMessage.WriteInt32("Folio", Folio);
                @__LocalMessage.FinalizeMessage();
                return ClientChannel.AsyncDispatch(@__LocalMessage, @__Callback, @__UserData);
            }
            catch (System.Exception ex)
            {
                this.@__ClearMessage(@__LocalMessage);
                throw ex;
            }
        }

        public virtual TObservaFactura EndConsultaObservacionesFactura(System.IAsyncResult @__AsyncResult)
        {
            RemObjects.SDK.IMessage @__LocalMessage = ((RemObjects.SDK.IClientAsyncResult)(@__AsyncResult)).Message;
            try
            {
                TObservaFactura Result = ((TObservaFactura)(@__LocalMessage.Read("Result", typeof(TObservaFactura), RemObjects.SDK.StreamingFormat.Default)));
                return Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual System.Threading.Tasks.Task<TObservaFactura> ConsultaObservacionesFacturaAsync(string Serie, int Folio)
        {
            return System.Threading.Tasks.Task<TObservaFactura>.Factory.FromAsync(this.BeginConsultaObservacionesFactura(Serie, Folio, null, null), new System.Func<System.IAsyncResult, TObservaFactura>(this.EndConsultaObservacionesFactura));
        }

        public virtual System.IAsyncResult BeginGuardaObservacionesFactura(string Serie, int Folio, string Observaciones, System.AsyncCallback @__Callback, object @__UserData)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "GuardaObservacionesFactura");
                @__LocalMessage.WriteAnsiString("Serie", Serie);
                @__LocalMessage.WriteInt32("Folio", Folio);
                @__LocalMessage.WriteAnsiString("Observaciones", Observaciones);
                @__LocalMessage.FinalizeMessage();
                return ClientChannel.AsyncDispatch(@__LocalMessage, @__Callback, @__UserData);
            }
            catch (System.Exception ex)
            {
                this.@__ClearMessage(@__LocalMessage);
                throw ex;
            }
        }

        public virtual bool EndGuardaObservacionesFactura(System.IAsyncResult @__AsyncResult)
        {
            RemObjects.SDK.IMessage @__LocalMessage = ((RemObjects.SDK.IClientAsyncResult)(@__AsyncResult)).Message;
            try
            {
                bool Result = @__LocalMessage.ReadBoolean("Result");
                return Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual System.Threading.Tasks.Task<bool> GuardaObservacionesFacturaAsync(string Serie, int Folio, string Observaciones)
        {
            return System.Threading.Tasks.Task<bool>.Factory.FromAsync(this.BeginGuardaObservacionesFactura(Serie, Folio, Observaciones, null, null), new System.Func<System.IAsyncResult, bool>(this.EndGuardaObservacionesFactura));
        }

        public virtual System.IAsyncResult BeginKFleet(System.AsyncCallback @__Callback, object @__UserData)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "KFleet");
                @__LocalMessage.FinalizeMessage();
                return ClientChannel.AsyncDispatch(@__LocalMessage, @__Callback, @__UserData);
            }
            catch (System.Exception ex)
            {
                this.@__ClearMessage(@__LocalMessage);
                throw ex;
            }
        }

        public virtual void EndKFleet(System.IAsyncResult @__AsyncResult)
        {
            RemObjects.SDK.IMessage @__LocalMessage = ((RemObjects.SDK.IClientAsyncResult)(@__AsyncResult)).Message;
            try
            {
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual System.Threading.Tasks.Task KFleetAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(this.BeginKFleet(null, null), new System.Action<System.IAsyncResult>(this.EndKFleet));
        }

        public virtual System.IAsyncResult BeginSaldoVehiculoPlus(string Referencia, int EstacionID, System.AsyncCallback @__Callback, object @__UserData)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "SaldoVehiculoPlus");
                @__LocalMessage.WriteAnsiString("Referencia", Referencia);
                @__LocalMessage.WriteInt32("EstacionID", EstacionID);
                @__LocalMessage.FinalizeMessage();
                return ClientChannel.AsyncDispatch(@__LocalMessage, @__Callback, @__UserData);
            }
            catch (System.Exception ex)
            {
                this.@__ClearMessage(@__LocalMessage);
                throw ex;
            }
        }

        public virtual TSaldoVehiculoPlus EndSaldoVehiculoPlus(System.IAsyncResult @__AsyncResult)
        {
            RemObjects.SDK.IMessage @__LocalMessage = ((RemObjects.SDK.IClientAsyncResult)(@__AsyncResult)).Message;
            try
            {
                TSaldoVehiculoPlus Result = ((TSaldoVehiculoPlus)(@__LocalMessage.Read("Result", typeof(TSaldoVehiculoPlus), RemObjects.SDK.StreamingFormat.Default)));
                return Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual System.Threading.Tasks.Task<TSaldoVehiculoPlus> SaldoVehiculoPlusAsync(string Referencia, int EstacionID)
        {
            return System.Threading.Tasks.Task<TSaldoVehiculoPlus>.Factory.FromAsync(this.BeginSaldoVehiculoPlus(Referencia, EstacionID, null, null), new System.Func<System.IAsyncResult, TSaldoVehiculoPlus>(this.EndSaldoVehiculoPlus));
        }

        public virtual System.IAsyncResult BeginSincronizaAlbum(TSincronizaAlbum Datos, System.AsyncCallback @__Callback, object @__UserData)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "SincronizaAlbum");
                @__LocalMessage.Write("Datos", Datos, typeof(TSincronizaAlbum), RemObjects.SDK.StreamingFormat.Default);
                @__LocalMessage.FinalizeMessage();
                return ClientChannel.AsyncDispatch(@__LocalMessage, @__Callback, @__UserData);
            }
            catch (System.Exception ex)
            {
                this.@__ClearMessage(@__LocalMessage);
                throw ex;
            }
        }

        public virtual bool EndSincronizaAlbum(System.IAsyncResult @__AsyncResult)
        {
            RemObjects.SDK.IMessage @__LocalMessage = ((RemObjects.SDK.IClientAsyncResult)(@__AsyncResult)).Message;
            try
            {
                bool Result = @__LocalMessage.ReadBoolean("Result");
                return Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual System.Threading.Tasks.Task<bool> SincronizaAlbumAsync(TSincronizaAlbum Datos)
        {
            return System.Threading.Tasks.Task<bool>.Factory.FromAsync(this.BeginSincronizaAlbum(Datos, null, null), new System.Func<System.IAsyncResult, bool>(this.EndSincronizaAlbum));
        }

        public virtual System.IAsyncResult BeginGuardaFotoVehiculo(string Referencia, RemObjects.SDK.Types.Binary Foto, System.AsyncCallback @__Callback, object @__UserData)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "GuardaFotoVehiculo");
                @__LocalMessage.WriteAnsiString("Referencia", Referencia);
                @__LocalMessage.Write("Foto", Foto, typeof(RemObjects.SDK.Types.Binary), RemObjects.SDK.StreamingFormat.Default);
                @__LocalMessage.FinalizeMessage();
                return ClientChannel.AsyncDispatch(@__LocalMessage, @__Callback, @__UserData);
            }
            catch (System.Exception ex)
            {
                this.@__ClearMessage(@__LocalMessage);
                throw ex;
            }
        }

        public virtual string EndGuardaFotoVehiculo(System.IAsyncResult @__AsyncResult)
        {
            RemObjects.SDK.IMessage @__LocalMessage = ((RemObjects.SDK.IClientAsyncResult)(@__AsyncResult)).Message;
            try
            {
                string Result = @__LocalMessage.ReadAnsiString("Result");
                return Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual System.Threading.Tasks.Task<string> GuardaFotoVehiculoAsync(string Referencia, RemObjects.SDK.Types.Binary Foto)
        {
            return System.Threading.Tasks.Task<string>.Factory.FromAsync(this.BeginGuardaFotoVehiculo(Referencia, Foto, null, null), new System.Func<System.IAsyncResult, string>(this.EndGuardaFotoVehiculo));
        }

        public virtual System.IAsyncResult BeginValidaQREmpadronar(string Referencia, System.AsyncCallback @__Callback, object @__UserData)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "ValidaQREmpadronar");
                @__LocalMessage.WriteAnsiString("Referencia", Referencia);
                @__LocalMessage.FinalizeMessage();
                return ClientChannel.AsyncDispatch(@__LocalMessage, @__Callback, @__UserData);
            }
            catch (System.Exception ex)
            {
                this.@__ClearMessage(@__LocalMessage);
                throw ex;
            }
        }

        public virtual TValidaQREmpadronar EndValidaQREmpadronar(System.IAsyncResult @__AsyncResult)
        {
            RemObjects.SDK.IMessage @__LocalMessage = ((RemObjects.SDK.IClientAsyncResult)(@__AsyncResult)).Message;
            try
            {
                TValidaQREmpadronar Result = ((TValidaQREmpadronar)(@__LocalMessage.Read("Result", typeof(TValidaQREmpadronar), RemObjects.SDK.StreamingFormat.Default)));
                return Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual System.Threading.Tasks.Task<TValidaQREmpadronar> ValidaQREmpadronarAsync(string Referencia)
        {
            return System.Threading.Tasks.Task<TValidaQREmpadronar>.Factory.FromAsync(this.BeginValidaQREmpadronar(Referencia, null, null), new System.Func<System.IAsyncResult, TValidaQREmpadronar>(this.EndValidaQREmpadronar));
        }

        public virtual System.IAsyncResult BeginCambiaDigitoSeguridadVehiculo(int VehiculoID, int DigitoSeguridad, System.AsyncCallback @__Callback, object @__UserData)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryFlotillas", ActiveInterfaceName, "CambiaDigitoSeguridadVehiculo");
                @__LocalMessage.WriteInt32("VehiculoID", VehiculoID);
                @__LocalMessage.WriteInt32("DigitoSeguridad", DigitoSeguridad);
                @__LocalMessage.FinalizeMessage();
                return ClientChannel.AsyncDispatch(@__LocalMessage, @__Callback, @__UserData);
            }
            catch (System.Exception ex)
            {
                this.@__ClearMessage(@__LocalMessage);
                throw ex;
            }
        }

        public virtual bool EndCambiaDigitoSeguridadVehiculo(System.IAsyncResult @__AsyncResult)
        {
            RemObjects.SDK.IMessage @__LocalMessage = ((RemObjects.SDK.IClientAsyncResult)(@__AsyncResult)).Message;
            try
            {
                bool Result = @__LocalMessage.ReadBoolean("Result");
                return Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual System.Threading.Tasks.Task<bool> CambiaDigitoSeguridadVehiculoAsync(int VehiculoID, int DigitoSeguridad)
        {
            return System.Threading.Tasks.Task<bool>.Factory.FromAsync(this.BeginCambiaDigitoSeguridadVehiculo(VehiculoID, DigitoSeguridad, null, null), new System.Func<System.IAsyncResult, bool>(this.EndCambiaDigitoSeguridadVehiculo));
        }
    }

    public class CoServiceFlotillasAsync
    {

        public static IServiceFlotillas_Async Create(RemObjects.SDK.IMessage message, RemObjects.SDK.IClientChannel clientChannel)
        {
            return new ServiceFlotillas_AsyncProxy(message, clientChannel);
        }

        public static IServiceFlotillas_Async Create(RemObjects.SDK.IRemoteService remoteService)
        {
            return new ServiceFlotillas_AsyncProxy(remoteService);
        }

        public static IServiceFlotillas_Async Create(System.Uri uri)
        {
            return new ServiceFlotillas_AsyncProxy(uri);
        }

        public static IServiceFlotillas_Async Create(string url)
        {
            return new ServiceFlotillas_AsyncProxy(url);
        }
    }
}
