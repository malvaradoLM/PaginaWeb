//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Requires RODL file LibraryFlotillas (..\..\..\..\Users\Marco\Proyectos\Cistem\CistemFlotillas\Codigo Fuente\Server\LibraryFlotillas.RODL) in the same namespace.
namespace LibraryWEB
{
    using System;
    using System.Collections.Generic;
    using RemObjects.SDK;
    using RemObjects.SDK.Types;
    using LibraryFlotillas;


    [System.Serializable()]
    [RemObjects.SDK.Remotable(ActivatorClass = typeof(Impresion_Activator))]
    [System.Reflection.ObfuscationAttribute(Exclude = true)]
    public partial class Impresion : RemObjects.SDK.Types.ComplexType
    {

        private string @__Ruta;

        private string @__Error;

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string Ruta
        {
            get
            {
                return @__Ruta;
            }
            set
            {
                @__Ruta = value;
                this.TriggerPropertyChanged("Ruta");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string Error
        {
            get
            {
                return @__Error;
            }
            set
            {
                @__Error = value;
                this.TriggerPropertyChanged("Error");
            }
        }

        public override void ReadComplex(RemObjects.SDK.Serializer serializer)
        {
            if (serializer.RecordStrictOrder)
            {
                Ruta = serializer.ReadAnsiString("Ruta");
                Error = serializer.ReadAnsiString("Error");
            }
            else
            {
                Error = serializer.ReadAnsiString("Error");
                Ruta = serializer.ReadAnsiString("Ruta");
            }
        }

        public override void WriteComplex(RemObjects.SDK.Serializer serializer)
        {
            if (serializer.RecordStrictOrder)
            {
                serializer.WriteAnsiString("Ruta", Ruta);
                serializer.WriteAnsiString("Error", Error);
            }
            else
            {
                serializer.WriteAnsiString("Error", Error);
                serializer.WriteAnsiString("Ruta", Ruta);
            }
        }
    }

    [RemObjects.SDK.Activator()]
    [System.Reflection.ObfuscationAttribute(Exclude = true, ApplyToMembers = false)]
    public class Impresion_Activator : object, RemObjects.SDK.ITypeActivator
    {

        public Impresion_Activator()
        {
        }

        public object CreateInstance()
        {
            return new Impresion();
        }
    }

    [System.Serializable()]
    [RemObjects.SDK.Remotable(ActivatorClass = typeof(TWebFacturaE_Activator))]
    [System.Reflection.ObfuscationAttribute(Exclude = true)]
    public partial class TWebFacturaE : RemObjects.SDK.Types.ComplexType
    {

        private string @__RutaPDF;

        private string @__RutaXML;

        private string @__Error;

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string RutaPDF
        {
            get
            {
                return @__RutaPDF;
            }
            set
            {
                @__RutaPDF = value;
                this.TriggerPropertyChanged("RutaPDF");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string RutaXML
        {
            get
            {
                return @__RutaXML;
            }
            set
            {
                @__RutaXML = value;
                this.TriggerPropertyChanged("RutaXML");
            }
        }

        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string Error
        {
            get
            {
                return @__Error;
            }
            set
            {
                @__Error = value;
                this.TriggerPropertyChanged("Error");
            }
        }

        public override void ReadComplex(RemObjects.SDK.Serializer serializer)
        {
            if (serializer.RecordStrictOrder)
            {
                RutaPDF = serializer.ReadAnsiString("RutaPDF");
                RutaXML = serializer.ReadAnsiString("RutaXML");
                Error = serializer.ReadAnsiString("Error");
            }
            else
            {
                Error = serializer.ReadAnsiString("Error");
                RutaPDF = serializer.ReadAnsiString("RutaPDF");
                RutaXML = serializer.ReadAnsiString("RutaXML");
            }
        }

        public override void WriteComplex(RemObjects.SDK.Serializer serializer)
        {
            if (serializer.RecordStrictOrder)
            {
                serializer.WriteAnsiString("RutaPDF", RutaPDF);
                serializer.WriteAnsiString("RutaXML", RutaXML);
                serializer.WriteAnsiString("Error", Error);
            }
            else
            {
                serializer.WriteAnsiString("Error", Error);
                serializer.WriteAnsiString("RutaPDF", RutaPDF);
                serializer.WriteAnsiString("RutaXML", RutaXML);
            }
        }
    }

    [RemObjects.SDK.Activator()]
    [System.Reflection.ObfuscationAttribute(Exclude = true, ApplyToMembers = false)]
    public class TWebFacturaE_Activator : object, RemObjects.SDK.ITypeActivator
    {

        public TWebFacturaE_Activator()
        {
        }

        public object CreateInstance()
        {
            return new TWebFacturaE();
        }
    }

    public interface IServiceWEB : RemObjects.SDK.IROService
    {

        Impresion ImprimirDirecto(string CualReporte, int IdentificadorID, TParametrosF AParametros, string Ruta, string TipoArchivo);

        Impresion Imprimir(string CualReporte, int IdentificadorID, string AParametros, string Ruta, string TipoArchivo);

        Impresion Imprimir2(string CualReporte, int IdentificadorID, string AParametros, string Ruta, string TipoArchivo);

        TWebFacturaE XML(string Serie, int Folio, string Campo, string CampoValor, string Ruta);

        TWebFacturaE XML2(string Serie, int Folio, string Campo, string CampoValor, string Ruta);

        void Mail(string Serie, int Folio);

        void Mail2(string Serie, int Folio);

        bool MailFlotillas(int ID, int Tipo, int ClienteID);

        bool MailCancelaFacturaFlotillas(string Serie, int Folio);

        RemObjects.SDK.Types.Binary AdminPDF(string Serie, int Folio, int EstacionID, int FacturaID, string Formato);

        void EnviaMailMasivo(string Template, int Ejercicio, int Periodo);
    }

    public partial class ServiceWEB_Proxy : RemObjects.SDK.Proxy, IServiceWEB
    {

        public ServiceWEB_Proxy(RemObjects.SDK.IMessage message, RemObjects.SDK.IClientChannel clientChannel) :
                base(message, clientChannel)
        {
        }

        public ServiceWEB_Proxy(RemObjects.SDK.IMessage message, RemObjects.SDK.IClientChannel clientChannel, string interfaceName) :
                base(message, clientChannel, interfaceName)
        {
        }

        public ServiceWEB_Proxy(RemObjects.SDK.IRemoteService remoteService) :
                base(remoteService)
        {
        }

        public ServiceWEB_Proxy(RemObjects.SDK.IRemoteService remoteService, string interfaceName) :
                base(remoteService, interfaceName)
        {
        }

        public ServiceWEB_Proxy(System.Uri uri) :
                base(uri)
        {
        }

        public ServiceWEB_Proxy(string url) :
                base(url)
        {
        }

        public override string InterfaceName
        {
            get
            {
                return "ServiceWEB";
            }
        }

        public virtual Impresion ImprimirDirecto(string CualReporte, int IdentificadorID, TParametrosF AParametros, string Ruta, string TipoArchivo)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryWEB", ActiveInterfaceName, "ImprimirDirecto");
                @__LocalMessage.WriteAnsiString("CualReporte", CualReporte);
                @__LocalMessage.WriteInt32("IdentificadorID", IdentificadorID);
                @__LocalMessage.Write("AParametros", AParametros, typeof(TParametrosF), RemObjects.SDK.StreamingFormat.Default);
                @__LocalMessage.WriteAnsiString("Ruta", Ruta);
                @__LocalMessage.WriteAnsiString("TipoArchivo", TipoArchivo);
                @__LocalMessage.FinalizeMessage();
                ClientChannel.Dispatch(@__LocalMessage);
                Impresion _Result = ((Impresion)(@__LocalMessage.Read("Result", typeof(Impresion), RemObjects.SDK.StreamingFormat.Default)));
                return _Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual Impresion Imprimir(string CualReporte, int IdentificadorID, string AParametros, string Ruta, string TipoArchivo)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryWEB", ActiveInterfaceName, "Imprimir");
                @__LocalMessage.WriteAnsiString("CualReporte", CualReporte);
                @__LocalMessage.WriteInt32("IdentificadorID", IdentificadorID);
                @__LocalMessage.WriteAnsiString("AParametros", AParametros);
                @__LocalMessage.WriteAnsiString("Ruta", Ruta);
                @__LocalMessage.WriteAnsiString("TipoArchivo", TipoArchivo);
                @__LocalMessage.FinalizeMessage();
                ClientChannel.Dispatch(@__LocalMessage);
                Impresion _Result = ((Impresion)(@__LocalMessage.Read("Result", typeof(Impresion), RemObjects.SDK.StreamingFormat.Default)));
                return _Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual Impresion Imprimir2(string CualReporte, int IdentificadorID, string AParametros, string Ruta, string TipoArchivo)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryWEB", ActiveInterfaceName, "Imprimir2");
                @__LocalMessage.WriteAnsiString("CualReporte", CualReporte);
                @__LocalMessage.WriteInt32("IdentificadorID", IdentificadorID);
                @__LocalMessage.WriteAnsiString("AParametros", AParametros);
                @__LocalMessage.WriteAnsiString("Ruta", Ruta);
                @__LocalMessage.WriteAnsiString("TipoArchivo", TipoArchivo);
                @__LocalMessage.FinalizeMessage();
                ClientChannel.Dispatch(@__LocalMessage);
                Impresion _Result = ((Impresion)(@__LocalMessage.Read("Result", typeof(Impresion), RemObjects.SDK.StreamingFormat.Default)));
                return _Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual TWebFacturaE XML(string Serie, int Folio, string Campo, string CampoValor, string Ruta)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryWEB", ActiveInterfaceName, "XML");
                @__LocalMessage.WriteAnsiString("Serie", Serie);
                @__LocalMessage.WriteInt32("Folio", Folio);
                @__LocalMessage.WriteAnsiString("Campo", Campo);
                @__LocalMessage.WriteAnsiString("CampoValor", CampoValor);
                @__LocalMessage.WriteAnsiString("Ruta", Ruta);
                @__LocalMessage.FinalizeMessage();
                ClientChannel.Dispatch(@__LocalMessage);
                TWebFacturaE _Result = ((TWebFacturaE)(@__LocalMessage.Read("Result", typeof(TWebFacturaE), RemObjects.SDK.StreamingFormat.Default)));
                return _Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual TWebFacturaE XML2(string Serie, int Folio, string Campo, string CampoValor, string Ruta)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryWEB", ActiveInterfaceName, "XML2");
                @__LocalMessage.WriteAnsiString("Serie", Serie);
                @__LocalMessage.WriteInt32("Folio", Folio);
                @__LocalMessage.WriteAnsiString("Campo", Campo);
                @__LocalMessage.WriteAnsiString("CampoValor", CampoValor);
                @__LocalMessage.WriteAnsiString("Ruta", Ruta);
                @__LocalMessage.FinalizeMessage();
                ClientChannel.Dispatch(@__LocalMessage);
                TWebFacturaE _Result = ((TWebFacturaE)(@__LocalMessage.Read("Result", typeof(TWebFacturaE), RemObjects.SDK.StreamingFormat.Default)));
                return _Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual void Mail(string Serie, int Folio)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryWEB", ActiveInterfaceName, "Mail");
                @__LocalMessage.WriteAnsiString("Serie", Serie);
                @__LocalMessage.WriteInt32("Folio", Folio);
                @__LocalMessage.FinalizeMessage();
                ClientChannel.Dispatch(@__LocalMessage);
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual void Mail2(string Serie, int Folio)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryWEB", ActiveInterfaceName, "Mail2");
                @__LocalMessage.WriteAnsiString("Serie", Serie);
                @__LocalMessage.WriteInt32("Folio", Folio);
                @__LocalMessage.FinalizeMessage();
                ClientChannel.Dispatch(@__LocalMessage);
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual bool MailFlotillas(int ID, int Tipo, int ClienteID)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryWEB", ActiveInterfaceName, "MailFlotillas");
                @__LocalMessage.WriteInt32("ID", ID);
                @__LocalMessage.WriteInt32("Tipo", Tipo);
                @__LocalMessage.WriteInt32("ClienteID", ClienteID);
                @__LocalMessage.FinalizeMessage();
                ClientChannel.Dispatch(@__LocalMessage);
                bool _Result = @__LocalMessage.ReadBoolean("Result");
                return _Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual bool MailCancelaFacturaFlotillas(string Serie, int Folio)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryWEB", ActiveInterfaceName, "MailCancelaFacturaFlotillas");
                @__LocalMessage.WriteAnsiString("Serie", Serie);
                @__LocalMessage.WriteInt32("Folio", Folio);
                @__LocalMessage.FinalizeMessage();
                ClientChannel.Dispatch(@__LocalMessage);
                bool _Result = @__LocalMessage.ReadBoolean("Result");
                return _Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual RemObjects.SDK.Types.Binary AdminPDF(string Serie, int Folio, int EstacionID, int FacturaID, string Formato)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryWEB", ActiveInterfaceName, "AdminPDF");
                @__LocalMessage.WriteAnsiString("Serie", Serie);
                @__LocalMessage.WriteInt32("Folio", Folio);
                @__LocalMessage.WriteInt32("EstacionID", EstacionID);
                @__LocalMessage.WriteInt32("FacturaID", FacturaID);
                @__LocalMessage.WriteAnsiString("Formato", Formato);
                @__LocalMessage.FinalizeMessage();
                ClientChannel.Dispatch(@__LocalMessage);
                RemObjects.SDK.Types.Binary _Result = ((RemObjects.SDK.Types.Binary)(@__LocalMessage.Read("Result", typeof(RemObjects.SDK.Types.Binary), RemObjects.SDK.StreamingFormat.Default)));
                return _Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual void EnviaMailMasivo(string Template, int Ejercicio, int Periodo)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryWEB", ActiveInterfaceName, "EnviaMailMasivo");
                @__LocalMessage.WriteAnsiString("Template", Template);
                @__LocalMessage.WriteInt32("Ejercicio", Ejercicio);
                @__LocalMessage.WriteInt32("Periodo", Periodo);
                @__LocalMessage.FinalizeMessage();
                ClientChannel.Dispatch(@__LocalMessage);
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }
    }

    public class CoServiceWEB
    {

        public static IServiceWEB Create(RemObjects.SDK.IMessage message, RemObjects.SDK.IClientChannel clientChannel)
        {
            return new ServiceWEB_Proxy(message, clientChannel);
        }

        public static IServiceWEB Create(RemObjects.SDK.IRemoteService remoteService)
        {
            return new ServiceWEB_Proxy(remoteService);
        }

        public static IServiceWEB Create(System.Uri uri)
        {
            return new ServiceWEB_Proxy(uri);
        }

        public static IServiceWEB Create(string url)
        {
            return new ServiceWEB_Proxy(url);
        }
    }

    public interface IServiceWEB_Async : RemObjects.SDK.IROService_Async
    {

        System.IAsyncResult BeginImprimirDirecto(string CualReporte, int IdentificadorID, TParametrosF AParametros, string Ruta, string TipoArchivo, System.AsyncCallback @__Callback, object @__UserData);

        Impresion EndImprimirDirecto(System.IAsyncResult @__AsyncResult);

        System.Threading.Tasks.Task<Impresion> ImprimirDirectoAsync(string CualReporte, int IdentificadorID, TParametrosF AParametros, string Ruta, string TipoArchivo);

        System.IAsyncResult BeginImprimir(string CualReporte, int IdentificadorID, string AParametros, string Ruta, string TipoArchivo, System.AsyncCallback @__Callback, object @__UserData);

        Impresion EndImprimir(System.IAsyncResult @__AsyncResult);

        System.Threading.Tasks.Task<Impresion> ImprimirAsync(string CualReporte, int IdentificadorID, string AParametros, string Ruta, string TipoArchivo);

        System.IAsyncResult BeginImprimir2(string CualReporte, int IdentificadorID, string AParametros, string Ruta, string TipoArchivo, System.AsyncCallback @__Callback, object @__UserData);

        Impresion EndImprimir2(System.IAsyncResult @__AsyncResult);

        System.Threading.Tasks.Task<Impresion> Imprimir2Async(string CualReporte, int IdentificadorID, string AParametros, string Ruta, string TipoArchivo);

        System.IAsyncResult BeginXML(string Serie, int Folio, string Campo, string CampoValor, string Ruta, System.AsyncCallback @__Callback, object @__UserData);

        TWebFacturaE EndXML(System.IAsyncResult @__AsyncResult);

        System.Threading.Tasks.Task<TWebFacturaE> XMLAsync(string Serie, int Folio, string Campo, string CampoValor, string Ruta);

        System.IAsyncResult BeginXML2(string Serie, int Folio, string Campo, string CampoValor, string Ruta, System.AsyncCallback @__Callback, object @__UserData);

        TWebFacturaE EndXML2(System.IAsyncResult @__AsyncResult);

        System.Threading.Tasks.Task<TWebFacturaE> XML2Async(string Serie, int Folio, string Campo, string CampoValor, string Ruta);

        System.IAsyncResult BeginMail(string Serie, int Folio, System.AsyncCallback @__Callback, object @__UserData);

        void EndMail(System.IAsyncResult @__AsyncResult);

        System.Threading.Tasks.Task MailAsync(string Serie, int Folio);

        System.IAsyncResult BeginMail2(string Serie, int Folio, System.AsyncCallback @__Callback, object @__UserData);

        void EndMail2(System.IAsyncResult @__AsyncResult);

        System.Threading.Tasks.Task Mail2Async(string Serie, int Folio);

        System.IAsyncResult BeginMailFlotillas(int ID, int Tipo, int ClienteID, System.AsyncCallback @__Callback, object @__UserData);

        bool EndMailFlotillas(System.IAsyncResult @__AsyncResult);

        System.Threading.Tasks.Task<bool> MailFlotillasAsync(int ID, int Tipo, int ClienteID);

        System.IAsyncResult BeginMailCancelaFacturaFlotillas(string Serie, int Folio, System.AsyncCallback @__Callback, object @__UserData);

        bool EndMailCancelaFacturaFlotillas(System.IAsyncResult @__AsyncResult);

        System.Threading.Tasks.Task<bool> MailCancelaFacturaFlotillasAsync(string Serie, int Folio);

        System.IAsyncResult BeginAdminPDF(string Serie, int Folio, int EstacionID, int FacturaID, string Formato, System.AsyncCallback @__Callback, object @__UserData);

        RemObjects.SDK.Types.Binary EndAdminPDF(System.IAsyncResult @__AsyncResult);

        System.Threading.Tasks.Task<RemObjects.SDK.Types.Binary> AdminPDFAsync(string Serie, int Folio, int EstacionID, int FacturaID, string Formato);

        System.IAsyncResult BeginEnviaMailMasivo(string Template, int Ejercicio, int Periodo, System.AsyncCallback @__Callback, object @__UserData);

        void EndEnviaMailMasivo(System.IAsyncResult @__AsyncResult);

        System.Threading.Tasks.Task EnviaMailMasivoAsync(string Template, int Ejercicio, int Periodo);
    }

    public partial class ServiceWEB_AsyncProxy : RemObjects.SDK.AsyncProxy, IServiceWEB_Async
    {

        public ServiceWEB_AsyncProxy(RemObjects.SDK.IMessage message, RemObjects.SDK.IClientChannel clientChannel) :
                base(message, clientChannel)
        {
        }

        public ServiceWEB_AsyncProxy(RemObjects.SDK.IMessage message, RemObjects.SDK.IClientChannel clientChannel, string interfaceName) :
                base(message, clientChannel, interfaceName)
        {
        }

        public ServiceWEB_AsyncProxy(RemObjects.SDK.IRemoteService remoteService) :
                base(remoteService)
        {
        }

        public ServiceWEB_AsyncProxy(RemObjects.SDK.IRemoteService remoteService, string interfaceName) :
                base(remoteService, interfaceName)
        {
        }

        public ServiceWEB_AsyncProxy(System.Uri uri) :
                base(uri)
        {
        }

        public ServiceWEB_AsyncProxy(string url) :
                base(url)
        {
        }

        public override string InterfaceName
        {
            get
            {
                return "ServiceWEB";
            }
        }

        public virtual System.IAsyncResult BeginImprimirDirecto(string CualReporte, int IdentificadorID, TParametrosF AParametros, string Ruta, string TipoArchivo, System.AsyncCallback @__Callback, object @__UserData)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryWEB", ActiveInterfaceName, "ImprimirDirecto");
                @__LocalMessage.WriteAnsiString("CualReporte", CualReporte);
                @__LocalMessage.WriteInt32("IdentificadorID", IdentificadorID);
                @__LocalMessage.Write("AParametros", AParametros, typeof(TParametrosF), RemObjects.SDK.StreamingFormat.Default);
                @__LocalMessage.WriteAnsiString("Ruta", Ruta);
                @__LocalMessage.WriteAnsiString("TipoArchivo", TipoArchivo);
                @__LocalMessage.FinalizeMessage();
                return ClientChannel.AsyncDispatch(@__LocalMessage, @__Callback, @__UserData);
            }
            catch (System.Exception ex)
            {
                this.@__ClearMessage(@__LocalMessage);
                throw ex;
            }
        }

        public virtual Impresion EndImprimirDirecto(System.IAsyncResult @__AsyncResult)
        {
            RemObjects.SDK.IMessage @__LocalMessage = ((RemObjects.SDK.IClientAsyncResult)(@__AsyncResult)).Message;
            try
            {
                Impresion Result = ((Impresion)(@__LocalMessage.Read("Result", typeof(Impresion), RemObjects.SDK.StreamingFormat.Default)));
                return Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual System.Threading.Tasks.Task<Impresion> ImprimirDirectoAsync(string CualReporte, int IdentificadorID, TParametrosF AParametros, string Ruta, string TipoArchivo)
        {
            return System.Threading.Tasks.Task<Impresion>.Factory.FromAsync(this.BeginImprimirDirecto(CualReporte, IdentificadorID, AParametros, Ruta, TipoArchivo, null, null), new System.Func<System.IAsyncResult, Impresion>(this.EndImprimirDirecto));
        }

        public virtual System.IAsyncResult BeginImprimir(string CualReporte, int IdentificadorID, string AParametros, string Ruta, string TipoArchivo, System.AsyncCallback @__Callback, object @__UserData)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryWEB", ActiveInterfaceName, "Imprimir");
                @__LocalMessage.WriteAnsiString("CualReporte", CualReporte);
                @__LocalMessage.WriteInt32("IdentificadorID", IdentificadorID);
                @__LocalMessage.WriteAnsiString("AParametros", AParametros);
                @__LocalMessage.WriteAnsiString("Ruta", Ruta);
                @__LocalMessage.WriteAnsiString("TipoArchivo", TipoArchivo);
                @__LocalMessage.FinalizeMessage();
                return ClientChannel.AsyncDispatch(@__LocalMessage, @__Callback, @__UserData);
            }
            catch (System.Exception ex)
            {
                this.@__ClearMessage(@__LocalMessage);
                throw ex;
            }
        }

        public virtual Impresion EndImprimir(System.IAsyncResult @__AsyncResult)
        {
            RemObjects.SDK.IMessage @__LocalMessage = ((RemObjects.SDK.IClientAsyncResult)(@__AsyncResult)).Message;
            try
            {
                Impresion Result = ((Impresion)(@__LocalMessage.Read("Result", typeof(Impresion), RemObjects.SDK.StreamingFormat.Default)));
                return Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual System.Threading.Tasks.Task<Impresion> ImprimirAsync(string CualReporte, int IdentificadorID, string AParametros, string Ruta, string TipoArchivo)
        {
            return System.Threading.Tasks.Task<Impresion>.Factory.FromAsync(this.BeginImprimir(CualReporte, IdentificadorID, AParametros, Ruta, TipoArchivo, null, null), new System.Func<System.IAsyncResult, Impresion>(this.EndImprimir));
        }

        public virtual System.IAsyncResult BeginImprimir2(string CualReporte, int IdentificadorID, string AParametros, string Ruta, string TipoArchivo, System.AsyncCallback @__Callback, object @__UserData)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryWEB", ActiveInterfaceName, "Imprimir2");
                @__LocalMessage.WriteAnsiString("CualReporte", CualReporte);
                @__LocalMessage.WriteInt32("IdentificadorID", IdentificadorID);
                @__LocalMessage.WriteAnsiString("AParametros", AParametros);
                @__LocalMessage.WriteAnsiString("Ruta", Ruta);
                @__LocalMessage.WriteAnsiString("TipoArchivo", TipoArchivo);
                @__LocalMessage.FinalizeMessage();
                return ClientChannel.AsyncDispatch(@__LocalMessage, @__Callback, @__UserData);
            }
            catch (System.Exception ex)
            {
                this.@__ClearMessage(@__LocalMessage);
                throw ex;
            }
        }

        public virtual Impresion EndImprimir2(System.IAsyncResult @__AsyncResult)
        {
            RemObjects.SDK.IMessage @__LocalMessage = ((RemObjects.SDK.IClientAsyncResult)(@__AsyncResult)).Message;
            try
            {
                Impresion Result = ((Impresion)(@__LocalMessage.Read("Result", typeof(Impresion), RemObjects.SDK.StreamingFormat.Default)));
                return Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual System.Threading.Tasks.Task<Impresion> Imprimir2Async(string CualReporte, int IdentificadorID, string AParametros, string Ruta, string TipoArchivo)
        {
            return System.Threading.Tasks.Task<Impresion>.Factory.FromAsync(this.BeginImprimir2(CualReporte, IdentificadorID, AParametros, Ruta, TipoArchivo, null, null), new System.Func<System.IAsyncResult, Impresion>(this.EndImprimir2));
        }

        public virtual System.IAsyncResult BeginXML(string Serie, int Folio, string Campo, string CampoValor, string Ruta, System.AsyncCallback @__Callback, object @__UserData)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryWEB", ActiveInterfaceName, "XML");
                @__LocalMessage.WriteAnsiString("Serie", Serie);
                @__LocalMessage.WriteInt32("Folio", Folio);
                @__LocalMessage.WriteAnsiString("Campo", Campo);
                @__LocalMessage.WriteAnsiString("CampoValor", CampoValor);
                @__LocalMessage.WriteAnsiString("Ruta", Ruta);
                @__LocalMessage.FinalizeMessage();
                return ClientChannel.AsyncDispatch(@__LocalMessage, @__Callback, @__UserData);
            }
            catch (System.Exception ex)
            {
                this.@__ClearMessage(@__LocalMessage);
                throw ex;
            }
        }

        public virtual TWebFacturaE EndXML(System.IAsyncResult @__AsyncResult)
        {
            RemObjects.SDK.IMessage @__LocalMessage = ((RemObjects.SDK.IClientAsyncResult)(@__AsyncResult)).Message;
            try
            {
                TWebFacturaE Result = ((TWebFacturaE)(@__LocalMessage.Read("Result", typeof(TWebFacturaE), RemObjects.SDK.StreamingFormat.Default)));
                return Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual System.Threading.Tasks.Task<TWebFacturaE> XMLAsync(string Serie, int Folio, string Campo, string CampoValor, string Ruta)
        {
            return System.Threading.Tasks.Task<TWebFacturaE>.Factory.FromAsync(this.BeginXML(Serie, Folio, Campo, CampoValor, Ruta, null, null), new System.Func<System.IAsyncResult, TWebFacturaE>(this.EndXML));
        }

        public virtual System.IAsyncResult BeginXML2(string Serie, int Folio, string Campo, string CampoValor, string Ruta, System.AsyncCallback @__Callback, object @__UserData)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryWEB", ActiveInterfaceName, "XML2");
                @__LocalMessage.WriteAnsiString("Serie", Serie);
                @__LocalMessage.WriteInt32("Folio", Folio);
                @__LocalMessage.WriteAnsiString("Campo", Campo);
                @__LocalMessage.WriteAnsiString("CampoValor", CampoValor);
                @__LocalMessage.WriteAnsiString("Ruta", Ruta);
                @__LocalMessage.FinalizeMessage();
                return ClientChannel.AsyncDispatch(@__LocalMessage, @__Callback, @__UserData);
            }
            catch (System.Exception ex)
            {
                this.@__ClearMessage(@__LocalMessage);
                throw ex;
            }
        }

        public virtual TWebFacturaE EndXML2(System.IAsyncResult @__AsyncResult)
        {
            RemObjects.SDK.IMessage @__LocalMessage = ((RemObjects.SDK.IClientAsyncResult)(@__AsyncResult)).Message;
            try
            {
                TWebFacturaE Result = ((TWebFacturaE)(@__LocalMessage.Read("Result", typeof(TWebFacturaE), RemObjects.SDK.StreamingFormat.Default)));
                return Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual System.Threading.Tasks.Task<TWebFacturaE> XML2Async(string Serie, int Folio, string Campo, string CampoValor, string Ruta)
        {
            return System.Threading.Tasks.Task<TWebFacturaE>.Factory.FromAsync(this.BeginXML2(Serie, Folio, Campo, CampoValor, Ruta, null, null), new System.Func<System.IAsyncResult, TWebFacturaE>(this.EndXML2));
        }

        public virtual System.IAsyncResult BeginMail(string Serie, int Folio, System.AsyncCallback @__Callback, object @__UserData)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryWEB", ActiveInterfaceName, "Mail");
                @__LocalMessage.WriteAnsiString("Serie", Serie);
                @__LocalMessage.WriteInt32("Folio", Folio);
                @__LocalMessage.FinalizeMessage();
                return ClientChannel.AsyncDispatch(@__LocalMessage, @__Callback, @__UserData);
            }
            catch (System.Exception ex)
            {
                this.@__ClearMessage(@__LocalMessage);
                throw ex;
            }
        }

        public virtual void EndMail(System.IAsyncResult @__AsyncResult)
        {
            RemObjects.SDK.IMessage @__LocalMessage = ((RemObjects.SDK.IClientAsyncResult)(@__AsyncResult)).Message;
            try
            {
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual System.Threading.Tasks.Task MailAsync(string Serie, int Folio)
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(this.BeginMail(Serie, Folio, null, null), new System.Action<System.IAsyncResult>(this.EndMail));
        }

        public virtual System.IAsyncResult BeginMail2(string Serie, int Folio, System.AsyncCallback @__Callback, object @__UserData)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryWEB", ActiveInterfaceName, "Mail2");
                @__LocalMessage.WriteAnsiString("Serie", Serie);
                @__LocalMessage.WriteInt32("Folio", Folio);
                @__LocalMessage.FinalizeMessage();
                return ClientChannel.AsyncDispatch(@__LocalMessage, @__Callback, @__UserData);
            }
            catch (System.Exception ex)
            {
                this.@__ClearMessage(@__LocalMessage);
                throw ex;
            }
        }

        public virtual void EndMail2(System.IAsyncResult @__AsyncResult)
        {
            RemObjects.SDK.IMessage @__LocalMessage = ((RemObjects.SDK.IClientAsyncResult)(@__AsyncResult)).Message;
            try
            {
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual System.Threading.Tasks.Task Mail2Async(string Serie, int Folio)
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(this.BeginMail2(Serie, Folio, null, null), new System.Action<System.IAsyncResult>(this.EndMail2));
        }

        public virtual System.IAsyncResult BeginMailFlotillas(int ID, int Tipo, int ClienteID, System.AsyncCallback @__Callback, object @__UserData)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryWEB", ActiveInterfaceName, "MailFlotillas");
                @__LocalMessage.WriteInt32("ID", ID);
                @__LocalMessage.WriteInt32("Tipo", Tipo);
                @__LocalMessage.WriteInt32("ClienteID", ClienteID);
                @__LocalMessage.FinalizeMessage();
                return ClientChannel.AsyncDispatch(@__LocalMessage, @__Callback, @__UserData);
            }
            catch (System.Exception ex)
            {
                this.@__ClearMessage(@__LocalMessage);
                throw ex;
            }
        }

        public virtual bool EndMailFlotillas(System.IAsyncResult @__AsyncResult)
        {
            RemObjects.SDK.IMessage @__LocalMessage = ((RemObjects.SDK.IClientAsyncResult)(@__AsyncResult)).Message;
            try
            {
                bool Result = @__LocalMessage.ReadBoolean("Result");
                return Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual System.Threading.Tasks.Task<bool> MailFlotillasAsync(int ID, int Tipo, int ClienteID)
        {
            return System.Threading.Tasks.Task<bool>.Factory.FromAsync(this.BeginMailFlotillas(ID, Tipo, ClienteID, null, null), new System.Func<System.IAsyncResult, bool>(this.EndMailFlotillas));
        }

        public virtual System.IAsyncResult BeginMailCancelaFacturaFlotillas(string Serie, int Folio, System.AsyncCallback @__Callback, object @__UserData)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryWEB", ActiveInterfaceName, "MailCancelaFacturaFlotillas");
                @__LocalMessage.WriteAnsiString("Serie", Serie);
                @__LocalMessage.WriteInt32("Folio", Folio);
                @__LocalMessage.FinalizeMessage();
                return ClientChannel.AsyncDispatch(@__LocalMessage, @__Callback, @__UserData);
            }
            catch (System.Exception ex)
            {
                this.@__ClearMessage(@__LocalMessage);
                throw ex;
            }
        }

        public virtual bool EndMailCancelaFacturaFlotillas(System.IAsyncResult @__AsyncResult)
        {
            RemObjects.SDK.IMessage @__LocalMessage = ((RemObjects.SDK.IClientAsyncResult)(@__AsyncResult)).Message;
            try
            {
                bool Result = @__LocalMessage.ReadBoolean("Result");
                return Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual System.Threading.Tasks.Task<bool> MailCancelaFacturaFlotillasAsync(string Serie, int Folio)
        {
            return System.Threading.Tasks.Task<bool>.Factory.FromAsync(this.BeginMailCancelaFacturaFlotillas(Serie, Folio, null, null), new System.Func<System.IAsyncResult, bool>(this.EndMailCancelaFacturaFlotillas));
        }

        public virtual System.IAsyncResult BeginAdminPDF(string Serie, int Folio, int EstacionID, int FacturaID, string Formato, System.AsyncCallback @__Callback, object @__UserData)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryWEB", ActiveInterfaceName, "AdminPDF");
                @__LocalMessage.WriteAnsiString("Serie", Serie);
                @__LocalMessage.WriteInt32("Folio", Folio);
                @__LocalMessage.WriteInt32("EstacionID", EstacionID);
                @__LocalMessage.WriteInt32("FacturaID", FacturaID);
                @__LocalMessage.WriteAnsiString("Formato", Formato);
                @__LocalMessage.FinalizeMessage();
                return ClientChannel.AsyncDispatch(@__LocalMessage, @__Callback, @__UserData);
            }
            catch (System.Exception ex)
            {
                this.@__ClearMessage(@__LocalMessage);
                throw ex;
            }
        }

        public virtual RemObjects.SDK.Types.Binary EndAdminPDF(System.IAsyncResult @__AsyncResult)
        {
            RemObjects.SDK.IMessage @__LocalMessage = ((RemObjects.SDK.IClientAsyncResult)(@__AsyncResult)).Message;
            try
            {
                RemObjects.SDK.Types.Binary Result = ((RemObjects.SDK.Types.Binary)(@__LocalMessage.Read("Result", typeof(RemObjects.SDK.Types.Binary), RemObjects.SDK.StreamingFormat.Default)));
                return Result;
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual System.Threading.Tasks.Task<RemObjects.SDK.Types.Binary> AdminPDFAsync(string Serie, int Folio, int EstacionID, int FacturaID, string Formato)
        {
            return System.Threading.Tasks.Task<RemObjects.SDK.Types.Binary>.Factory.FromAsync(this.BeginAdminPDF(Serie, Folio, EstacionID, FacturaID, Formato, null, null), new System.Func<System.IAsyncResult, RemObjects.SDK.Types.Binary>(this.EndAdminPDF));
        }

        public virtual System.IAsyncResult BeginEnviaMailMasivo(string Template, int Ejercicio, int Periodo, System.AsyncCallback @__Callback, object @__UserData)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            try
            {
                @__LocalMessage.InitializeRequestMessage(ClientChannel, "LibraryWEB", ActiveInterfaceName, "EnviaMailMasivo");
                @__LocalMessage.WriteAnsiString("Template", Template);
                @__LocalMessage.WriteInt32("Ejercicio", Ejercicio);
                @__LocalMessage.WriteInt32("Periodo", Periodo);
                @__LocalMessage.FinalizeMessage();
                return ClientChannel.AsyncDispatch(@__LocalMessage, @__Callback, @__UserData);
            }
            catch (System.Exception ex)
            {
                this.@__ClearMessage(@__LocalMessage);
                throw ex;
            }
        }

        public virtual void EndEnviaMailMasivo(System.IAsyncResult @__AsyncResult)
        {
            RemObjects.SDK.IMessage @__LocalMessage = ((RemObjects.SDK.IClientAsyncResult)(@__AsyncResult)).Message;
            try
            {
            }
            finally
            {
                this.@__ClearMessage(@__LocalMessage);
            }
        }

        public virtual System.Threading.Tasks.Task EnviaMailMasivoAsync(string Template, int Ejercicio, int Periodo)
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(this.BeginEnviaMailMasivo(Template, Ejercicio, Periodo, null, null), new System.Action<System.IAsyncResult>(this.EndEnviaMailMasivo));
        }
    }

    public class CoServiceWEBAsync
    {

        public static IServiceWEB_Async Create(RemObjects.SDK.IMessage message, RemObjects.SDK.IClientChannel clientChannel)
        {
            return new ServiceWEB_AsyncProxy(message, clientChannel);
        }

        public static IServiceWEB_Async Create(RemObjects.SDK.IRemoteService remoteService)
        {
            return new ServiceWEB_AsyncProxy(remoteService);
        }

        public static IServiceWEB_Async Create(System.Uri uri)
        {
            return new ServiceWEB_AsyncProxy(uri);
        }

        public static IServiceWEB_Async Create(string url)
        {
            return new ServiceWEB_AsyncProxy(url);
        }
    }
}
